"use strict";
(self["webpackChunkmintpop_extension"] = self["webpackChunkmintpop_extension"] || []).push([["vendors-node_modules_viem__esm_index_js"],{

/***/ "./node_modules/@noble/curves/esm/abstract/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@noble/curves/esm/abstract/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   aInRange: () => (/* binding */ aInRange),
/* harmony export */   abool: () => (/* binding */ abool),
/* harmony export */   abytes: () => (/* binding */ abytes),
/* harmony export */   anumber: () => (/* binding */ anumber),
/* harmony export */   asciiToBytes: () => (/* binding */ asciiToBytes),
/* harmony export */   bitGet: () => (/* binding */ bitGet),
/* harmony export */   bitLen: () => (/* binding */ bitLen),
/* harmony export */   bitMask: () => (/* binding */ bitMask),
/* harmony export */   bitSet: () => (/* binding */ bitSet),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   bytesToNumberBE: () => (/* binding */ bytesToNumberBE),
/* harmony export */   bytesToNumberLE: () => (/* binding */ bytesToNumberLE),
/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),
/* harmony export */   concatBytes: () => (/* binding */ concatBytes),
/* harmony export */   copyBytes: () => (/* binding */ copyBytes),
/* harmony export */   createHmacDrbg: () => (/* binding */ createHmacDrbg),
/* harmony export */   ensureBytes: () => (/* binding */ ensureBytes),
/* harmony export */   equalBytes: () => (/* binding */ equalBytes),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),
/* harmony export */   inRange: () => (/* binding */ inRange),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   isHash: () => (/* binding */ isHash),
/* harmony export */   memoized: () => (/* binding */ memoized),
/* harmony export */   notImplemented: () => (/* binding */ notImplemented),
/* harmony export */   numberToBytesBE: () => (/* binding */ numberToBytesBE),
/* harmony export */   numberToBytesLE: () => (/* binding */ numberToBytesLE),
/* harmony export */   numberToHexUnpadded: () => (/* binding */ numberToHexUnpadded),
/* harmony export */   numberToVarBytesBE: () => (/* binding */ numberToVarBytesBE),
/* harmony export */   randomBytes: () => (/* binding */ randomBytes),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   validateObject: () => (/* binding */ validateObject)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/@noble/hashes/esm/utils.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/@noble/curves/esm/utils.js");
/**
 * Deprecated module: moved from curves/abstract/utils.js to curves/utils.js
 * @module
 */

/** @deprecated moved to `@noble/curves/utils.js` */
const abytes = _utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const anumber = _utils_js__WEBPACK_IMPORTED_MODULE_0__.anumber;
/** @deprecated moved to `@noble/curves/utils.js` */
const bytesToHex = _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex;
/** @deprecated moved to `@noble/curves/utils.js` */
const bytesToUtf8 = _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUtf8;
/** @deprecated moved to `@noble/curves/utils.js` */
const concatBytes = _utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const hexToBytes = _utils_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const isBytes = _utils_js__WEBPACK_IMPORTED_MODULE_0__.isBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const randomBytes = _utils_js__WEBPACK_IMPORTED_MODULE_0__.randomBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const utf8ToBytes = _utils_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const abool = _utils_js__WEBPACK_IMPORTED_MODULE_1__.abool;
/** @deprecated moved to `@noble/curves/utils.js` */
const numberToHexUnpadded = _utils_js__WEBPACK_IMPORTED_MODULE_1__.numberToHexUnpadded;
/** @deprecated moved to `@noble/curves/utils.js` */
const hexToNumber = _utils_js__WEBPACK_IMPORTED_MODULE_1__.hexToNumber;
/** @deprecated moved to `@noble/curves/utils.js` */
const bytesToNumberBE = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToNumberBE;
/** @deprecated moved to `@noble/curves/utils.js` */
const bytesToNumberLE = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToNumberLE;
/** @deprecated moved to `@noble/curves/utils.js` */
const numberToBytesBE = _utils_js__WEBPACK_IMPORTED_MODULE_1__.numberToBytesBE;
/** @deprecated moved to `@noble/curves/utils.js` */
const numberToBytesLE = _utils_js__WEBPACK_IMPORTED_MODULE_1__.numberToBytesLE;
/** @deprecated moved to `@noble/curves/utils.js` */
const numberToVarBytesBE = _utils_js__WEBPACK_IMPORTED_MODULE_1__.numberToVarBytesBE;
/** @deprecated moved to `@noble/curves/utils.js` */
const ensureBytes = _utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const equalBytes = _utils_js__WEBPACK_IMPORTED_MODULE_1__.equalBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const copyBytes = _utils_js__WEBPACK_IMPORTED_MODULE_1__.copyBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const asciiToBytes = _utils_js__WEBPACK_IMPORTED_MODULE_1__.asciiToBytes;
/** @deprecated moved to `@noble/curves/utils.js` */
const inRange = _utils_js__WEBPACK_IMPORTED_MODULE_1__.inRange;
/** @deprecated moved to `@noble/curves/utils.js` */
const aInRange = _utils_js__WEBPACK_IMPORTED_MODULE_1__.aInRange;
/** @deprecated moved to `@noble/curves/utils.js` */
const bitLen = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bitLen;
/** @deprecated moved to `@noble/curves/utils.js` */
const bitGet = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bitGet;
/** @deprecated moved to `@noble/curves/utils.js` */
const bitSet = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bitSet;
/** @deprecated moved to `@noble/curves/utils.js` */
const bitMask = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bitMask;
/** @deprecated moved to `@noble/curves/utils.js` */
const createHmacDrbg = _utils_js__WEBPACK_IMPORTED_MODULE_1__.createHmacDrbg;
/** @deprecated moved to `@noble/curves/utils.js` */
const notImplemented = _utils_js__WEBPACK_IMPORTED_MODULE_1__.notImplemented;
/** @deprecated moved to `@noble/curves/utils.js` */
const memoized = _utils_js__WEBPACK_IMPORTED_MODULE_1__.memoized;
/** @deprecated moved to `@noble/curves/utils.js` */
const validateObject = _utils_js__WEBPACK_IMPORTED_MODULE_1__.validateObject;
/** @deprecated moved to `@noble/curves/utils.js` */
const isHash = _utils_js__WEBPACK_IMPORTED_MODULE_1__.isHash;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/legacy.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/legacy.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MD5: () => (/* binding */ MD5),
/* harmony export */   RIPEMD160: () => (/* binding */ RIPEMD160),
/* harmony export */   SHA1: () => (/* binding */ SHA1),
/* harmony export */   md5: () => (/* binding */ md5),
/* harmony export */   ripemd160: () => (/* binding */ ripemd160),
/* harmony export */   sha1: () => (/* binding */ sha1)
/* harmony export */ });
/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_md.js */ "./node_modules/@noble/hashes/esm/_md.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@noble/hashes/esm/utils.js");
/**

SHA1 (RFC 3174), MD5 (RFC 1321) and RIPEMD160 (RFC 2286) legacy, weak hash functions.
Don't use them in a new protocol. What "weak" means:

- Collisions can be made with 2^18 effort in MD5, 2^60 in SHA1, 2^80 in RIPEMD160.
- No practical pre-image attacks (only theoretical, 2^123.4)
- HMAC seems kinda ok: https://datatracker.ietf.org/doc/html/rfc6151
 * @module
 */


/** Initial SHA1 state */
const SHA1_IV = /* @__PURE__ */ Uint32Array.from([
    0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,
]);
// Reusable temporary buffer
const SHA1_W = /* @__PURE__ */ new Uint32Array(80);
/** SHA1 legacy hash class. */
class SHA1 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {
    constructor() {
        super(64, 20, 8, false);
        this.A = SHA1_IV[0] | 0;
        this.B = SHA1_IV[1] | 0;
        this.C = SHA1_IV[2] | 0;
        this.D = SHA1_IV[3] | 0;
        this.E = SHA1_IV[4] | 0;
    }
    get() {
        const { A, B, C, D, E } = this;
        return [A, B, C, D, E];
    }
    set(A, B, C, D, E) {
        this.A = A | 0;
        this.B = B | 0;
        this.C = C | 0;
        this.D = D | 0;
        this.E = E | 0;
    }
    process(view, offset) {
        for (let i = 0; i < 16; i++, offset += 4)
            SHA1_W[i] = view.getUint32(offset, false);
        for (let i = 16; i < 80; i++)
            SHA1_W[i] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);
        // Compression function main loop, 80 rounds
        let { A, B, C, D, E } = this;
        for (let i = 0; i < 80; i++) {
            let F, K;
            if (i < 20) {
                F = (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(B, C, D);
                K = 0x5a827999;
            }
            else if (i < 40) {
                F = B ^ C ^ D;
                K = 0x6ed9eba1;
            }
            else if (i < 60) {
                F = (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Maj)(B, C, D);
                K = 0x8f1bbcdc;
            }
            else {
                F = B ^ C ^ D;
                K = 0xca62c1d6;
            }
            const T = ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(A, 5) + F + E + K + SHA1_W[i]) | 0;
            E = D;
            D = C;
            C = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(B, 30);
            B = A;
            A = T;
        }
        // Add the compressed chunk to the current hash value
        A = (A + this.A) | 0;
        B = (B + this.B) | 0;
        C = (C + this.C) | 0;
        D = (D + this.D) | 0;
        E = (E + this.E) | 0;
        this.set(A, B, C, D, E);
    }
    roundClean() {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(SHA1_W);
    }
    destroy() {
        this.set(0, 0, 0, 0, 0);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.buffer);
    }
}
/** SHA1 (RFC 3174) legacy hash function. It was cryptographically broken. */
const sha1 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new SHA1());
/** Per-round constants */
const p32 = /* @__PURE__ */ Math.pow(2, 32);
const K = /* @__PURE__ */ Array.from({ length: 64 }, (_, i) => Math.floor(p32 * Math.abs(Math.sin(i + 1))));
/** md5 initial state: same as sha1, but 4 u32 instead of 5. */
const MD5_IV = /* @__PURE__ */ SHA1_IV.slice(0, 4);
// Reusable temporary buffer
const MD5_W = /* @__PURE__ */ new Uint32Array(16);
/** MD5 legacy hash class. */
class MD5 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {
    constructor() {
        super(64, 16, 8, true);
        this.A = MD5_IV[0] | 0;
        this.B = MD5_IV[1] | 0;
        this.C = MD5_IV[2] | 0;
        this.D = MD5_IV[3] | 0;
    }
    get() {
        const { A, B, C, D } = this;
        return [A, B, C, D];
    }
    set(A, B, C, D) {
        this.A = A | 0;
        this.B = B | 0;
        this.C = C | 0;
        this.D = D | 0;
    }
    process(view, offset) {
        for (let i = 0; i < 16; i++, offset += 4)
            MD5_W[i] = view.getUint32(offset, true);
        // Compression function main loop, 64 rounds
        let { A, B, C, D } = this;
        for (let i = 0; i < 64; i++) {
            let F, g, s;
            if (i < 16) {
                F = (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(B, C, D);
                g = i;
                s = [7, 12, 17, 22];
            }
            else if (i < 32) {
                F = (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(D, B, C);
                g = (5 * i + 1) % 16;
                s = [5, 9, 14, 20];
            }
            else if (i < 48) {
                F = B ^ C ^ D;
                g = (3 * i + 5) % 16;
                s = [4, 11, 16, 23];
            }
            else {
                F = C ^ (B | ~D);
                g = (7 * i) % 16;
                s = [6, 10, 15, 21];
            }
            F = F + A + K[i] + MD5_W[g];
            A = D;
            D = C;
            C = B;
            B = B + (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(F, s[i % 4]);
        }
        // Add the compressed chunk to the current hash value
        A = (A + this.A) | 0;
        B = (B + this.B) | 0;
        C = (C + this.C) | 0;
        D = (D + this.D) | 0;
        this.set(A, B, C, D);
    }
    roundClean() {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(MD5_W);
    }
    destroy() {
        this.set(0, 0, 0, 0);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.buffer);
    }
}
/**
 * MD5 (RFC 1321) legacy hash function. It was cryptographically broken.
 * MD5 architecture is similar to SHA1, with some differences:
 * - Reduced output length: 16 bytes (128 bit) instead of 20
 * - 64 rounds, instead of 80
 * - Little-endian: could be faster, but will require more code
 * - Non-linear index selection: huge speed-up for unroll
 * - Per round constants: more memory accesses, additional speed-up for unroll
 */
const md5 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new MD5());
// RIPEMD-160
const Rho160 = /* @__PURE__ */ Uint8Array.from([
    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
]);
const Id160 = /* @__PURE__ */ (() => Uint8Array.from(new Array(16).fill(0).map((_, i) => i)))();
const Pi160 = /* @__PURE__ */ (() => Id160.map((i) => (9 * i + 5) % 16))();
const idxLR = /* @__PURE__ */ (() => {
    const L = [Id160];
    const R = [Pi160];
    const res = [L, R];
    for (let i = 0; i < 4; i++)
        for (let j of res)
            j.push(j[i].map((k) => Rho160[k]));
    return res;
})();
const idxL = /* @__PURE__ */ (() => idxLR[0])();
const idxR = /* @__PURE__ */ (() => idxLR[1])();
// const [idxL, idxR] = idxLR;
const shifts160 = /* @__PURE__ */ [
    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
].map((i) => Uint8Array.from(i));
const shiftsL160 = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts160[i][j]));
const shiftsR160 = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts160[i][j]));
const Kl160 = /* @__PURE__ */ Uint32Array.from([
    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,
]);
const Kr160 = /* @__PURE__ */ Uint32Array.from([
    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,
]);
// It's called f() in spec.
function ripemd_f(group, x, y, z) {
    if (group === 0)
        return x ^ y ^ z;
    if (group === 1)
        return (x & y) | (~x & z);
    if (group === 2)
        return (x | ~y) ^ z;
    if (group === 3)
        return (x & z) | (y & ~z);
    return x ^ (y | ~z);
}
// Reusable temporary buffer
const BUF_160 = /* @__PURE__ */ new Uint32Array(16);
class RIPEMD160 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {
    constructor() {
        super(64, 20, 8, true);
        this.h0 = 0x67452301 | 0;
        this.h1 = 0xefcdab89 | 0;
        this.h2 = 0x98badcfe | 0;
        this.h3 = 0x10325476 | 0;
        this.h4 = 0xc3d2e1f0 | 0;
    }
    get() {
        const { h0, h1, h2, h3, h4 } = this;
        return [h0, h1, h2, h3, h4];
    }
    set(h0, h1, h2, h3, h4) {
        this.h0 = h0 | 0;
        this.h1 = h1 | 0;
        this.h2 = h2 | 0;
        this.h3 = h3 | 0;
        this.h4 = h4 | 0;
    }
    process(view, offset) {
        for (let i = 0; i < 16; i++, offset += 4)
            BUF_160[i] = view.getUint32(offset, true);
        // prettier-ignore
        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;
        // Instead of iterating 0 to 80, we split it into 5 groups
        // And use the groups in constants, functions, etc. Much simpler
        for (let group = 0; group < 5; group++) {
            const rGroup = 4 - group;
            const hbl = Kl160[group], hbr = Kr160[group]; // prettier-ignore
            const rl = idxL[group], rr = idxR[group]; // prettier-ignore
            const sl = shiftsL160[group], sr = shiftsR160[group]; // prettier-ignore
            for (let i = 0; i < 16; i++) {
                const tl = ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(al + ripemd_f(group, bl, cl, dl) + BUF_160[rl[i]] + hbl, sl[i]) + el) | 0;
                al = el, el = dl, dl = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore
            }
            // 2 loops are 10% faster
            for (let i = 0; i < 16; i++) {
                const tr = ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(ar + ripemd_f(rGroup, br, cr, dr) + BUF_160[rr[i]] + hbr, sr[i]) + er) | 0;
                ar = er, er = dr, dr = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(cr, 10) | 0, cr = br, br = tr; // prettier-ignore
            }
        }
        // Add the compressed chunk to the current hash value
        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);
    }
    roundClean() {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(BUF_160);
    }
    destroy() {
        this.destroyed = true;
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.buffer);
        this.set(0, 0, 0, 0, 0);
    }
}
/**
 * RIPEMD-160 - a legacy hash function from 1990s.
 * * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html
 * * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf
 */
const ripemd160 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new RIPEMD160());
//# sourceMappingURL=legacy.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/ripemd160.js":
/*!*****************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/ripemd160.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RIPEMD160: () => (/* binding */ RIPEMD160),
/* harmony export */   ripemd160: () => (/* binding */ ripemd160)
/* harmony export */ });
/* harmony import */ var _legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./legacy.js */ "./node_modules/@noble/hashes/esm/legacy.js");
/**
 * RIPEMD-160 legacy hash function.
 * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html
 * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf
 * @module
 * @deprecated
 */

/** @deprecated Use import from `noble/hashes/legacy` module */
const RIPEMD160 = _legacy_js__WEBPACK_IMPORTED_MODULE_0__.RIPEMD160;
/** @deprecated Use import from `noble/hashes/legacy` module */
const ripemd160 = _legacy_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160;
//# sourceMappingURL=ripemd160.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/errors.js":
/*!*************************************************!*\
  !*** ./node_modules/abitype/dist/esm/errors.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseError: () => (/* binding */ BaseError)
/* harmony export */ });
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ "./node_modules/abitype/dist/esm/version.js");

class BaseError extends Error {
    constructor(shortMessage, args = {}) {
        const details = args.cause instanceof BaseError
            ? args.cause.details
            : args.cause?.message
                ? args.cause.message
                : args.details;
        const docsPath = args.cause instanceof BaseError
            ? args.cause.docsPath || args.docsPath
            : args.docsPath;
        const message = [
            shortMessage || 'An error occurred.',
            '',
            ...(args.metaMessages ? [...args.metaMessages, ''] : []),
            ...(docsPath ? [`Docs: https://abitype.dev${docsPath}`] : []),
            ...(details ? [`Details: ${details}`] : []),
            `Version: abitype@${_version_js__WEBPACK_IMPORTED_MODULE_0__.version}`,
        ].join('\n');
        super(message);
        Object.defineProperty(this, "details", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "docsPath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "metaMessages", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shortMessage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiTypeError'
        });
        if (args.cause)
            this.cause = args.cause;
        this.details = details;
        this.docsPath = docsPath;
        this.metaMessages = args.metaMessages;
        this.shortMessage = shortMessage;
    }
}
//# sourceMappingURL=errors.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/errors/abiItem.js":
/*!************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/errors/abiItem.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidAbiItemError: () => (/* binding */ InvalidAbiItemError),
/* harmony export */   UnknownSolidityTypeError: () => (/* binding */ UnknownSolidityTypeError),
/* harmony export */   UnknownTypeError: () => (/* binding */ UnknownTypeError)
/* harmony export */ });
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ "./node_modules/abitype/dist/esm/errors.js");

class InvalidAbiItemError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ signature }) {
        super('Failed to parse ABI item.', {
            details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,
            docsPath: '/api/human#parseabiitem-1',
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidAbiItemError'
        });
    }
}
class UnknownTypeError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ type }) {
        super('Unknown type.', {
            metaMessages: [
                `Type "${type}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'UnknownTypeError'
        });
    }
}
class UnknownSolidityTypeError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ type }) {
        super('Unknown type.', {
            metaMessages: [`Type "${type}" is not a valid ABI type.`],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'UnknownSolidityTypeError'
        });
    }
}
//# sourceMappingURL=abiItem.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/errors/abiParameter.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/errors/abiParameter.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidAbiParameterError: () => (/* binding */ InvalidAbiParameterError),
/* harmony export */   InvalidAbiParametersError: () => (/* binding */ InvalidAbiParametersError),
/* harmony export */   InvalidAbiTypeParameterError: () => (/* binding */ InvalidAbiTypeParameterError),
/* harmony export */   InvalidFunctionModifierError: () => (/* binding */ InvalidFunctionModifierError),
/* harmony export */   InvalidModifierError: () => (/* binding */ InvalidModifierError),
/* harmony export */   InvalidParameterError: () => (/* binding */ InvalidParameterError),
/* harmony export */   SolidityProtectedKeywordError: () => (/* binding */ SolidityProtectedKeywordError)
/* harmony export */ });
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ "./node_modules/abitype/dist/esm/errors.js");

class InvalidAbiParameterError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ param }) {
        super('Failed to parse ABI parameter.', {
            details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,
            docsPath: '/api/human#parseabiparameter-1',
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidAbiParameterError'
        });
    }
}
class InvalidAbiParametersError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ params }) {
        super('Failed to parse ABI parameters.', {
            details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,
            docsPath: '/api/human#parseabiparameters-1',
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidAbiParametersError'
        });
    }
}
class InvalidParameterError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ param }) {
        super('Invalid ABI parameter.', {
            details: param,
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidParameterError'
        });
    }
}
class SolidityProtectedKeywordError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ param, name }) {
        super('Invalid ABI parameter.', {
            details: param,
            metaMessages: [
                `"${name}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'SolidityProtectedKeywordError'
        });
    }
}
class InvalidModifierError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ param, type, modifier, }) {
        super('Invalid ABI parameter.', {
            details: param,
            metaMessages: [
                `Modifier "${modifier}" not allowed${type ? ` in "${type}" type` : ''}.`,
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidModifierError'
        });
    }
}
class InvalidFunctionModifierError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ param, type, modifier, }) {
        super('Invalid ABI parameter.', {
            details: param,
            metaMessages: [
                `Modifier "${modifier}" not allowed${type ? ` in "${type}" type` : ''}.`,
                `Data location can only be specified for array, struct, or mapping types, but "${modifier}" was given.`,
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidFunctionModifierError'
        });
    }
}
class InvalidAbiTypeParameterError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ abiParameter, }) {
        super('Invalid ABI parameter.', {
            details: JSON.stringify(abiParameter, null, 2),
            metaMessages: ['ABI parameter type is invalid.'],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidAbiTypeParameterError'
        });
    }
}
//# sourceMappingURL=abiParameter.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/errors/signature.js":
/*!**************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/errors/signature.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidSignatureError: () => (/* binding */ InvalidSignatureError),
/* harmony export */   InvalidStructSignatureError: () => (/* binding */ InvalidStructSignatureError),
/* harmony export */   UnknownSignatureError: () => (/* binding */ UnknownSignatureError)
/* harmony export */ });
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ "./node_modules/abitype/dist/esm/errors.js");

class InvalidSignatureError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ signature, type, }) {
        super(`Invalid ${type} signature.`, {
            details: signature,
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidSignatureError'
        });
    }
}
class UnknownSignatureError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ signature }) {
        super('Unknown signature.', {
            details: signature,
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'UnknownSignatureError'
        });
    }
}
class InvalidStructSignatureError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ signature }) {
        super('Invalid struct signature.', {
            details: signature,
            metaMessages: ['No properties exist.'],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidStructSignatureError'
        });
    }
}
//# sourceMappingURL=signature.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/errors/splitParameters.js":
/*!********************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/errors/splitParameters.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidParenthesisError: () => (/* binding */ InvalidParenthesisError)
/* harmony export */ });
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ "./node_modules/abitype/dist/esm/errors.js");

class InvalidParenthesisError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ current, depth }) {
        super('Unbalanced parentheses.', {
            metaMessages: [
                `"${current.trim()}" has too many ${depth > 0 ? 'opening' : 'closing'} parentheses.`,
            ],
            details: `Depth "${depth}"`,
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'InvalidParenthesisError'
        });
    }
}
//# sourceMappingURL=splitParameters.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/errors/struct.js":
/*!***********************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/errors/struct.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CircularReferenceError: () => (/* binding */ CircularReferenceError)
/* harmony export */ });
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ "./node_modules/abitype/dist/esm/errors.js");

class CircularReferenceError extends _errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ type }) {
        super('Circular reference detected.', {
            metaMessages: [`Struct "${type}" is a circular reference.`],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'CircularReferenceError'
        });
    }
}
//# sourceMappingURL=struct.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/formatAbiItem.js":
/*!***********************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/formatAbiItem.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatAbiItem: () => (/* binding */ formatAbiItem)
/* harmony export */ });
/* harmony import */ var _formatAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatAbiParameters.js */ "./node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js");

/**
 * Formats ABI item (e.g. error, event, function) into human-readable ABI item
 *
 * @param abiItem - ABI item
 * @returns Human-readable ABI item
 */
function formatAbiItem(abiItem) {
    if (abiItem.type === 'function')
        return `function ${abiItem.name}(${(0,_formatAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiParameters)(abiItem.inputs)})${abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'
            ? ` ${abiItem.stateMutability}`
            : ''}${abiItem.outputs?.length
            ? ` returns (${(0,_formatAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiParameters)(abiItem.outputs)})`
            : ''}`;
    if (abiItem.type === 'event')
        return `event ${abiItem.name}(${(0,_formatAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiParameters)(abiItem.inputs)})`;
    if (abiItem.type === 'error')
        return `error ${abiItem.name}(${(0,_formatAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiParameters)(abiItem.inputs)})`;
    if (abiItem.type === 'constructor')
        return `constructor(${(0,_formatAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiParameters)(abiItem.inputs)})${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;
    if (abiItem.type === 'fallback')
        return `fallback() external${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;
    return 'receive() external payable';
}
//# sourceMappingURL=formatAbiItem.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/formatAbiParameter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/formatAbiParameter.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatAbiParameter: () => (/* binding */ formatAbiParameter)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../regex.js */ "./node_modules/abitype/dist/esm/regex.js");

// https://regexr.com/7f7rv
const tupleRegex = /^tuple(?<array>(\[(\d*)\])*)$/;
/**
 * Formats {@link AbiParameter} to human-readable ABI parameter.
 *
 * @param abiParameter - ABI parameter
 * @returns Human-readable ABI parameter
 *
 * @example
 * const result = formatAbiParameter({ type: 'address', name: 'from' })
 * //    ^? const result: 'address from'
 */
function formatAbiParameter(abiParameter) {
    let type = abiParameter.type;
    if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {
        type = '(';
        const length = abiParameter.components.length;
        for (let i = 0; i < length; i++) {
            const component = abiParameter.components[i];
            type += formatAbiParameter(component);
            if (i < length - 1)
                type += ', ';
        }
        const result = (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(tupleRegex, abiParameter.type);
        type += `)${result?.array ?? ''}`;
        return formatAbiParameter({
            ...abiParameter,
            type,
        });
    }
    // Add `indexed` to type if in `abiParameter`
    if ('indexed' in abiParameter && abiParameter.indexed)
        type = `${type} indexed`;
    // Return human-readable ABI parameter
    if (abiParameter.name)
        return `${type} ${abiParameter.name}`;
    return type;
}
//# sourceMappingURL=formatAbiParameter.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatAbiParameters: () => (/* binding */ formatAbiParameters)
/* harmony export */ });
/* harmony import */ var _formatAbiParameter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatAbiParameter.js */ "./node_modules/abitype/dist/esm/human-readable/formatAbiParameter.js");

/**
 * Formats {@link AbiParameter}s to human-readable ABI parameters.
 *
 * @param abiParameters - ABI parameters
 * @returns Human-readable ABI parameters
 *
 * @example
 * const result = formatAbiParameters([
 *   //  ^? const result: 'address from, uint256 tokenId'
 *   { type: 'address', name: 'from' },
 *   { type: 'uint256', name: 'tokenId' },
 * ])
 */
function formatAbiParameters(abiParameters) {
    let params = '';
    const length = abiParameters.length;
    for (let i = 0; i < length; i++) {
        const abiParameter = abiParameters[i];
        params += (0,_formatAbiParameter_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiParameter)(abiParameter);
        if (i !== length - 1)
            params += ', ';
    }
    return params;
}
//# sourceMappingURL=formatAbiParameters.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/parseAbi.js":
/*!******************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/parseAbi.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAbi: () => (/* binding */ parseAbi)
/* harmony export */ });
/* harmony import */ var _runtime_signatures_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./runtime/signatures.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/signatures.js");
/* harmony import */ var _runtime_structs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runtime/structs.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/structs.js");
/* harmony import */ var _runtime_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runtime/utils.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/utils.js");



/**
 * Parses human-readable ABI into JSON {@link Abi}
 *
 * @param signatures - Human-Readable ABI
 * @returns Parsed {@link Abi}
 *
 * @example
 * const abi = parseAbi([
 *   //  ^? const abi: readonly [{ name: "balanceOf"; type: "function"; stateMutability:...
 *   'function balanceOf(address owner) view returns (uint256)',
 *   'event Transfer(address indexed from, address indexed to, uint256 amount)',
 * ])
 */
function parseAbi(signatures) {
    const structs = (0,_runtime_structs_js__WEBPACK_IMPORTED_MODULE_1__.parseStructs)(signatures);
    const abi = [];
    const length = signatures.length;
    for (let i = 0; i < length; i++) {
        const signature = signatures[i];
        if ((0,_runtime_signatures_js__WEBPACK_IMPORTED_MODULE_0__.isStructSignature)(signature))
            continue;
        abi.push((0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_2__.parseSignature)(signature, structs));
    }
    return abi;
}
//# sourceMappingURL=parseAbi.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/parseAbiItem.js":
/*!**********************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/parseAbiItem.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAbiItem: () => (/* binding */ parseAbiItem)
/* harmony export */ });
/* harmony import */ var _errors_abiItem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors/abiItem.js */ "./node_modules/abitype/dist/esm/human-readable/errors/abiItem.js");
/* harmony import */ var _runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runtime/signatures.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/signatures.js");
/* harmony import */ var _runtime_structs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runtime/structs.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/structs.js");
/* harmony import */ var _runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./runtime/utils.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/utils.js");




/**
 * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item
 *
 * @param signature - Human-readable ABI item
 * @returns Parsed {@link Abi} item
 *
 * @example
 * const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')
 * //    ^? const abiItem: { name: "balanceOf"; type: "function"; stateMutability: "view";...
 *
 * @example
 * const abiItem = parseAbiItem([
 *   //  ^? const abiItem: { name: "foo"; type: "function"; stateMutability: "view"; inputs:...
 *   'function foo(Baz bar) view returns (string)',
 *   'struct Baz { string name; }',
 * ])
 */
function parseAbiItem(signature) {
    let abiItem;
    if (typeof signature === 'string')
        abiItem = (0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseSignature)(signature);
    else {
        const structs = (0,_runtime_structs_js__WEBPACK_IMPORTED_MODULE_2__.parseStructs)(signature);
        const length = signature.length;
        for (let i = 0; i < length; i++) {
            const signature_ = signature[i];
            if ((0,_runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__.isStructSignature)(signature_))
                continue;
            abiItem = (0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseSignature)(signature_, structs);
            break;
        }
    }
    if (!abiItem)
        throw new _errors_abiItem_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAbiItemError({ signature });
    return abiItem;
}
//# sourceMappingURL=parseAbiItem.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/parseAbiParameter.js":
/*!***************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/parseAbiParameter.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAbiParameter: () => (/* binding */ parseAbiParameter)
/* harmony export */ });
/* harmony import */ var _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors/abiParameter.js */ "./node_modules/abitype/dist/esm/human-readable/errors/abiParameter.js");
/* harmony import */ var _runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runtime/signatures.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/signatures.js");
/* harmony import */ var _runtime_structs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runtime/structs.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/structs.js");
/* harmony import */ var _runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./runtime/utils.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/utils.js");




/**
 * Parses human-readable ABI parameter into {@link AbiParameter}
 *
 * @param param - Human-readable ABI parameter
 * @returns Parsed {@link AbiParameter}
 *
 * @example
 * const abiParameter = parseAbiParameter('address from')
 * //    ^? const abiParameter: { type: "address"; name: "from"; }
 *
 * @example
 * const abiParameter = parseAbiParameter([
 *   //  ^? const abiParameter: { type: "tuple"; components: [{ type: "string"; name:...
 *   'Baz bar',
 *   'struct Baz { string name; }',
 * ])
 */
function parseAbiParameter(param) {
    let abiParameter;
    if (typeof param === 'string')
        abiParameter = (0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseAbiParameter)(param, {
            modifiers: _runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__.modifiers,
        });
    else {
        const structs = (0,_runtime_structs_js__WEBPACK_IMPORTED_MODULE_2__.parseStructs)(param);
        const length = param.length;
        for (let i = 0; i < length; i++) {
            const signature = param[i];
            if ((0,_runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__.isStructSignature)(signature))
                continue;
            abiParameter = (0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseAbiParameter)(signature, { modifiers: _runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__.modifiers, structs });
            break;
        }
    }
    if (!abiParameter)
        throw new _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAbiParameterError({ param });
    return abiParameter;
}
//# sourceMappingURL=parseAbiParameter.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/parseAbiParameters.js":
/*!****************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/parseAbiParameters.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAbiParameters: () => (/* binding */ parseAbiParameters)
/* harmony export */ });
/* harmony import */ var _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors/abiParameter.js */ "./node_modules/abitype/dist/esm/human-readable/errors/abiParameter.js");
/* harmony import */ var _runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runtime/signatures.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/signatures.js");
/* harmony import */ var _runtime_structs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runtime/structs.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/structs.js");
/* harmony import */ var _runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./runtime/utils.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/utils.js");





/**
 * Parses human-readable ABI parameters into {@link AbiParameter}s
 *
 * @param params - Human-readable ABI parameters
 * @returns Parsed {@link AbiParameter}s
 *
 * @example
 * const abiParameters = parseAbiParameters('address from, address to, uint256 amount')
 * //    ^? const abiParameters: [{ type: "address"; name: "from"; }, { type: "address";...
 *
 * @example
 * const abiParameters = parseAbiParameters([
 *   //  ^? const abiParameters: [{ type: "tuple"; components: [{ type: "string"; name:...
 *   'Baz bar',
 *   'struct Baz { string name; }',
 * ])
 */
function parseAbiParameters(params) {
    const abiParameters = [];
    if (typeof params === 'string') {
        const parameters = (0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__.splitParameters)(params);
        const length = parameters.length;
        for (let i = 0; i < length; i++) {
            abiParameters.push((0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseAbiParameter)(parameters[i], { modifiers: _runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__.modifiers }));
        }
    }
    else {
        const structs = (0,_runtime_structs_js__WEBPACK_IMPORTED_MODULE_2__.parseStructs)(params);
        const length = params.length;
        for (let i = 0; i < length; i++) {
            const signature = params[i];
            if ((0,_runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__.isStructSignature)(signature))
                continue;
            const parameters = (0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__.splitParameters)(signature);
            const length = parameters.length;
            for (let k = 0; k < length; k++) {
                abiParameters.push((0,_runtime_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseAbiParameter)(parameters[k], { modifiers: _runtime_signatures_js__WEBPACK_IMPORTED_MODULE_1__.modifiers, structs }));
            }
        }
    }
    if (abiParameters.length === 0)
        throw new _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAbiParametersError({ params });
    return abiParameters;
}
//# sourceMappingURL=parseAbiParameters.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/runtime/cache.js":
/*!***********************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/runtime/cache.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getParameterCacheKey: () => (/* binding */ getParameterCacheKey),
/* harmony export */   parameterCache: () => (/* binding */ parameterCache)
/* harmony export */ });
/**
 * Gets {@link parameterCache} cache key namespaced by {@link type}. This prevents parameters from being accessible to types that don't allow them (e.g. `string indexed foo` not allowed outside of `type: 'event'`).
 * @param param ABI parameter string
 * @param type ABI parameter type
 * @returns Cache key for {@link parameterCache}
 */
function getParameterCacheKey(param, type, structs) {
    let structKey = '';
    if (structs)
        for (const struct of Object.entries(structs)) {
            if (!struct)
                continue;
            let propertyKey = '';
            for (const property of struct[1]) {
                propertyKey += `[${property.type}${property.name ? `:${property.name}` : ''}]`;
            }
            structKey += `(${struct[0]}{${propertyKey}})`;
        }
    if (type)
        return `${type}:${param}${structKey}`;
    return param;
}
/**
 * Basic cache seeded with common ABI parameter strings.
 *
 * **Note: When seeding more parameters, make sure you benchmark performance. The current number is the ideal balance between performance and having an already existing cache.**
 */
const parameterCache = new Map([
    // Unnamed
    ['address', { type: 'address' }],
    ['bool', { type: 'bool' }],
    ['bytes', { type: 'bytes' }],
    ['bytes32', { type: 'bytes32' }],
    ['int', { type: 'int256' }],
    ['int256', { type: 'int256' }],
    ['string', { type: 'string' }],
    ['uint', { type: 'uint256' }],
    ['uint8', { type: 'uint8' }],
    ['uint16', { type: 'uint16' }],
    ['uint24', { type: 'uint24' }],
    ['uint32', { type: 'uint32' }],
    ['uint64', { type: 'uint64' }],
    ['uint96', { type: 'uint96' }],
    ['uint112', { type: 'uint112' }],
    ['uint160', { type: 'uint160' }],
    ['uint192', { type: 'uint192' }],
    ['uint256', { type: 'uint256' }],
    // Named
    ['address owner', { type: 'address', name: 'owner' }],
    ['address to', { type: 'address', name: 'to' }],
    ['bool approved', { type: 'bool', name: 'approved' }],
    ['bytes _data', { type: 'bytes', name: '_data' }],
    ['bytes data', { type: 'bytes', name: 'data' }],
    ['bytes signature', { type: 'bytes', name: 'signature' }],
    ['bytes32 hash', { type: 'bytes32', name: 'hash' }],
    ['bytes32 r', { type: 'bytes32', name: 'r' }],
    ['bytes32 root', { type: 'bytes32', name: 'root' }],
    ['bytes32 s', { type: 'bytes32', name: 's' }],
    ['string name', { type: 'string', name: 'name' }],
    ['string symbol', { type: 'string', name: 'symbol' }],
    ['string tokenURI', { type: 'string', name: 'tokenURI' }],
    ['uint tokenId', { type: 'uint256', name: 'tokenId' }],
    ['uint8 v', { type: 'uint8', name: 'v' }],
    ['uint256 balance', { type: 'uint256', name: 'balance' }],
    ['uint256 tokenId', { type: 'uint256', name: 'tokenId' }],
    ['uint256 value', { type: 'uint256', name: 'value' }],
    // Indexed
    [
        'event:address indexed from',
        { type: 'address', name: 'from', indexed: true },
    ],
    ['event:address indexed to', { type: 'address', name: 'to', indexed: true }],
    [
        'event:uint indexed tokenId',
        { type: 'uint256', name: 'tokenId', indexed: true },
    ],
    [
        'event:uint256 indexed tokenId',
        { type: 'uint256', name: 'tokenId', indexed: true },
    ],
]);
//# sourceMappingURL=cache.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/runtime/signatures.js":
/*!****************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/runtime/signatures.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   eventModifiers: () => (/* binding */ eventModifiers),
/* harmony export */   execConstructorSignature: () => (/* binding */ execConstructorSignature),
/* harmony export */   execErrorSignature: () => (/* binding */ execErrorSignature),
/* harmony export */   execEventSignature: () => (/* binding */ execEventSignature),
/* harmony export */   execFallbackSignature: () => (/* binding */ execFallbackSignature),
/* harmony export */   execFunctionSignature: () => (/* binding */ execFunctionSignature),
/* harmony export */   execStructSignature: () => (/* binding */ execStructSignature),
/* harmony export */   functionModifiers: () => (/* binding */ functionModifiers),
/* harmony export */   isConstructorSignature: () => (/* binding */ isConstructorSignature),
/* harmony export */   isErrorSignature: () => (/* binding */ isErrorSignature),
/* harmony export */   isEventSignature: () => (/* binding */ isEventSignature),
/* harmony export */   isFallbackSignature: () => (/* binding */ isFallbackSignature),
/* harmony export */   isFunctionSignature: () => (/* binding */ isFunctionSignature),
/* harmony export */   isReceiveSignature: () => (/* binding */ isReceiveSignature),
/* harmony export */   isStructSignature: () => (/* binding */ isStructSignature),
/* harmony export */   modifiers: () => (/* binding */ modifiers)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../regex.js */ "./node_modules/abitype/dist/esm/regex.js");

// https://regexr.com/7gmok
const errorSignatureRegex = /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
function isErrorSignature(signature) {
    return errorSignatureRegex.test(signature);
}
function execErrorSignature(signature) {
    return (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(errorSignatureRegex, signature);
}
// https://regexr.com/7gmoq
const eventSignatureRegex = /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
function isEventSignature(signature) {
    return eventSignatureRegex.test(signature);
}
function execEventSignature(signature) {
    return (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(eventSignatureRegex, signature);
}
// https://regexr.com/7gmot
const functionSignatureRegex = /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\s?\((?<returns>.*?)\))?$/;
function isFunctionSignature(signature) {
    return functionSignatureRegex.test(signature);
}
function execFunctionSignature(signature) {
    return (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(functionSignatureRegex, signature);
}
// https://regexr.com/7gmp3
const structSignatureRegex = /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \{(?<properties>.*?)\}$/;
function isStructSignature(signature) {
    return structSignatureRegex.test(signature);
}
function execStructSignature(signature) {
    return (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(structSignatureRegex, signature);
}
// https://regexr.com/78u01
const constructorSignatureRegex = /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/;
function isConstructorSignature(signature) {
    return constructorSignatureRegex.test(signature);
}
function execConstructorSignature(signature) {
    return (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(constructorSignatureRegex, signature);
}
// https://regexr.com/7srtn
const fallbackSignatureRegex = /^fallback\(\) external(?:\s(?<stateMutability>payable{1}))?$/;
function isFallbackSignature(signature) {
    return fallbackSignatureRegex.test(signature);
}
function execFallbackSignature(signature) {
    return (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(fallbackSignatureRegex, signature);
}
// https://regexr.com/78u1k
const receiveSignatureRegex = /^receive\(\) external payable$/;
function isReceiveSignature(signature) {
    return receiveSignatureRegex.test(signature);
}
const modifiers = new Set([
    'memory',
    'indexed',
    'storage',
    'calldata',
]);
const eventModifiers = new Set(['indexed']);
const functionModifiers = new Set([
    'calldata',
    'memory',
    'storage',
]);
//# sourceMappingURL=signatures.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/runtime/structs.js":
/*!*************************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/runtime/structs.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseStructs: () => (/* binding */ parseStructs)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../regex.js */ "./node_modules/abitype/dist/esm/regex.js");
/* harmony import */ var _errors_abiItem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/abiItem.js */ "./node_modules/abitype/dist/esm/human-readable/errors/abiItem.js");
/* harmony import */ var _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors/abiParameter.js */ "./node_modules/abitype/dist/esm/human-readable/errors/abiParameter.js");
/* harmony import */ var _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors/signature.js */ "./node_modules/abitype/dist/esm/human-readable/errors/signature.js");
/* harmony import */ var _errors_struct_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors/struct.js */ "./node_modules/abitype/dist/esm/human-readable/errors/struct.js");
/* harmony import */ var _signatures_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./signatures.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/signatures.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/utils.js");







function parseStructs(signatures) {
    // Create "shallow" version of each struct (and filter out non-structs or invalid structs)
    const shallowStructs = {};
    const signaturesLength = signatures.length;
    for (let i = 0; i < signaturesLength; i++) {
        const signature = signatures[i];
        if (!(0,_signatures_js__WEBPACK_IMPORTED_MODULE_5__.isStructSignature)(signature))
            continue;
        const match = (0,_signatures_js__WEBPACK_IMPORTED_MODULE_5__.execStructSignature)(signature);
        if (!match)
            throw new _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError({ signature, type: 'struct' });
        const properties = match.properties.split(';');
        const components = [];
        const propertiesLength = properties.length;
        for (let k = 0; k < propertiesLength; k++) {
            const property = properties[k];
            const trimmed = property.trim();
            if (!trimmed)
                continue;
            const abiParameter = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.parseAbiParameter)(trimmed, {
                type: 'struct',
            });
            components.push(abiParameter);
        }
        if (!components.length)
            throw new _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__.InvalidStructSignatureError({ signature });
        shallowStructs[match.name] = components;
    }
    // Resolve nested structs inside each parameter
    const resolvedStructs = {};
    const entries = Object.entries(shallowStructs);
    const entriesLength = entries.length;
    for (let i = 0; i < entriesLength; i++) {
        const [name, parameters] = entries[i];
        resolvedStructs[name] = resolveStructs(parameters, shallowStructs);
    }
    return resolvedStructs;
}
const typeWithoutTupleRegex = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?$/;
function resolveStructs(abiParameters, structs, ancestors = new Set()) {
    const components = [];
    const length = abiParameters.length;
    for (let i = 0; i < length; i++) {
        const abiParameter = abiParameters[i];
        const isTuple = _regex_js__WEBPACK_IMPORTED_MODULE_0__.isTupleRegex.test(abiParameter.type);
        if (isTuple)
            components.push(abiParameter);
        else {
            const match = (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(typeWithoutTupleRegex, abiParameter.type);
            if (!match?.type)
                throw new _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_2__.InvalidAbiTypeParameterError({ abiParameter });
            const { array, type } = match;
            if (type in structs) {
                if (ancestors.has(type))
                    throw new _errors_struct_js__WEBPACK_IMPORTED_MODULE_4__.CircularReferenceError({ type });
                components.push({
                    ...abiParameter,
                    type: `tuple${array ?? ''}`,
                    components: resolveStructs(structs[type] ?? [], structs, new Set([...ancestors, type])),
                });
            }
            else {
                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.isSolidityType)(type))
                    components.push(abiParameter);
                else
                    throw new _errors_abiItem_js__WEBPACK_IMPORTED_MODULE_1__.UnknownTypeError({ type });
            }
        }
    }
    return components;
}
//# sourceMappingURL=structs.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/human-readable/runtime/utils.js":
/*!***********************************************************************!*\
  !*** ./node_modules/abitype/dist/esm/human-readable/runtime/utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isSolidityKeyword: () => (/* binding */ isSolidityKeyword),
/* harmony export */   isSolidityType: () => (/* binding */ isSolidityType),
/* harmony export */   isValidDataLocation: () => (/* binding */ isValidDataLocation),
/* harmony export */   parseAbiParameter: () => (/* binding */ parseAbiParameter),
/* harmony export */   parseConstructorSignature: () => (/* binding */ parseConstructorSignature),
/* harmony export */   parseErrorSignature: () => (/* binding */ parseErrorSignature),
/* harmony export */   parseEventSignature: () => (/* binding */ parseEventSignature),
/* harmony export */   parseFallbackSignature: () => (/* binding */ parseFallbackSignature),
/* harmony export */   parseFunctionSignature: () => (/* binding */ parseFunctionSignature),
/* harmony export */   parseSignature: () => (/* binding */ parseSignature),
/* harmony export */   splitParameters: () => (/* binding */ splitParameters)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../regex.js */ "./node_modules/abitype/dist/esm/regex.js");
/* harmony import */ var _errors_abiItem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/abiItem.js */ "./node_modules/abitype/dist/esm/human-readable/errors/abiItem.js");
/* harmony import */ var _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors/abiParameter.js */ "./node_modules/abitype/dist/esm/human-readable/errors/abiParameter.js");
/* harmony import */ var _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors/signature.js */ "./node_modules/abitype/dist/esm/human-readable/errors/signature.js");
/* harmony import */ var _errors_splitParameters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors/splitParameters.js */ "./node_modules/abitype/dist/esm/human-readable/errors/splitParameters.js");
/* harmony import */ var _cache_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cache.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/cache.js");
/* harmony import */ var _signatures_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./signatures.js */ "./node_modules/abitype/dist/esm/human-readable/runtime/signatures.js");







function parseSignature(signature, structs = {}) {
    if ((0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.isFunctionSignature)(signature))
        return parseFunctionSignature(signature, structs);
    if ((0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.isEventSignature)(signature))
        return parseEventSignature(signature, structs);
    if ((0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.isErrorSignature)(signature))
        return parseErrorSignature(signature, structs);
    if ((0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.isConstructorSignature)(signature))
        return parseConstructorSignature(signature, structs);
    if ((0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.isFallbackSignature)(signature))
        return parseFallbackSignature(signature);
    if ((0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.isReceiveSignature)(signature))
        return {
            type: 'receive',
            stateMutability: 'payable',
        };
    throw new _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__.UnknownSignatureError({ signature });
}
function parseFunctionSignature(signature, structs = {}) {
    const match = (0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.execFunctionSignature)(signature);
    if (!match)
        throw new _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError({ signature, type: 'function' });
    const inputParams = splitParameters(match.parameters);
    const inputs = [];
    const inputLength = inputParams.length;
    for (let i = 0; i < inputLength; i++) {
        inputs.push(parseAbiParameter(inputParams[i], {
            modifiers: _signatures_js__WEBPACK_IMPORTED_MODULE_6__.functionModifiers,
            structs,
            type: 'function',
        }));
    }
    const outputs = [];
    if (match.returns) {
        const outputParams = splitParameters(match.returns);
        const outputLength = outputParams.length;
        for (let i = 0; i < outputLength; i++) {
            outputs.push(parseAbiParameter(outputParams[i], {
                modifiers: _signatures_js__WEBPACK_IMPORTED_MODULE_6__.functionModifiers,
                structs,
                type: 'function',
            }));
        }
    }
    return {
        name: match.name,
        type: 'function',
        stateMutability: match.stateMutability ?? 'nonpayable',
        inputs,
        outputs,
    };
}
function parseEventSignature(signature, structs = {}) {
    const match = (0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.execEventSignature)(signature);
    if (!match)
        throw new _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError({ signature, type: 'event' });
    const params = splitParameters(match.parameters);
    const abiParameters = [];
    const length = params.length;
    for (let i = 0; i < length; i++)
        abiParameters.push(parseAbiParameter(params[i], {
            modifiers: _signatures_js__WEBPACK_IMPORTED_MODULE_6__.eventModifiers,
            structs,
            type: 'event',
        }));
    return { name: match.name, type: 'event', inputs: abiParameters };
}
function parseErrorSignature(signature, structs = {}) {
    const match = (0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.execErrorSignature)(signature);
    if (!match)
        throw new _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError({ signature, type: 'error' });
    const params = splitParameters(match.parameters);
    const abiParameters = [];
    const length = params.length;
    for (let i = 0; i < length; i++)
        abiParameters.push(parseAbiParameter(params[i], { structs, type: 'error' }));
    return { name: match.name, type: 'error', inputs: abiParameters };
}
function parseConstructorSignature(signature, structs = {}) {
    const match = (0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.execConstructorSignature)(signature);
    if (!match)
        throw new _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError({ signature, type: 'constructor' });
    const params = splitParameters(match.parameters);
    const abiParameters = [];
    const length = params.length;
    for (let i = 0; i < length; i++)
        abiParameters.push(parseAbiParameter(params[i], { structs, type: 'constructor' }));
    return {
        type: 'constructor',
        stateMutability: match.stateMutability ?? 'nonpayable',
        inputs: abiParameters,
    };
}
function parseFallbackSignature(signature) {
    const match = (0,_signatures_js__WEBPACK_IMPORTED_MODULE_6__.execFallbackSignature)(signature);
    if (!match)
        throw new _errors_signature_js__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError({ signature, type: 'fallback' });
    return {
        type: 'fallback',
        stateMutability: match.stateMutability ?? 'nonpayable',
    };
}
const abiParameterWithoutTupleRegex = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/;
const abiParameterWithTupleRegex = /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/;
const dynamicIntegerRegex = /^u?int$/;
function parseAbiParameter(param, options) {
    // optional namespace cache by `type`
    const parameterCacheKey = (0,_cache_js__WEBPACK_IMPORTED_MODULE_5__.getParameterCacheKey)(param, options?.type, options?.structs);
    if (_cache_js__WEBPACK_IMPORTED_MODULE_5__.parameterCache.has(parameterCacheKey))
        return _cache_js__WEBPACK_IMPORTED_MODULE_5__.parameterCache.get(parameterCacheKey);
    const isTuple = _regex_js__WEBPACK_IMPORTED_MODULE_0__.isTupleRegex.test(param);
    const match = (0,_regex_js__WEBPACK_IMPORTED_MODULE_0__.execTyped)(isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex, param);
    if (!match)
        throw new _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_2__.InvalidParameterError({ param });
    if (match.name && isSolidityKeyword(match.name))
        throw new _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_2__.SolidityProtectedKeywordError({ param, name: match.name });
    const name = match.name ? { name: match.name } : {};
    const indexed = match.modifier === 'indexed' ? { indexed: true } : {};
    const structs = options?.structs ?? {};
    let type;
    let components = {};
    if (isTuple) {
        type = 'tuple';
        const params = splitParameters(match.type);
        const components_ = [];
        const length = params.length;
        for (let i = 0; i < length; i++) {
            // remove `modifiers` from `options` to prevent from being added to tuple components
            components_.push(parseAbiParameter(params[i], { structs }));
        }
        components = { components: components_ };
    }
    else if (match.type in structs) {
        type = 'tuple';
        components = { components: structs[match.type] };
    }
    else if (dynamicIntegerRegex.test(match.type)) {
        type = `${match.type}256`;
    }
    else {
        type = match.type;
        if (!(options?.type === 'struct') && !isSolidityType(type))
            throw new _errors_abiItem_js__WEBPACK_IMPORTED_MODULE_1__.UnknownSolidityTypeError({ type });
    }
    if (match.modifier) {
        // Check if modifier exists, but is not allowed (e.g. `indexed` in `functionModifiers`)
        if (!options?.modifiers?.has?.(match.modifier))
            throw new _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_2__.InvalidModifierError({
                param,
                type: options?.type,
                modifier: match.modifier,
            });
        // Check if resolved `type` is valid if there is a function modifier
        if (_signatures_js__WEBPACK_IMPORTED_MODULE_6__.functionModifiers.has(match.modifier) &&
            !isValidDataLocation(type, !!match.array))
            throw new _errors_abiParameter_js__WEBPACK_IMPORTED_MODULE_2__.InvalidFunctionModifierError({
                param,
                type: options?.type,
                modifier: match.modifier,
            });
    }
    const abiParameter = {
        type: `${type}${match.array ?? ''}`,
        ...name,
        ...indexed,
        ...components,
    };
    _cache_js__WEBPACK_IMPORTED_MODULE_5__.parameterCache.set(parameterCacheKey, abiParameter);
    return abiParameter;
}
// s/o latika for this
function splitParameters(params, result = [], current = '', depth = 0) {
    const length = params.trim().length;
    // biome-ignore lint/correctness/noUnreachable: recursive
    for (let i = 0; i < length; i++) {
        const char = params[i];
        const tail = params.slice(i + 1);
        switch (char) {
            case ',':
                return depth === 0
                    ? splitParameters(tail, [...result, current.trim()])
                    : splitParameters(tail, result, `${current}${char}`, depth);
            case '(':
                return splitParameters(tail, result, `${current}${char}`, depth + 1);
            case ')':
                return splitParameters(tail, result, `${current}${char}`, depth - 1);
            default:
                return splitParameters(tail, result, `${current}${char}`, depth);
        }
    }
    if (current === '')
        return result;
    if (depth !== 0)
        throw new _errors_splitParameters_js__WEBPACK_IMPORTED_MODULE_4__.InvalidParenthesisError({ current, depth });
    result.push(current.trim());
    return result;
}
function isSolidityType(type) {
    return (type === 'address' ||
        type === 'bool' ||
        type === 'function' ||
        type === 'string' ||
        _regex_js__WEBPACK_IMPORTED_MODULE_0__.bytesRegex.test(type) ||
        _regex_js__WEBPACK_IMPORTED_MODULE_0__.integerRegex.test(type));
}
const protectedKeywordsRegex = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;
/** @internal */
function isSolidityKeyword(name) {
    return (name === 'address' ||
        name === 'bool' ||
        name === 'function' ||
        name === 'string' ||
        name === 'tuple' ||
        _regex_js__WEBPACK_IMPORTED_MODULE_0__.bytesRegex.test(name) ||
        _regex_js__WEBPACK_IMPORTED_MODULE_0__.integerRegex.test(name) ||
        protectedKeywordsRegex.test(name));
}
/** @internal */
function isValidDataLocation(type, isArray) {
    return isArray || type === 'bytes' || type === 'string' || type === 'tuple';
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/regex.js":
/*!************************************************!*\
  !*** ./node_modules/abitype/dist/esm/regex.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bytesRegex: () => (/* binding */ bytesRegex),
/* harmony export */   execTyped: () => (/* binding */ execTyped),
/* harmony export */   integerRegex: () => (/* binding */ integerRegex),
/* harmony export */   isTupleRegex: () => (/* binding */ isTupleRegex)
/* harmony export */ });
// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.
// https://twitter.com/GabrielVergnaud/status/1622906834343366657
function execTyped(regex, string) {
    const match = regex.exec(string);
    return match?.groups;
}
// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`
// https://regexr.com/6va55
const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;
// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`
// https://regexr.com/6v8hp
const integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
const isTupleRegex = /^\(.+?\).*?$/;
//# sourceMappingURL=regex.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/esm/version.js":
/*!**************************************************!*\
  !*** ./node_modules/abitype/dist/esm/version.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   version: () => (/* binding */ version)
/* harmony export */ });
const version = '1.0.8';
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/AbiConstructor.js":
/*!*****************************************************!*\
  !*** ./node_modules/ox/_esm/core/AbiConstructor.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   encode: () => (/* binding */ encode),
/* harmony export */   format: () => (/* binding */ format),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   fromAbi: () => (/* binding */ fromAbi)
/* harmony export */ });
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/formatAbiItem.js");
/* harmony import */ var _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbiItem.js */ "./node_modules/ox/_esm/core/AbiItem.js");
/* harmony import */ var _AbiParameters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AbiParameters.js */ "./node_modules/ox/_esm/core/AbiParameters.js");
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");




/** @internal */
function decode(abiConstructor, options) {
    const { bytecode } = options;
    if (abiConstructor.inputs.length === 0)
        return undefined;
    const data = options.data.replace(bytecode, '0x');
    return _AbiParameters_js__WEBPACK_IMPORTED_MODULE_2__.decode(abiConstructor.inputs, data);
}
/**
 * ABI-encodes the provided constructor input (`inputs`).
 *
 * @example
 * ```ts twoslash
 * import { AbiConstructor } from 'ox'
 *
 * const constructor = AbiConstructor.from('constructor(address, uint256)')
 *
 * const data = AbiConstructor.encode(constructor, {
 *   bytecode: '0x...',
 *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],
 * })
 * ```
 *
 * @example
 * ### End-to-end
 *
 * Below is an end-to-end example of using `AbiConstructor.encode` to encode the constructor of a contract and deploy it.
 *
 * ```ts twoslash
 * import 'ox/window'
 * import { AbiConstructor, Hex } from 'ox'
 *
 * // 1. Instantiate the ABI Constructor.
 * const constructor = AbiConstructor.from(
 *   'constructor(address owner, uint256 amount)',
 * )
 *
 * // 2. Encode the ABI Constructor.
 * const data = AbiConstructor.encode(constructor, {
 *   bytecode: '0x...',
 *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],
 * })
 *
 * // 3. Deploy the contract.
 * const hash = await window.ethereum!.request({
 *   method: 'eth_sendTransaction',
 *   params: [{ data }],
 * })
 * ```
 *
 * :::note
 *
 * For simplicity, the above example uses `window.ethereum.request`, but you can use any
 * type of JSON-RPC interface.
 *
 * :::
 *
 * @param abiConstructor - The ABI Constructor to encode.
 * @param options - Encoding options.
 * @returns The encoded constructor.
 */
function encode(abiConstructor, options) {
    const { bytecode, args } = options;
    return _Hex_js__WEBPACK_IMPORTED_MODULE_3__.concat(bytecode, abiConstructor.inputs?.length && args?.length
        ? _AbiParameters_js__WEBPACK_IMPORTED_MODULE_2__.encode(abiConstructor.inputs, args)
        : '0x');
}
/** @internal */
function format(abiConstructor) {
    return abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem(abiConstructor);
}
/** @internal */
function from(abiConstructor) {
    return _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__.from(abiConstructor);
}
/** @internal */
function fromAbi(abi) {
    const item = abi.find((item) => item.type === 'constructor');
    if (!item)
        throw new _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__.NotFoundError({ name: 'constructor' });
    return item;
}
//# sourceMappingURL=AbiConstructor.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/AbiFunction.js":
/*!**************************************************!*\
  !*** ./node_modules/ox/_esm/core/AbiFunction.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeData: () => (/* binding */ decodeData),
/* harmony export */   decodeResult: () => (/* binding */ decodeResult),
/* harmony export */   encodeData: () => (/* binding */ encodeData),
/* harmony export */   encodeResult: () => (/* binding */ encodeResult),
/* harmony export */   format: () => (/* binding */ format),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   fromAbi: () => (/* binding */ fromAbi),
/* harmony export */   getSelector: () => (/* binding */ getSelector)
/* harmony export */ });
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/formatAbiItem.js");
/* harmony import */ var _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbiItem.js */ "./node_modules/ox/_esm/core/AbiItem.js");
/* harmony import */ var _AbiParameters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AbiParameters.js */ "./node_modules/ox/_esm/core/AbiParameters.js");
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");




/**
 * ABI-decodes function arguments according to the ABI Item's input types (`inputs`).
 *
 * @example
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const approve = AbiFunction.from('function approve(address, uint256)')
 *
 * const data = AbiFunction.encodeData(
 *   approve,
 *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]
 * )
 * // '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'
 *
 * const input = AbiFunction.decodeData(approve, data) // [!code focus]
 * // @log: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]
 * ```
 *
 * @param abiFunction - The ABI Item to decode.
 * @param data - The data to decode.
 */
function decodeData(abiFunction, data) {
    const { overloads } = abiFunction;
    if (_Hex_js__WEBPACK_IMPORTED_MODULE_3__.size(data) < 4)
        throw new _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__.InvalidSelectorSizeError({ data });
    if (abiFunction.inputs.length === 0)
        return undefined;
    const item = overloads
        ? fromAbi([abiFunction, ...overloads], data)
        : abiFunction;
    if (_Hex_js__WEBPACK_IMPORTED_MODULE_3__.size(data) <= 4)
        return undefined;
    return _AbiParameters_js__WEBPACK_IMPORTED_MODULE_2__.decode(item.inputs, _Hex_js__WEBPACK_IMPORTED_MODULE_3__.slice(data, 4));
}
/**
 * ABI-decodes a function's result according to the ABI Item's output types (`outputs`).
 *
 * :::tip
 *
 * This function is typically used to decode contract function return values (e.g. the response of an `eth_call` or the `input` property of a Transaction).
 *
 * See the [End-to-end Example](#end-to-end).
 *
 * :::
 *
 * @example
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const data = '0x000000000000000000000000000000000000000000000000000000000000002a'
 *
 * const totalSupply = AbiFunction.from('function totalSupply() returns (uint256)')
 *
 * const output = AbiFunction.decodeResult(totalSupply, data)
 * // @log: 42n
 * ```
 *
 * @example
 * You can extract an ABI Function from a JSON ABI with {@link ox#AbiFunction.(fromAbi:function)}:
 *
 * ```ts twoslash
 * // @noErrors
 * import { Abi, AbiFunction } from 'ox'
 *
 * const data = '0x000000000000000000000000000000000000000000000000000000000000002a'
 *
 * const erc20Abi = Abi.from([...]) // [!code hl]
 * const totalSupply = AbiFunction.fromAbi(erc20Abi, 'totalSupply') // [!code hl]
 *
 * const output = AbiFunction.decodeResult(totalSupply, data)
 * // @log: 42n
 * ```
 *
 * @example
 * ### End-to-end
 *
 * Below is an end-to-end example of using `AbiFunction.decodeResult` to decode the result of a `balanceOf` contract call on the [Wagmi Mint Example contract](https://etherscan.io/address/0xfba3912ca04dd458c843e2ee08967fc04f3579c2).
 *
 * ```ts twoslash
 * import 'ox/window'
 * import { Abi, AbiFunction } from 'ox'
 *
 * // 1. Extract the Function from the Contract's ABI.
 * const abi = Abi.from([
 *   // ...
 *   {
 *     name: 'balanceOf',
 *     type: 'function',
 *     inputs: [{ name: 'account', type: 'address' }],
 *     outputs: [{ name: 'balance', type: 'uint256' }],
 *     stateMutability: 'view',
 *   },
 *   // ...
 * ])
 * const balanceOf = AbiFunction.fromAbi(abi, 'balanceOf')
 *
 * // 2. Encode the Function Input.
 * const data = AbiFunction.encodeData(
 *   balanceOf,
 *   ['0xd2135CfB216b74109775236E36d4b433F1DF507B']
 * )
 *
 * // 3. Perform the Contract Call.
 * const response = await window.ethereum!.request({
 *   method: 'eth_call',
 *   params: [
 *     {
 *       data,
 *       to: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',
 *     },
 *   ],
 * })
 *
 * // 4. Decode the Function Output. // [!code focus]
 * const balance = AbiFunction.decodeResult(balanceOf, response) // [!code focus]
 * // @log: 42n
 * ```
 *
 * :::note
 *
 * For simplicity, the above example uses `window.ethereum.request`, but you can use any
 * type of JSON-RPC interface.
 *
 * :::
 *
 * @param abiFunction - ABI Function to decode
 * @param data - ABI-encoded function output
 * @param options - Decoding options
 * @returns Decoded function output
 */
function decodeResult(abiFunction, data, options = {}) {
    const values = _AbiParameters_js__WEBPACK_IMPORTED_MODULE_2__.decode(abiFunction.outputs, data, options);
    if (values && Object.keys(values).length === 0)
        return undefined;
    if (values && Object.keys(values).length === 1) {
        if (Array.isArray(values))
            return values[0];
        return Object.values(values)[0];
    }
    return values;
}
/**
 * ABI-encodes function arguments (`inputs`), prefixed with the 4 byte function selector.
 *
 * :::tip
 *
 * This function is typically used to encode a contract function and its arguments for contract calls (e.g. `data` parameter of an `eth_call` or `eth_sendTransaction`).
 *
 * See the [End-to-end Example](#end-to-end).
 *
 * :::
 *
 * @example
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const approve = AbiFunction.from('function approve(address, uint256)')
 *
 * const data = AbiFunction.encodeData( // [!code focus]
 *   approve, // [!code focus]
 *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n] // [!code focus]
 * ) // [!code focus]
 * // @log: '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'
 * ```
 *
 * @example
 * You can extract an ABI Function from a JSON ABI with {@link ox#AbiFunction.(fromAbi:function)}:
 *
 * ```ts twoslash
 * // @noErrors
 * import { Abi, AbiFunction } from 'ox'
 *
 * const erc20Abi = Abi.from([...]) // [!code hl]
 * const approve = AbiFunction.fromAbi(erc20Abi, 'approve') // [!code hl]
 *
 * const data = AbiFunction.encodeData(
 *   approve,
 *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]
 * )
 * // @log: '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'
 * ```
 *
 * @example
 * ### End-to-end
 *
 * Below is an end-to-end example of using `AbiFunction.encodeData` to encode the input of a `balanceOf` contract call on the [Wagmi Mint Example contract](https://etherscan.io/address/0xfba3912ca04dd458c843e2ee08967fc04f3579c2).
 *
 * ```ts twoslash
 * import 'ox/window'
 * import { Abi, AbiFunction } from 'ox'
 *
 * // 1. Extract the Function from the Contract's ABI.
 * const abi = Abi.from([
 *   // ...
 *   {
 *     name: 'balanceOf',
 *     type: 'function',
 *     inputs: [{ name: 'account', type: 'address' }],
 *     outputs: [{ name: 'balance', type: 'uint256' }],
 *     stateMutability: 'view',
 *   },
 *   // ...
 * ])
 * const balanceOf = AbiFunction.fromAbi(abi, 'balanceOf')
 *
 * // 2. Encode the Function Input. // [!code focus]
 * const data = AbiFunction.encodeData( // [!code focus]
 *   balanceOf, // [!code focus]
 *   ['0xd2135CfB216b74109775236E36d4b433F1DF507B'] // [!code focus]
 * ) // [!code focus]
 *
 * // 3. Perform the Contract Call.
 * const response = await window.ethereum!.request({
 *   method: 'eth_call',
 *   params: [
 *     {
 *       data,
 *       to: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',
 *     },
 *   ],
 * })
 *
 * // 4. Decode the Function Output.
 * const balance = AbiFunction.decodeResult(balanceOf, response)
 * ```
 *
 * :::note
 *
 * For simplicity, the above example uses `window.ethereum.request`, but you can use any
 * type of JSON-RPC interface.
 *
 * :::
 *
 * @param abiFunction - ABI Function to encode
 * @param args - Function arguments
 * @returns ABI-encoded function name and arguments
 */
function encodeData(abiFunction, ...args) {
    const { overloads } = abiFunction;
    const item = overloads
        ? fromAbi([abiFunction, ...overloads], abiFunction.name, {
            args: args[0],
        })
        : abiFunction;
    const selector = getSelector(item);
    const data = args.length > 0
        ? _AbiParameters_js__WEBPACK_IMPORTED_MODULE_2__.encode(item.inputs, args[0])
        : undefined;
    return data ? _Hex_js__WEBPACK_IMPORTED_MODULE_3__.concat(selector, data) : selector;
}
/**
 * ABI-encodes a function's result (`outputs`).
 *
 * @example
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const totalSupply = AbiFunction.from('function totalSupply() returns (uint256)')
 * const output = AbiFunction.decodeResult(totalSupply, '0x000000000000000000000000000000000000000000000000000000000000002a')
 * // 42n
 *
 * const data = AbiFunction.encodeResult(totalSupply, 42n) // [!code focus]
 * // @log: '0x000000000000000000000000000000000000000000000000000000000000002a'
 * ```
 *
 * @param abiFunction - The ABI item to encode the function output for.
 * @param output - The function output to encode.
 * @param options - Encoding options.
 * @returns The encoded function output.
 */
function encodeResult(abiFunction, output, options = {}) {
    const { as = 'Array' } = options;
    const values = (() => {
        if (abiFunction.outputs.length === 1)
            return [output];
        if (Array.isArray(output))
            return output;
        if (as === 'Object')
            return Object.values(output);
        return [output];
    })();
    return _AbiParameters_js__WEBPACK_IMPORTED_MODULE_2__.encode(abiFunction.outputs, values);
}
/**
 * Formats an {@link ox#AbiFunction.AbiFunction} into a **Human Readable ABI Function**.
 *
 * @example
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const formatted = AbiFunction.format({
 *   type: 'function',
 *   name: 'approve',
 *   stateMutability: 'nonpayable',
 *   inputs: [
 *     {
 *       name: 'spender',
 *       type: 'address',
 *     },
 *     {
 *       name: 'amount',
 *       type: 'uint256',
 *     },
 *   ],
 *   outputs: [{ type: 'bool' }],
 * })
 *
 * formatted
 * //    ^?
 *
 *
 * ```
 *
 * @param abiFunction - The ABI Function to format.
 * @returns The formatted ABI Function.
 */
function format(abiFunction) {
    return abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem(abiFunction);
}
/**
 * Parses an arbitrary **JSON ABI Function** or **Human Readable ABI Function** into a typed {@link ox#AbiFunction.AbiFunction}.
 *
 * @example
 * ### JSON ABIs
 *
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const approve = AbiFunction.from({
 *   type: 'function',
 *   name: 'approve',
 *   stateMutability: 'nonpayable',
 *   inputs: [
 *     {
 *       name: 'spender',
 *       type: 'address',
 *     },
 *     {
 *       name: 'amount',
 *       type: 'uint256',
 *     },
 *   ],
 *   outputs: [{ type: 'bool' }],
 * })
 *
 * approve
 * //^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 * @example
 * ### Human Readable ABIs
 *
 * A Human Readable ABI can be parsed into a typed ABI object:
 *
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const approve = AbiFunction.from(
 *   'function approve(address spender, uint256 amount) returns (bool)' // [!code hl]
 * )
 *
 * approve
 * //^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 * @example
 * It is possible to specify `struct`s along with your definitions:
 *
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const approve = AbiFunction.from([
 *   'struct Foo { address spender; uint256 amount; }', // [!code hl]
 *   'function approve(Foo foo) returns (bool)',
 * ])
 *
 * approve
 * //^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 *
 *
 * @param abiFunction - The ABI Function to parse.
 * @returns Typed ABI Function.
 */
function from(abiFunction, options = {}) {
    return _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__.from(abiFunction, options);
}
/**
 * Extracts an {@link ox#AbiFunction.AbiFunction} from an {@link ox#Abi.Abi} given a name and optional arguments.
 *
 * @example
 * ### Extracting by Name
 *
 * ABI Functions can be extracted by their name using the `name` option:
 *
 * ```ts twoslash
 * import { Abi, AbiFunction } from 'ox'
 *
 * const abi = Abi.from([
 *   'function foo()',
 *   'event Transfer(address owner, address to, uint256 tokenId)',
 *   'function bar(string a) returns (uint256 x)',
 * ])
 *
 * const item = AbiFunction.fromAbi(abi, 'foo') // [!code focus]
 * //    ^?
 *
 *
 *
 *
 *
 *
 * ```
 *
 * @example
 * ### Extracting by Selector
 *
 * ABI Functions can be extract by their selector when {@link ox#Hex.Hex} is provided to `name`.
 *
 * ```ts twoslash
 * import { Abi, AbiFunction } from 'ox'
 *
 * const abi = Abi.from([
 *   'function foo()',
 *   'event Transfer(address owner, address to, uint256 tokenId)',
 *   'function bar(string a) returns (uint256 x)',
 * ])
 * const item = AbiFunction.fromAbi(abi, '0x095ea7b3') // [!code focus]
 * //    ^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 * :::note
 *
 * Extracting via a hex selector is useful when extracting an ABI Function from an `eth_call` RPC response or
 * from a Transaction `input`.
 *
 * :::
 *
 * @param abi - The ABI to extract from.
 * @param name - The name (or selector) of the ABI item to extract.
 * @param options - Extraction options.
 * @returns The ABI item.
 */
function fromAbi(abi, name, options) {
    const item = _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__.fromAbi(abi, name, options);
    if (item.type !== 'function')
        throw new _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__.NotFoundError({ name, type: 'function' });
    return item;
}
/**
 * Computes the [4-byte selector](https://solidity-by-example.org/function-selector/) for an {@link ox#AbiFunction.AbiFunction}.
 *
 * Useful for computing function selectors for calldata.
 *
 * @example
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const selector = AbiFunction.getSelector('function ownerOf(uint256 tokenId)')
 * // @log: '0x6352211e'
 * ```
 *
 * @example
 * ```ts twoslash
 * import { AbiFunction } from 'ox'
 *
 * const selector = AbiFunction.getSelector({
 *   inputs: [{ type: 'uint256' }],
 *   name: 'ownerOf',
 *   outputs: [],
 *   stateMutability: 'view',
 *   type: 'function'
 * })
 * // @log: '0x6352211e'
 * ```
 *
 * @param abiItem - The ABI item to compute the selector for.
 * @returns The first 4 bytes of the {@link ox#Hash.(keccak256:function)} hash of the function signature.
 */
function getSelector(abiItem) {
    return _AbiItem_js__WEBPACK_IMPORTED_MODULE_1__.getSelector(abiItem);
}
//# sourceMappingURL=AbiFunction.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/AbiItem.js":
/*!**********************************************!*\
  !*** ./node_modules/ox/_esm/core/AbiItem.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AmbiguityError: () => (/* binding */ AmbiguityError),
/* harmony export */   InvalidSelectorSizeError: () => (/* binding */ InvalidSelectorSizeError),
/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),
/* harmony export */   format: () => (/* binding */ format),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   fromAbi: () => (/* binding */ fromAbi),
/* harmony export */   getSelector: () => (/* binding */ getSelector),
/* harmony export */   getSignature: () => (/* binding */ getSignature),
/* harmony export */   getSignatureHash: () => (/* binding */ getSignatureHash)
/* harmony export */ });
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/formatAbiItem.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/parseAbiItem.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/ox/_esm/core/Errors.js");
/* harmony import */ var _Hash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Hash.js */ "./node_modules/ox/_esm/core/Hash.js");
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");
/* harmony import */ var _internal_abiItem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/abiItem.js */ "./node_modules/ox/_esm/core/internal/abiItem.js");





/**
 * Formats an {@link ox#AbiItem.AbiItem} into a **Human Readable ABI Item**.
 *
 * @example
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const formatted = AbiItem.format({
 *   type: 'function',
 *   name: 'approve',
 *   stateMutability: 'nonpayable',
 *   inputs: [
 *     {
 *       name: 'spender',
 *       type: 'address',
 *     },
 *     {
 *       name: 'amount',
 *       type: 'uint256',
 *     },
 *   ],
 *   outputs: [{ type: 'bool' }],
 * })
 *
 * formatted
 * //    ^?
 *
 *
 * ```
 *
 * @param abiItem - The ABI Item to format.
 * @returns The formatted ABI Item  .
 */
function format(abiItem) {
    return abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem(abiItem);
}
/**
 * Parses an arbitrary **JSON ABI Item** or **Human Readable ABI Item** into a typed {@link ox#AbiItem.AbiItem}.
 *
 * @example
 * ### JSON ABIs
 *
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const abiItem = AbiItem.from({
 *   type: 'function',
 *   name: 'approve',
 *   stateMutability: 'nonpayable',
 *   inputs: [
 *     {
 *       name: 'spender',
 *       type: 'address',
 *     },
 *     {
 *       name: 'amount',
 *       type: 'uint256',
 *     },
 *   ],
 *   outputs: [{ type: 'bool' }],
 * })
 *
 * abiItem
 * //^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 * @example
 * ### Human Readable ABIs
 *
 * A Human Readable ABI can be parsed into a typed ABI object:
 *
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const abiItem = AbiItem.from(
 *   'function approve(address spender, uint256 amount) returns (bool)' // [!code hl]
 * )
 *
 * abiItem
 * //^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 * @example
 * It is possible to specify `struct`s along with your definitions:
 *
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const abiItem = AbiItem.from([
 *   'struct Foo { address spender; uint256 amount; }', // [!code hl]
 *   'function approve(Foo foo) returns (bool)',
 * ])
 *
 * abiItem
 * //^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 *
 *
 * @param abiItem - The ABI Item to parse.
 * @returns The typed ABI Item.
 */
function from(abiItem, options = {}) {
    const { prepare = true } = options;
    const item = (() => {
        if (Array.isArray(abiItem))
            return abitype__WEBPACK_IMPORTED_MODULE_1__.parseAbiItem(abiItem);
        if (typeof abiItem === 'string')
            return abitype__WEBPACK_IMPORTED_MODULE_1__.parseAbiItem(abiItem);
        return abiItem;
    })();
    return {
        ...item,
        ...(prepare ? { hash: getSignatureHash(item) } : {}),
    };
}
/**
 * Extracts an {@link ox#AbiItem.AbiItem} from an {@link ox#Abi.Abi} given a name and optional arguments.
 *
 * @example
 * ABI Items can be extracted by their name using the `name` option:
 *
 * ```ts twoslash
 * import { Abi, AbiItem } from 'ox'
 *
 * const abi = Abi.from([
 *   'function foo()',
 *   'event Transfer(address owner, address to, uint256 tokenId)',
 *   'function bar(string a) returns (uint256 x)',
 * ])
 *
 * const item = AbiItem.fromAbi(abi, 'Transfer') // [!code focus]
 * //    ^?
 *
 *
 *
 *
 *
 *
 * ```
 *
 * @example
 * ### Extracting by Selector
 *
 * ABI Items can be extract by their selector when {@link ox#Hex.Hex} is provided to `name`.
 *
 * ```ts twoslash
 * import { Abi, AbiItem } from 'ox'
 *
 * const abi = Abi.from([
 *   'function foo()',
 *   'event Transfer(address owner, address to, uint256 tokenId)',
 *   'function bar(string a) returns (uint256 x)',
 * ])
 * const item = AbiItem.fromAbi(abi, '0x095ea7b3') // [!code focus]
 * //    ^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 * :::note
 *
 * Extracting via a hex selector is useful when extracting an ABI Item from an `eth_call` RPC response,
 * a Transaction `input`, or from Event Log `topics`.
 *
 * :::
 *
 * @param abi - The ABI to extract from.
 * @param name - The name (or selector) of the ABI item to extract.
 * @param options - Extraction options.
 * @returns The ABI item.
 */
function fromAbi(abi, name, options) {
    const { args = [], prepare = true } = (options ??
        {});
    const isSelector = _Hex_js__WEBPACK_IMPORTED_MODULE_4__.validate(name, { strict: false });
    const abiItems = abi.filter((abiItem) => {
        if (isSelector) {
            if (abiItem.type === 'function' || abiItem.type === 'error')
                return getSelector(abiItem) === _Hex_js__WEBPACK_IMPORTED_MODULE_4__.slice(name, 0, 4);
            if (abiItem.type === 'event')
                return getSignatureHash(abiItem) === name;
            return false;
        }
        return 'name' in abiItem && abiItem.name === name;
    });
    if (abiItems.length === 0)
        throw new NotFoundError({ name: name });
    if (abiItems.length === 1)
        return {
            ...abiItems[0],
            ...(prepare ? { hash: getSignatureHash(abiItems[0]) } : {}),
        };
    let matchedAbiItem = undefined;
    for (const abiItem of abiItems) {
        if (!('inputs' in abiItem))
            continue;
        if (!args || args.length === 0) {
            if (!abiItem.inputs || abiItem.inputs.length === 0)
                return {
                    ...abiItem,
                    ...(prepare ? { hash: getSignatureHash(abiItem) } : {}),
                };
            continue;
        }
        if (!abiItem.inputs)
            continue;
        if (abiItem.inputs.length === 0)
            continue;
        if (abiItem.inputs.length !== args.length)
            continue;
        const matched = args.every((arg, index) => {
            const abiParameter = 'inputs' in abiItem && abiItem.inputs[index];
            if (!abiParameter)
                return false;
            return _internal_abiItem_js__WEBPACK_IMPORTED_MODULE_5__.isArgOfType(arg, abiParameter);
        });
        if (matched) {
            // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).
            if (matchedAbiItem &&
                'inputs' in matchedAbiItem &&
                matchedAbiItem.inputs) {
                const ambiguousTypes = _internal_abiItem_js__WEBPACK_IMPORTED_MODULE_5__.getAmbiguousTypes(abiItem.inputs, matchedAbiItem.inputs, args);
                if (ambiguousTypes)
                    throw new AmbiguityError({
                        abiItem,
                        type: ambiguousTypes[0],
                    }, {
                        abiItem: matchedAbiItem,
                        type: ambiguousTypes[1],
                    });
            }
            matchedAbiItem = abiItem;
        }
    }
    const abiItem = (() => {
        if (matchedAbiItem)
            return matchedAbiItem;
        const [abiItem, ...overloads] = abiItems;
        return { ...abiItem, overloads };
    })();
    if (!abiItem)
        throw new NotFoundError({ name: name });
    return {
        ...abiItem,
        ...(prepare ? { hash: getSignatureHash(abiItem) } : {}),
    };
}
/**
 * Computes the [4-byte selector](https://solidity-by-example.org/function-selector/) for an {@link ox#AbiItem.AbiItem}.
 *
 * Useful for computing function selectors for calldata.
 *
 * @example
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const selector = AbiItem.getSelector('function ownerOf(uint256 tokenId)')
 * // @log: '0x6352211e'
 * ```
 *
 * @example
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const selector = AbiItem.getSelector({
 *   inputs: [{ type: 'uint256' }],
 *   name: 'ownerOf',
 *   outputs: [],
 *   stateMutability: 'view',
 *   type: 'function'
 * })
 * // @log: '0x6352211e'
 * ```
 *
 * @param abiItem - The ABI item to compute the selector for. Can be a signature or an ABI item for an error, event, function, etc.
 * @returns The first 4 bytes of the {@link ox#Hash.(keccak256:function)} hash of the function signature.
 */
function getSelector(abiItem) {
    return _Hex_js__WEBPACK_IMPORTED_MODULE_4__.slice(getSignatureHash(abiItem), 0, 4);
}
/**
 * Computes the stringified signature for a given {@link ox#AbiItem.AbiItem}.
 *
 * @example
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const signature = AbiItem.getSignature('function ownerOf(uint256 tokenId)')
 * // @log: 'ownerOf(uint256)'
 * ```
 *
 * @example
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const signature = AbiItem.getSignature({
 *   name: 'ownerOf',
 *   type: 'function',
 *   inputs: [{ name: 'tokenId', type: 'uint256' }],
 *   outputs: [],
 *   stateMutability: 'view',
 * })
 * // @log: 'ownerOf(uint256)'
 * ```
 *
 * @param abiItem - The ABI Item to compute the signature for.
 * @returns The stringified signature of the ABI Item.
 */
function getSignature(abiItem) {
    const signature = (() => {
        if (typeof abiItem === 'string')
            return abiItem;
        return abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem(abiItem);
    })();
    return _internal_abiItem_js__WEBPACK_IMPORTED_MODULE_5__.normalizeSignature(signature);
}
/**
 * Computes the signature hash for an {@link ox#AbiItem.AbiItem}.
 *
 * Useful for computing Event Topic values.
 *
 * @example
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const hash = AbiItem.getSignatureHash('event Transfer(address indexed from, address indexed to, uint256 amount)')
 * // @log: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
 * ```
 *
 * @example
 * ```ts twoslash
 * import { AbiItem } from 'ox'
 *
 * const hash = AbiItem.getSignatureHash({
 *   name: 'Transfer',
 *   type: 'event',
 *   inputs: [
 *     { name: 'from', type: 'address', indexed: true },
 *     { name: 'to', type: 'address', indexed: true },
 *     { name: 'amount', type: 'uint256', indexed: false },
 *   ],
 * })
 * // @log: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
 * ```
 *
 * @param abiItem - The ABI Item to compute the signature hash for.
 * @returns The {@link ox#Hash.(keccak256:function)} hash of the ABI item's signature.
 */
function getSignatureHash(abiItem) {
    if (typeof abiItem !== 'string' && 'hash' in abiItem && abiItem.hash)
        return abiItem.hash;
    return _Hash_js__WEBPACK_IMPORTED_MODULE_3__.keccak256(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromString(getSignature(abiItem)));
}
/**
 * Throws when ambiguous types are found on overloaded ABI items.
 *
 * @example
 * ```ts twoslash
 * import { Abi, AbiFunction } from 'ox'
 *
 * const foo = Abi.from(['function foo(address)', 'function foo(bytes20)'])
 * AbiFunction.fromAbi(foo, 'foo', {
 *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],
 * })
 * // @error: AbiItem.AmbiguityError: Found ambiguous types in overloaded ABI Items.
 * // @error: `bytes20` in `foo(bytes20)`, and
 * // @error: `address` in `foo(address)`
 * // @error: These types encode differently and cannot be distinguished at runtime.
 * // @error: Remove one of the ambiguous items in the ABI.
 * ```
 *
 * ### Solution
 *
 * Remove one of the ambiguous types from the ABI.
 *
 * ```ts twoslash
 * import { Abi, AbiFunction } from 'ox'
 *
 * const foo = Abi.from([
 *   'function foo(address)',
 *   'function foo(bytes20)' // [!code --]
 * ])
 * AbiFunction.fromAbi(foo, 'foo', {
 *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],
 * })
 * // @error: AbiItem.AmbiguityError: Found ambiguous types in overloaded ABI Items.
 * // @error: `bytes20` in `foo(bytes20)`, and
 * // @error: `address` in `foo(address)`
 * // @error: These types encode differently and cannot be distinguished at runtime.
 * // @error: Remove one of the ambiguous items in the ABI.
 * ```
 */
class AmbiguityError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(x, y) {
        super('Found ambiguous types in overloaded ABI Items.', {
            metaMessages: [
                // TODO: abitype to add support for signature-formatted ABI items.
                `\`${x.type}\` in \`${_internal_abiItem_js__WEBPACK_IMPORTED_MODULE_5__.normalizeSignature(abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem(x.abiItem))}\`, and`,
                `\`${y.type}\` in \`${_internal_abiItem_js__WEBPACK_IMPORTED_MODULE_5__.normalizeSignature(abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem(y.abiItem))}\``,
                '',
                'These types encode differently and cannot be distinguished at runtime.',
                'Remove one of the ambiguous items in the ABI.',
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiItem.AmbiguityError'
        });
    }
}
/**
 * Throws when an ABI item is not found in the ABI.
 *
 * @example
 * ```ts twoslash
 * // @noErrors
 * import { Abi, AbiFunction } from 'ox'
 *
 * const foo = Abi.from([
 *   'function foo(address)',
 *   'function bar(uint)'
 * ])
 * AbiFunction.fromAbi(foo, 'baz')
 * // @error: AbiItem.NotFoundError: ABI function with name "baz" not found.
 * ```
 *
 * ### Solution
 *
 * Ensure the ABI item exists on the ABI.
 *
 * ```ts twoslash
 * // @noErrors
 * import { Abi, AbiFunction } from 'ox'
 *
 * const foo = Abi.from([
 *   'function foo(address)',
 *   'function bar(uint)',
 *   'function baz(bool)' // [!code ++]
 * ])
 * AbiFunction.fromAbi(foo, 'baz')
 * ```
 */
class NotFoundError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ name, data, type = 'item', }) {
        const selector = (() => {
            if (name)
                return ` with name "${name}"`;
            if (data)
                return ` with data "${data}"`;
            return '';
        })();
        super(`ABI ${type}${selector} not found.`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiItem.NotFoundError'
        });
    }
}
/**
 * Throws when the selector size is invalid.
 *
 * @example
 * ```ts twoslash
 * import { Abi, AbiFunction } from 'ox'
 *
 * const foo = Abi.from([
 *   'function foo(address)',
 *   'function bar(uint)'
 * ])
 * AbiFunction.fromAbi(foo, '0xaaa')
 * // @error: AbiItem.InvalidSelectorSizeError: Selector size is invalid. Expected 4 bytes. Received 2 bytes ("0xaaa").
 * ```
 *
 * ### Solution
 *
 * Ensure the selector size is 4 bytes.
 *
 * ```ts twoslash
 * // @noErrors
 * import { Abi, AbiFunction } from 'ox'
 *
 * const foo = Abi.from([
 *   'function foo(address)',
 *   'function bar(uint)'
 * ])
 * AbiFunction.fromAbi(foo, '0x7af82b1a')
 * ```
 */
class InvalidSelectorSizeError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ data }) {
        super(`Selector size is invalid. Expected 4 bytes. Received ${_Hex_js__WEBPACK_IMPORTED_MODULE_4__.size(data)} bytes ("${data}").`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiItem.InvalidSelectorSizeError'
        });
    }
}
//# sourceMappingURL=AbiItem.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/AbiParameters.js":
/*!****************************************************!*\
  !*** ./node_modules/ox/_esm/core/AbiParameters.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArrayLengthMismatchError: () => (/* binding */ ArrayLengthMismatchError),
/* harmony export */   BytesSizeMismatchError: () => (/* binding */ BytesSizeMismatchError),
/* harmony export */   DataSizeTooSmallError: () => (/* binding */ DataSizeTooSmallError),
/* harmony export */   InvalidArrayError: () => (/* binding */ InvalidArrayError),
/* harmony export */   InvalidTypeError: () => (/* binding */ InvalidTypeError),
/* harmony export */   LengthMismatchError: () => (/* binding */ LengthMismatchError),
/* harmony export */   ZeroDataError: () => (/* binding */ ZeroDataError),
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   encode: () => (/* binding */ encode),
/* harmony export */   encodePacked: () => (/* binding */ encodePacked),
/* harmony export */   format: () => (/* binding */ format),
/* harmony export */   from: () => (/* binding */ from)
/* harmony export */ });
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/parseAbiParameters.js");
/* harmony import */ var _Address_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Address.js */ "./node_modules/ox/_esm/core/Address.js");
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Bytes.js */ "./node_modules/ox/_esm/core/Bytes.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/ox/_esm/core/Errors.js");
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");
/* harmony import */ var _Solidity_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Solidity.js */ "./node_modules/ox/_esm/core/Solidity.js");
/* harmony import */ var _internal_abiParameters_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/abiParameters.js */ "./node_modules/ox/_esm/core/internal/abiParameters.js");
/* harmony import */ var _internal_cursor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/cursor.js */ "./node_modules/ox/_esm/core/internal/cursor.js");








// eslint-disable-next-line jsdoc/require-jsdoc
function decode(parameters, data, options = {}) {
    const { as = 'Array', checksumAddress = false } = options;
    const bytes = typeof data === 'string' ? _Bytes_js__WEBPACK_IMPORTED_MODULE_3__.fromHex(data) : data;
    const cursor = _internal_cursor_js__WEBPACK_IMPORTED_MODULE_8__.create(bytes);
    if (_Bytes_js__WEBPACK_IMPORTED_MODULE_3__.size(bytes) === 0 && parameters.length > 0)
        throw new ZeroDataError();
    if (_Bytes_js__WEBPACK_IMPORTED_MODULE_3__.size(bytes) && _Bytes_js__WEBPACK_IMPORTED_MODULE_3__.size(bytes) < 32)
        throw new DataSizeTooSmallError({
            data: typeof data === 'string' ? data : _Hex_js__WEBPACK_IMPORTED_MODULE_5__.fromBytes(data),
            parameters: parameters,
            size: _Bytes_js__WEBPACK_IMPORTED_MODULE_3__.size(bytes),
        });
    let consumed = 0;
    const values = as === 'Array' ? [] : {};
    for (let i = 0; i < parameters.length; ++i) {
        const param = parameters[i];
        cursor.setPosition(consumed);
        const [data, consumed_] = _internal_abiParameters_js__WEBPACK_IMPORTED_MODULE_7__.decodeParameter(cursor, param, {
            checksumAddress,
            staticPosition: 0,
        });
        consumed += consumed_;
        if (as === 'Array')
            values.push(data);
        else
            values[param.name ?? i] = data;
    }
    return values;
}
/**
 * Encodes primitive values into ABI encoded data as per the [Application Binary Interface (ABI) Specification](https://docs.soliditylang.org/en/latest/abi-spec).
 *
 * @example
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * const data = AbiParameters.encode(
 *   AbiParameters.from(['string', 'uint', 'bool']),
 *   ['wagmi', 420n, true],
 * )
 * ```
 *
 * @example
 * ### JSON Parameters
 *
 * Specify **JSON ABI** Parameters as schema:
 *
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * const data = AbiParameters.encode(
 *   [
 *     { type: 'string', name: 'name' },
 *     { type: 'uint', name: 'age' },
 *     { type: 'bool', name: 'isOwner' },
 *   ],
 *   ['wagmi', 420n, true],
 * )
 * ```
 *
 * @param parameters - The set of ABI parameters to encode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).
 * @param values - The set of primitive values that correspond to the ABI types defined in `parameters`.
 * @returns ABI encoded data.
 */
function encode(parameters, values, options) {
    const { checksumAddress = false } = options ?? {};
    if (parameters.length !== values.length)
        throw new LengthMismatchError({
            expectedLength: parameters.length,
            givenLength: values.length,
        });
    // Prepare the parameters to determine dynamic types to encode.
    const preparedParameters = _internal_abiParameters_js__WEBPACK_IMPORTED_MODULE_7__.prepareParameters({
        checksumAddress,
        parameters: parameters,
        values: values,
    });
    const data = _internal_abiParameters_js__WEBPACK_IMPORTED_MODULE_7__.encode(preparedParameters);
    if (data.length === 0)
        return '0x';
    return data;
}
/**
 * Encodes an array of primitive values to a [packed ABI encoding](https://docs.soliditylang.org/en/latest/abi-spec.html#non-standard-packed-mode).
 *
 * @example
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * const encoded = AbiParameters.encodePacked(
 *   ['address', 'string'],
 *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 'hello world'],
 * )
 * // @log: '0xd8da6bf26964af9d7eed9e03e53415d37aa9604568656c6c6f20776f726c64'
 * ```
 *
 * @param types - Set of ABI types to pack encode.
 * @param values - The set of primitive values that correspond to the ABI types defined in `types`.
 * @returns The encoded packed data.
 */
function encodePacked(types, values) {
    if (types.length !== values.length)
        throw new LengthMismatchError({
            expectedLength: types.length,
            givenLength: values.length,
        });
    const data = [];
    for (let i = 0; i < types.length; i++) {
        const type = types[i];
        const value = values[i];
        data.push(encodePacked.encode(type, value));
    }
    return _Hex_js__WEBPACK_IMPORTED_MODULE_5__.concat(...data);
}
(function (encodePacked) {
    // eslint-disable-next-line jsdoc/require-jsdoc
    function encode(type, value, isArray = false) {
        if (type === 'address') {
            const address = value;
            _Address_js__WEBPACK_IMPORTED_MODULE_2__.assert(address);
            return _Hex_js__WEBPACK_IMPORTED_MODULE_5__.padLeft(address.toLowerCase(), isArray ? 32 : 0);
        }
        if (type === 'string')
            return _Hex_js__WEBPACK_IMPORTED_MODULE_5__.fromString(value);
        if (type === 'bytes')
            return value;
        if (type === 'bool')
            return _Hex_js__WEBPACK_IMPORTED_MODULE_5__.padLeft(_Hex_js__WEBPACK_IMPORTED_MODULE_5__.fromBoolean(value), isArray ? 32 : 1);
        const intMatch = type.match(_Solidity_js__WEBPACK_IMPORTED_MODULE_6__.integerRegex);
        if (intMatch) {
            const [_type, baseType, bits = '256'] = intMatch;
            const size = Number.parseInt(bits) / 8;
            return _Hex_js__WEBPACK_IMPORTED_MODULE_5__.fromNumber(value, {
                size: isArray ? 32 : size,
                signed: baseType === 'int',
            });
        }
        const bytesMatch = type.match(_Solidity_js__WEBPACK_IMPORTED_MODULE_6__.bytesRegex);
        if (bytesMatch) {
            const [_type, size] = bytesMatch;
            if (Number.parseInt(size) !== (value.length - 2) / 2)
                throw new BytesSizeMismatchError({
                    expectedSize: Number.parseInt(size),
                    value: value,
                });
            return _Hex_js__WEBPACK_IMPORTED_MODULE_5__.padRight(value, isArray ? 32 : 0);
        }
        const arrayMatch = type.match(_Solidity_js__WEBPACK_IMPORTED_MODULE_6__.arrayRegex);
        if (arrayMatch && Array.isArray(value)) {
            const [_type, childType] = arrayMatch;
            const data = [];
            for (let i = 0; i < value.length; i++) {
                data.push(encode(childType, value[i], true));
            }
            if (data.length === 0)
                return '0x';
            return _Hex_js__WEBPACK_IMPORTED_MODULE_5__.concat(...data);
        }
        throw new InvalidTypeError(type);
    }
    encodePacked.encode = encode;
})(encodePacked || (encodePacked = {}));
/**
 * Formats {@link ox#AbiParameters.AbiParameters} into **Human Readable ABI Parameters**.
 *
 * @example
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * const formatted = AbiParameters.format([
 *   {
 *     name: 'spender',
 *     type: 'address',
 *   },
 *   {
 *     name: 'amount',
 *     type: 'uint256',
 *   },
 * ])
 *
 * formatted
 * //    ^?
 *
 *
 * ```
 *
 * @param parameters - The ABI Parameters to format.
 * @returns The formatted ABI Parameters  .
 */
function format(parameters) {
    return abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiParameters(parameters);
}
/**
 * Parses arbitrary **JSON ABI Parameters** or **Human Readable ABI Parameters** into typed {@link ox#AbiParameters.AbiParameters}.
 *
 * @example
 * ### JSON Parameters
 *
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * const parameters = AbiParameters.from([
 *   {
 *     name: 'spender',
 *     type: 'address',
 *   },
 *   {
 *     name: 'amount',
 *     type: 'uint256',
 *   },
 * ])
 *
 * parameters
 * //^?
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 * @example
 * ### Human Readable Parameters
 *
 * Human Readable ABI Parameters can be parsed into a typed {@link ox#AbiParameters.AbiParameters}:
 *
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * const parameters = AbiParameters.from('address spender, uint256 amount')
 *
 * parameters
 * //^?
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 * @example
 * It is possible to specify `struct`s along with your definitions:
 *
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * const parameters = AbiParameters.from([
 *   'struct Foo { address spender; uint256 amount; }', // [!code hl]
 *   'Foo foo, address bar',
 * ])
 *
 * parameters
 * //^?
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * ```
 *
 *
 *
 * @param parameters - The ABI Parameters to parse.
 * @returns The typed ABI Parameters.
 */
function from(parameters) {
    if (Array.isArray(parameters) && typeof parameters[0] === 'string')
        return abitype__WEBPACK_IMPORTED_MODULE_1__.parseAbiParameters(parameters);
    if (typeof parameters === 'string')
        return abitype__WEBPACK_IMPORTED_MODULE_1__.parseAbiParameters(parameters);
    return parameters;
}
/**
 * Throws when the data size is too small for the given parameters.
 *
 * @example
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * AbiParameters.decode([{ type: 'uint256' }], '0x010f')
 * //                                             ↑ ❌ 2 bytes
 * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.
 * // @error: Params: (uint256)
 * // @error: Data:   0x010f (2 bytes)
 * ```
 *
 * ### Solution
 *
 * Pass a valid data size.
 *
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')
 * //                                             ↑ ✅ 32 bytes
 * ```
 */
class DataSizeTooSmallError extends _Errors_js__WEBPACK_IMPORTED_MODULE_4__.BaseError {
    constructor({ data, parameters, size, }) {
        super(`Data size of ${size} bytes is too small for given parameters.`, {
            metaMessages: [
                `Params: (${abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiParameters(parameters)})`,
                `Data:   ${data} (${size} bytes)`,
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiParameters.DataSizeTooSmallError'
        });
    }
}
/**
 * Throws when zero data is provided, but data is expected.
 *
 * @example
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * AbiParameters.decode([{ type: 'uint256' }], '0x')
 * //                                           ↑ ❌ zero data
 * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.
 * // @error: Params: (uint256)
 * // @error: Data:   0x010f (2 bytes)
 * ```
 *
 * ### Solution
 *
 * Pass valid data.
 *
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')
 * //                                             ↑ ✅ 32 bytes
 * ```
 */
class ZeroDataError extends _Errors_js__WEBPACK_IMPORTED_MODULE_4__.BaseError {
    constructor() {
        super('Cannot decode zero data ("0x") with ABI parameters.');
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiParameters.ZeroDataError'
        });
    }
}
/**
 * The length of the array value does not match the length specified in the corresponding ABI parameter.
 *
 * ### Example
 *
 * ```ts twoslash
 * // @noErrors
 * import { AbiParameters } from 'ox'
 * // ---cut---
 * AbiParameters.encode(AbiParameters.from('uint256[3]'), [[69n, 420n]])
 * //                                               ↑ expected: 3  ↑ ❌ length: 2
 * // @error: AbiParameters.ArrayLengthMismatchError: ABI encoding array length mismatch
 * // @error: for type `uint256[3]`. Expected: `3`. Given: `2`.
 * ```
 *
 * ### Solution
 *
 * Pass an array of the correct length.
 *
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 * // ---cut---
 * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [[69n, 420n, 69n]])
 * //                                                         ↑ ✅ length: 3
 * ```
 */
class ArrayLengthMismatchError extends _Errors_js__WEBPACK_IMPORTED_MODULE_4__.BaseError {
    constructor({ expectedLength, givenLength, type, }) {
        super(`Array length mismatch for type \`${type}\`. Expected: \`${expectedLength}\`. Given: \`${givenLength}\`.`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiParameters.ArrayLengthMismatchError'
        });
    }
}
/**
 * The size of the bytes value does not match the size specified in the corresponding ABI parameter.
 *
 * ### Example
 *
 * ```ts twoslash
 * // @noErrors
 * import { AbiParameters } from 'ox'
 * // ---cut---
 * AbiParameters.encode(AbiParameters.from('bytes8'), [['0xdeadbeefdeadbeefdeadbeef']])
 * //                                            ↑ expected: 8 bytes  ↑ ❌ size: 12 bytes
 * // @error: BytesSizeMismatchError: Size of bytes "0xdeadbeefdeadbeefdeadbeef"
 * // @error: (bytes12) does not match expected size (bytes8).
 * ```
 *
 * ### Solution
 *
 * Pass a bytes value of the correct size.
 *
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 * // ---cut---
 * AbiParameters.encode(AbiParameters.from(['bytes8']), ['0xdeadbeefdeadbeef'])
 * //                                                       ↑ ✅ size: 8 bytes
 * ```
 */
class BytesSizeMismatchError extends _Errors_js__WEBPACK_IMPORTED_MODULE_4__.BaseError {
    constructor({ expectedSize, value, }) {
        super(`Size of bytes "${value}" (bytes${_Hex_js__WEBPACK_IMPORTED_MODULE_5__.size(value)}) does not match expected size (bytes${expectedSize}).`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiParameters.BytesSizeMismatchError'
        });
    }
}
/**
 * The length of the values to encode does not match the length of the ABI parameters.
 *
 * ### Example
 *
 * ```ts twoslash
 * // @noErrors
 * import { AbiParameters } from 'ox'
 * // ---cut---
 * AbiParameters.encode(AbiParameters.from(['string', 'uint256']), ['hello'])
 * // @error: LengthMismatchError: ABI encoding params/values length mismatch.
 * // @error: Expected length (params): 2
 * // @error: Given length (values): 1
 * ```
 *
 * ### Solution
 *
 * Pass the correct number of values to encode.
 *
 * ### Solution
 *
 * Pass a [valid ABI type](https://docs.soliditylang.org/en/develop/abi-spec.html#types).
 */
class LengthMismatchError extends _Errors_js__WEBPACK_IMPORTED_MODULE_4__.BaseError {
    constructor({ expectedLength, givenLength, }) {
        super([
            'ABI encoding parameters/values length mismatch.',
            `Expected length (parameters): ${expectedLength}`,
            `Given length (values): ${givenLength}`,
        ].join('\n'));
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiParameters.LengthMismatchError'
        });
    }
}
/**
 * The value provided is not a valid array as specified in the corresponding ABI parameter.
 *
 * ### Example
 *
 * ```ts twoslash
 * // @noErrors
 * import { AbiParameters } from 'ox'
 * // ---cut---
 * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [69])
 * ```
 *
 * ### Solution
 *
 * Pass an array value.
 */
class InvalidArrayError extends _Errors_js__WEBPACK_IMPORTED_MODULE_4__.BaseError {
    constructor(value) {
        super(`Value \`${value}\` is not a valid array.`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiParameters.InvalidArrayError'
        });
    }
}
/**
 * Throws when the ABI parameter type is invalid.
 *
 * @example
 * ```ts twoslash
 * import { AbiParameters } from 'ox'
 *
 * AbiParameters.decode([{ type: 'lol' }], '0x00000000000000000000000000000000000000000000000000000000000010f')
 * //                             ↑ ❌ invalid type
 * // @error: AbiParameters.InvalidTypeError: Type `lol` is not a valid ABI Type.
 * ```
 */
class InvalidTypeError extends _Errors_js__WEBPACK_IMPORTED_MODULE_4__.BaseError {
    constructor(type) {
        super(`Type \`${type}\` is not a valid ABI Type.`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'AbiParameters.InvalidTypeError'
        });
    }
}
//# sourceMappingURL=AbiParameters.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Address.js":
/*!**********************************************!*\
  !*** ./node_modules/ox/_esm/core/Address.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidAddressError: () => (/* binding */ InvalidAddressError),
/* harmony export */   InvalidChecksumError: () => (/* binding */ InvalidChecksumError),
/* harmony export */   InvalidInputError: () => (/* binding */ InvalidInputError),
/* harmony export */   assert: () => (/* binding */ assert),
/* harmony export */   checksum: () => (/* binding */ checksum),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   fromPublicKey: () => (/* binding */ fromPublicKey),
/* harmony export */   isEqual: () => (/* binding */ isEqual),
/* harmony export */   validate: () => (/* binding */ validate)
/* harmony export */ });
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bytes.js */ "./node_modules/ox/_esm/core/Bytes.js");
/* harmony import */ var _Caches_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Caches.js */ "./node_modules/ox/_esm/core/Caches.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/ox/_esm/core/Errors.js");
/* harmony import */ var _Hash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Hash.js */ "./node_modules/ox/_esm/core/Hash.js");
/* harmony import */ var _PublicKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PublicKey.js */ "./node_modules/ox/_esm/core/PublicKey.js");





const addressRegex = /^0x[a-fA-F0-9]{40}$/;
/**
 * Asserts that the given value is a valid {@link ox#Address.Address}.
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.assert('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.assert('0xdeadbeef')
 * // @error: InvalidAddressError: Address "0xdeadbeef" is invalid.
 * ```
 *
 * @param value - Value to assert if it is a valid address.
 * @param options - Assertion options.
 */
function assert(value, options = {}) {
    const { strict = true } = options;
    if (!addressRegex.test(value))
        throw new InvalidAddressError({
            address: value,
            cause: new InvalidInputError(),
        });
    if (strict) {
        if (value.toLowerCase() === value)
            return;
        if (checksum(value) !== value)
            throw new InvalidAddressError({
                address: value,
                cause: new InvalidChecksumError(),
            });
    }
}
/**
 * Computes the checksum address for the given {@link ox#Address.Address}.
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.checksum('0xa0cf798816d4b9b9866b5330eea46a18382f251e')
 * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'
 * ```
 *
 * @param address - The address to compute the checksum for.
 * @returns The checksummed address.
 */
function checksum(address) {
    if (_Caches_js__WEBPACK_IMPORTED_MODULE_1__.checksum.has(address))
        return _Caches_js__WEBPACK_IMPORTED_MODULE_1__.checksum.get(address);
    assert(address, { strict: false });
    const hexAddress = address.substring(2).toLowerCase();
    const hash = _Hash_js__WEBPACK_IMPORTED_MODULE_3__.keccak256(_Bytes_js__WEBPACK_IMPORTED_MODULE_0__.fromString(hexAddress), { as: 'Bytes' });
    const characters = hexAddress.split('');
    for (let i = 0; i < 40; i += 2) {
        if (hash[i >> 1] >> 4 >= 8 && characters[i]) {
            characters[i] = characters[i].toUpperCase();
        }
        if ((hash[i >> 1] & 0x0f) >= 8 && characters[i + 1]) {
            characters[i + 1] = characters[i + 1].toUpperCase();
        }
    }
    const result = `0x${characters.join('')}`;
    _Caches_js__WEBPACK_IMPORTED_MODULE_1__.checksum.set(address, result);
    return result;
}
/**
 * Converts a stringified address to a typed (checksummed) {@link ox#Address.Address}.
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e')
 * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e', {
 *   checksum: false
 * })
 * // @log: '0xa0cf798816d4b9b9866b5330eea46a18382f251e'
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.from('hello')
 * // @error: InvalidAddressError: Address "0xa" is invalid.
 * ```
 *
 * @param address - An address string to convert to a typed Address.
 * @param options - Conversion options.
 * @returns The typed Address.
 */
function from(address, options = {}) {
    const { checksum: checksumVal = false } = options;
    assert(address);
    if (checksumVal)
        return checksum(address);
    return address;
}
/**
 * Converts an ECDSA public key to an {@link ox#Address.Address}.
 *
 * @example
 * ```ts twoslash
 * import { Address, PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.from(
 *   '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',
 * )
 * const address = Address.fromPublicKey(publicKey)
 * // @log: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266'
 * ```
 *
 * @param publicKey - The ECDSA public key to convert to an {@link ox#Address.Address}.
 * @param options - Conversion options.
 * @returns The {@link ox#Address.Address} corresponding to the public key.
 */
function fromPublicKey(publicKey, options = {}) {
    const address = _Hash_js__WEBPACK_IMPORTED_MODULE_3__.keccak256(`0x${_PublicKey_js__WEBPACK_IMPORTED_MODULE_4__.toHex(publicKey).slice(4)}`).substring(26);
    return from(`0x${address}`, options);
}
/**
 * Checks if two {@link ox#Address.Address} are equal.
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.isEqual(
 *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',
 *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'
 * )
 * // @log: true
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.isEqual(
 *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',
 *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251f'
 * )
 * // @log: false
 * ```
 *
 * @param addressA - The first address to compare.
 * @param addressB - The second address to compare.
 * @returns Whether the addresses are equal.
 */
function isEqual(addressA, addressB) {
    assert(addressA, { strict: false });
    assert(addressB, { strict: false });
    return addressA.toLowerCase() === addressB.toLowerCase();
}
/**
 * Checks if the given address is a valid {@link ox#Address.Address}.
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.validate('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')
 * // @log: true
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.validate('0xdeadbeef')
 * // @log: false
 * ```
 *
 * @param address - Value to check if it is a valid address.
 * @param options - Check options.
 * @returns Whether the address is a valid address.
 */
function validate(address, options = {}) {
    const { strict = true } = options ?? {};
    try {
        assert(address, { strict });
        return true;
    }
    catch {
        return false;
    }
}
/**
 * Thrown when an address is invalid.
 *
 * @example
 * ```ts twoslash
 * import { Address } from 'ox'
 *
 * Address.from('0x123')
 * // @error: Address.InvalidAddressError: Address `0x123` is invalid.
 * ```
 */
class InvalidAddressError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ address, cause }) {
        super(`Address "${address}" is invalid.`, {
            cause,
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Address.InvalidAddressError'
        });
    }
}
/** Thrown when an address is not a 20 byte (40 hexadecimal character) value. */
class InvalidInputError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor() {
        super('Address is not a 20 byte (40 hexadecimal character) value.');
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Address.InvalidInputError'
        });
    }
}
/** Thrown when an address does not match its checksum counterpart. */
class InvalidChecksumError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor() {
        super('Address does not match its checksum counterpart.');
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Address.InvalidChecksumError'
        });
    }
}
//# sourceMappingURL=Address.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/BlockOverrides.js":
/*!*****************************************************!*\
  !*** ./node_modules/ox/_esm/core/BlockOverrides.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fromRpc: () => (/* binding */ fromRpc),
/* harmony export */   toRpc: () => (/* binding */ toRpc)
/* harmony export */ });
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");
/* harmony import */ var _Withdrawal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Withdrawal.js */ "./node_modules/ox/_esm/core/Withdrawal.js");


/**
 * Converts an {@link ox#BlockOverrides.Rpc} to an {@link ox#BlockOverrides.BlockOverrides}.
 *
 * @example
 * ```ts twoslash
 * import { BlockOverrides } from 'ox'
 *
 * const blockOverrides = BlockOverrides.fromRpc({
 *   baseFeePerGas: '0x1',
 *   blobBaseFee: '0x2',
 *   feeRecipient: '0x0000000000000000000000000000000000000000',
 *   gasLimit: '0x4',
 *   number: '0x5',
 *   prevRandao: '0x6',
 *   time: '0x1234567890',
 *   withdrawals: [
 *     {
 *       address: '0x0000000000000000000000000000000000000000',
 *       amount: '0x1',
 *       index: '0x0',
 *       validatorIndex: '0x1',
 *     },
 *   ],
 * })
 * ```
 *
 * @param rpcBlockOverrides - The RPC block overrides to convert.
 * @returns An instantiated {@link ox#BlockOverrides.BlockOverrides}.
 */
function fromRpc(rpcBlockOverrides) {
    return {
        ...(rpcBlockOverrides.baseFeePerGas && {
            baseFeePerGas: BigInt(rpcBlockOverrides.baseFeePerGas),
        }),
        ...(rpcBlockOverrides.blobBaseFee && {
            blobBaseFee: BigInt(rpcBlockOverrides.blobBaseFee),
        }),
        ...(rpcBlockOverrides.feeRecipient && {
            feeRecipient: rpcBlockOverrides.feeRecipient,
        }),
        ...(rpcBlockOverrides.gasLimit && {
            gasLimit: BigInt(rpcBlockOverrides.gasLimit),
        }),
        ...(rpcBlockOverrides.number && {
            number: BigInt(rpcBlockOverrides.number),
        }),
        ...(rpcBlockOverrides.prevRandao && {
            prevRandao: BigInt(rpcBlockOverrides.prevRandao),
        }),
        ...(rpcBlockOverrides.time && {
            time: BigInt(rpcBlockOverrides.time),
        }),
        ...(rpcBlockOverrides.withdrawals && {
            withdrawals: rpcBlockOverrides.withdrawals.map(_Withdrawal_js__WEBPACK_IMPORTED_MODULE_1__.fromRpc),
        }),
    };
}
/**
 * Converts an {@link ox#BlockOverrides.BlockOverrides} to an {@link ox#BlockOverrides.Rpc}.
 *
 * @example
 * ```ts twoslash
 * import { BlockOverrides } from 'ox'
 *
 * const blockOverrides = BlockOverrides.toRpc({
 *   baseFeePerGas: 1n,
 *   blobBaseFee: 2n,
 *   feeRecipient: '0x0000000000000000000000000000000000000000',
 *   gasLimit: 4n,
 *   number: 5n,
 *   prevRandao: 6n,
 *   time: 78187493520n,
 *   withdrawals: [
 *     {
 *       address: '0x0000000000000000000000000000000000000000',
 *       amount: 1n,
 *       index: 0,
 *       validatorIndex: 1,
 *     },
 *   ],
 * })
 * ```
 *
 * @param blockOverrides - The block overrides to convert.
 * @returns An instantiated {@link ox#BlockOverrides.Rpc}.
 */
function toRpc(blockOverrides) {
    return {
        ...(typeof blockOverrides.baseFeePerGas === 'bigint' && {
            baseFeePerGas: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(blockOverrides.baseFeePerGas),
        }),
        ...(typeof blockOverrides.blobBaseFee === 'bigint' && {
            blobBaseFee: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(blockOverrides.blobBaseFee),
        }),
        ...(typeof blockOverrides.feeRecipient === 'string' && {
            feeRecipient: blockOverrides.feeRecipient,
        }),
        ...(typeof blockOverrides.gasLimit === 'bigint' && {
            gasLimit: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(blockOverrides.gasLimit),
        }),
        ...(typeof blockOverrides.number === 'bigint' && {
            number: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(blockOverrides.number),
        }),
        ...(typeof blockOverrides.prevRandao === 'bigint' && {
            prevRandao: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(blockOverrides.prevRandao),
        }),
        ...(typeof blockOverrides.time === 'bigint' && {
            time: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(blockOverrides.time),
        }),
        ...(blockOverrides.withdrawals && {
            withdrawals: blockOverrides.withdrawals.map(_Withdrawal_js__WEBPACK_IMPORTED_MODULE_1__.toRpc),
        }),
    };
}
//# sourceMappingURL=BlockOverrides.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Bytes.js":
/*!********************************************!*\
  !*** ./node_modules/ox/_esm/core/Bytes.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidBytesBooleanError: () => (/* binding */ InvalidBytesBooleanError),
/* harmony export */   InvalidBytesTypeError: () => (/* binding */ InvalidBytesTypeError),
/* harmony export */   SizeExceedsPaddingSizeError: () => (/* binding */ SizeExceedsPaddingSizeError),
/* harmony export */   SizeOverflowError: () => (/* binding */ SizeOverflowError),
/* harmony export */   SliceOffsetOutOfBoundsError: () => (/* binding */ SliceOffsetOutOfBoundsError),
/* harmony export */   assert: () => (/* binding */ assert),
/* harmony export */   concat: () => (/* binding */ concat),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   fromArray: () => (/* binding */ fromArray),
/* harmony export */   fromBoolean: () => (/* binding */ fromBoolean),
/* harmony export */   fromHex: () => (/* binding */ fromHex),
/* harmony export */   fromNumber: () => (/* binding */ fromNumber),
/* harmony export */   fromString: () => (/* binding */ fromString),
/* harmony export */   isEqual: () => (/* binding */ isEqual),
/* harmony export */   padLeft: () => (/* binding */ padLeft),
/* harmony export */   padRight: () => (/* binding */ padRight),
/* harmony export */   random: () => (/* binding */ random),
/* harmony export */   size: () => (/* binding */ size),
/* harmony export */   slice: () => (/* binding */ slice),
/* harmony export */   toBigInt: () => (/* binding */ toBigInt),
/* harmony export */   toBoolean: () => (/* binding */ toBoolean),
/* harmony export */   toHex: () => (/* binding */ toHex),
/* harmony export */   toNumber: () => (/* binding */ toNumber),
/* harmony export */   toString: () => (/* binding */ toString),
/* harmony export */   trimLeft: () => (/* binding */ trimLeft),
/* harmony export */   trimRight: () => (/* binding */ trimRight),
/* harmony export */   validate: () => (/* binding */ validate)
/* harmony export */ });
/* harmony import */ var _noble_curves_abstract_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/abstract/utils */ "./node_modules/@noble/curves/esm/abstract/utils.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/ox/_esm/core/Errors.js");
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");
/* harmony import */ var _Json_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Json.js */ "./node_modules/ox/_esm/core/Json.js");
/* harmony import */ var _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/bytes.js */ "./node_modules/ox/_esm/core/internal/bytes.js");
/* harmony import */ var _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/hex.js */ "./node_modules/ox/_esm/core/internal/hex.js");






const decoder = /*#__PURE__*/ new TextDecoder();
const encoder = /*#__PURE__*/ new TextEncoder();
/**
 * Asserts if the given value is {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.assert('abc')
 * // @error: Bytes.InvalidBytesTypeError:
 * // @error: Value `"abc"` of type `string` is an invalid Bytes value.
 * // @error: Bytes values must be of type `Uint8Array`.
 * ```
 *
 * @param value - Value to assert.
 */
function assert(value) {
    if (value instanceof Uint8Array)
        return;
    if (!value)
        throw new InvalidBytesTypeError(value);
    if (typeof value !== 'object')
        throw new InvalidBytesTypeError(value);
    if (!('BYTES_PER_ELEMENT' in value))
        throw new InvalidBytesTypeError(value);
    if (value.BYTES_PER_ELEMENT !== 1 || value.constructor.name !== 'Uint8Array')
        throw new InvalidBytesTypeError(value);
}
/**
 * Concatenates two or more {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const bytes = Bytes.concat(
 *   Bytes.from([1]),
 *   Bytes.from([69]),
 *   Bytes.from([420, 69]),
 * )
 * // @log: Uint8Array [ 1, 69, 420, 69 ]
 * ```
 *
 * @param values - Values to concatenate.
 * @returns Concatenated {@link ox#Bytes.Bytes}.
 */
function concat(...values) {
    let length = 0;
    for (const arr of values) {
        length += arr.length;
    }
    const result = new Uint8Array(length);
    for (let i = 0, index = 0; i < values.length; i++) {
        const arr = values[i];
        result.set(arr, index);
        index += arr.length;
    }
    return result;
}
/**
 * Instantiates a {@link ox#Bytes.Bytes} value from a `Uint8Array`, a hex string, or an array of unsigned 8-bit integers.
 *
 * :::tip
 *
 * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:
 *
 * - `Bytes.fromBoolean`
 *
 * - `Bytes.fromString`
 *
 * - `Bytes.fromNumber`
 *
 * :::
 *
 * @example
 * ```ts twoslash
 * // @noErrors
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.from([255, 124, 5, 4])
 * // @log: Uint8Array([255, 124, 5, 4])
 *
 * const data = Bytes.from('0xdeadbeef')
 * // @log: Uint8Array([222, 173, 190, 239])
 * ```
 *
 * @param value - Value to convert.
 * @returns A {@link ox#Bytes.Bytes} instance.
 */
function from(value) {
    if (value instanceof Uint8Array)
        return value;
    if (typeof value === 'string')
        return fromHex(value);
    return fromArray(value);
}
/**
 * Converts an array of unsigned 8-bit integers into {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromArray([255, 124, 5, 4])
 * // @log: Uint8Array([255, 124, 5, 4])
 * ```
 *
 * @param value - Value to convert.
 * @returns A {@link ox#Bytes.Bytes} instance.
 */
function fromArray(value) {
    return value instanceof Uint8Array ? value : new Uint8Array(value);
}
/**
 * Encodes a boolean value into {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromBoolean(true)
 * // @log: Uint8Array([1])
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromBoolean(true, { size: 32 })
 * // @log: Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
 * ```
 *
 * @param value - Boolean value to encode.
 * @param options - Encoding options.
 * @returns Encoded {@link ox#Bytes.Bytes}.
 */
function fromBoolean(value, options = {}) {
    const { size } = options;
    const bytes = new Uint8Array(1);
    bytes[0] = Number(value);
    if (typeof size === 'number') {
        _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertSize(bytes, size);
        return padLeft(bytes, size);
    }
    return bytes;
}
/**
 * Encodes a {@link ox#Hex.Hex} value into {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421')
 * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421', { size: 32 })
 * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
 * ```
 *
 * @param value - {@link ox#Hex.Hex} value to encode.
 * @param options - Encoding options.
 * @returns Encoded {@link ox#Bytes.Bytes}.
 */
function fromHex(value, options = {}) {
    const { size } = options;
    let hex = value;
    if (size) {
        _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.assertSize(value, size);
        hex = _Hex_js__WEBPACK_IMPORTED_MODULE_2__.padRight(value, size);
    }
    let hexString = hex.slice(2);
    if (hexString.length % 2)
        hexString = `0${hexString}`;
    const length = hexString.length / 2;
    const bytes = new Uint8Array(length);
    for (let index = 0, j = 0; index < length; index++) {
        const nibbleLeft = _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.charCodeToBase16(hexString.charCodeAt(j++));
        const nibbleRight = _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.charCodeToBase16(hexString.charCodeAt(j++));
        if (nibbleLeft === undefined || nibbleRight === undefined) {
            throw new _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError(`Invalid byte sequence ("${hexString[j - 2]}${hexString[j - 1]}" in "${hexString}").`);
        }
        bytes[index] = nibbleLeft * 16 + nibbleRight;
    }
    return bytes;
}
/**
 * Encodes a number value into {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromNumber(420)
 * // @log: Uint8Array([1, 164])
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromNumber(420, { size: 4 })
 * // @log: Uint8Array([0, 0, 1, 164])
 * ```
 *
 * @param value - Number value to encode.
 * @param options - Encoding options.
 * @returns Encoded {@link ox#Bytes.Bytes}.
 */
function fromNumber(value, options) {
    const hex = _Hex_js__WEBPACK_IMPORTED_MODULE_2__.fromNumber(value, options);
    return fromHex(hex);
}
/**
 * Encodes a string into {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromString('Hello world!')
 * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])
 * ```
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.fromString('Hello world!', { size: 32 })
 * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
 * ```
 *
 * @param value - String to encode.
 * @param options - Encoding options.
 * @returns Encoded {@link ox#Bytes.Bytes}.
 */
function fromString(value, options = {}) {
    const { size } = options;
    const bytes = encoder.encode(value);
    if (typeof size === 'number') {
        _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertSize(bytes, size);
        return padRight(bytes, size);
    }
    return bytes;
}
/**
 * Checks if two {@link ox#Bytes.Bytes} values are equal.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.isEqual(Bytes.from([1]), Bytes.from([1]))
 * // @log: true
 *
 * Bytes.isEqual(Bytes.from([1]), Bytes.from([2]))
 * // @log: false
 * ```
 *
 * @param bytesA - First {@link ox#Bytes.Bytes} value.
 * @param bytesB - Second {@link ox#Bytes.Bytes} value.
 * @returns `true` if the two values are equal, otherwise `false`.
 */
function isEqual(bytesA, bytesB) {
    return (0,_noble_curves_abstract_utils__WEBPACK_IMPORTED_MODULE_0__.equalBytes)(bytesA, bytesB);
}
/**
 * Pads a {@link ox#Bytes.Bytes} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.padLeft(Bytes.from([1]), 4)
 * // @log: Uint8Array([0, 0, 0, 1])
 * ```
 *
 * @param value - {@link ox#Bytes.Bytes} value to pad.
 * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.
 * @returns Padded {@link ox#Bytes.Bytes} value.
 */
function padLeft(value, size) {
    return _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.pad(value, { dir: 'left', size });
}
/**
 * Pads a {@link ox#Bytes.Bytes} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.padRight(Bytes.from([1]), 4)
 * // @log: Uint8Array([1, 0, 0, 0])
 * ```
 *
 * @param value - {@link ox#Bytes.Bytes} value to pad.
 * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.
 * @returns Padded {@link ox#Bytes.Bytes} value.
 */
function padRight(value, size) {
    return _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.pad(value, { dir: 'right', size });
}
/**
 * Generates random {@link ox#Bytes.Bytes} of the specified length.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const bytes = Bytes.random(32)
 * // @log: Uint8Array([... x32])
 * ```
 *
 * @param length - Length of the random {@link ox#Bytes.Bytes} to generate.
 * @returns Random {@link ox#Bytes.Bytes} of the specified length.
 */
function random(length) {
    return crypto.getRandomValues(new Uint8Array(length));
}
/**
 * Retrieves the size of a {@link ox#Bytes.Bytes} value.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.size(Bytes.from([1, 2, 3, 4]))
 * // @log: 4
 * ```
 *
 * @param value - {@link ox#Bytes.Bytes} value.
 * @returns Size of the {@link ox#Bytes.Bytes} value.
 */
function size(value) {
    return value.length;
}
/**
 * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.slice(
 *   Bytes.from([1, 2, 3, 4, 5, 6, 7, 8, 9]),
 *   1,
 *   4,
 * )
 * // @log: Uint8Array([2, 3, 4])
 * ```
 *
 * @param value - The {@link ox#Bytes.Bytes} value.
 * @param start - Start offset.
 * @param end - End offset.
 * @param options - Slice options.
 * @returns Sliced {@link ox#Bytes.Bytes} value.
 */
function slice(value, start, end, options = {}) {
    const { strict } = options;
    _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertStartOffset(value, start);
    const value_ = value.slice(start, end);
    if (strict)
        _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertEndOffset(value_, start, end);
    return value_;
}
/**
 * Decodes a {@link ox#Bytes.Bytes} into a bigint.
 *
 * @example
 * ```ts
 * import { Bytes } from 'ox'
 *
 * Bytes.toBigInt(Bytes.from([1, 164]))
 * // @log: 420n
 * ```
 *
 * @param bytes - The {@link ox#Bytes.Bytes} to decode.
 * @param options - Decoding options.
 * @returns Decoded bigint.
 */
function toBigInt(bytes, options = {}) {
    const { size } = options;
    if (typeof size !== 'undefined')
        _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertSize(bytes, size);
    const hex = _Hex_js__WEBPACK_IMPORTED_MODULE_2__.fromBytes(bytes, options);
    return _Hex_js__WEBPACK_IMPORTED_MODULE_2__.toBigInt(hex, options);
}
/**
 * Decodes a {@link ox#Bytes.Bytes} into a boolean.
 *
 * @example
 * ```ts
 * import { Bytes } from 'ox'
 *
 * Bytes.toBoolean(Bytes.from([1]))
 * // @log: true
 * ```
 *
 * @param bytes - The {@link ox#Bytes.Bytes} to decode.
 * @param options - Decoding options.
 * @returns Decoded boolean.
 */
function toBoolean(bytes, options = {}) {
    const { size } = options;
    let bytes_ = bytes;
    if (typeof size !== 'undefined') {
        _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertSize(bytes_, size);
        bytes_ = trimLeft(bytes_);
    }
    if (bytes_.length > 1 || bytes_[0] > 1)
        throw new InvalidBytesBooleanError(bytes_);
    return Boolean(bytes_[0]);
}
/**
 * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.toHex(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))
 * // '0x48656c6c6f20576f726c6421'
 * ```
 *
 * @param value - The {@link ox#Bytes.Bytes} to decode.
 * @param options - Options.
 * @returns Decoded {@link ox#Hex.Hex} value.
 */
function toHex(value, options = {}) {
    return _Hex_js__WEBPACK_IMPORTED_MODULE_2__.fromBytes(value, options);
}
/**
 * Decodes a {@link ox#Bytes.Bytes} into a number.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.toNumber(Bytes.from([1, 164]))
 * // @log: 420
 * ```
 */
function toNumber(bytes, options = {}) {
    const { size } = options;
    if (typeof size !== 'undefined')
        _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertSize(bytes, size);
    const hex = _Hex_js__WEBPACK_IMPORTED_MODULE_2__.fromBytes(bytes, options);
    return _Hex_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(hex, options);
}
/**
 * Decodes a {@link ox#Bytes.Bytes} into a string.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * const data = Bytes.toString(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))
 * // @log: 'Hello world'
 * ```
 *
 * @param bytes - The {@link ox#Bytes.Bytes} to decode.
 * @param options - Options.
 * @returns Decoded string.
 */
function toString(bytes, options = {}) {
    const { size } = options;
    let bytes_ = bytes;
    if (typeof size !== 'undefined') {
        _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertSize(bytes_, size);
        bytes_ = trimRight(bytes_);
    }
    return decoder.decode(bytes_);
}
/**
 * Trims leading zeros from a {@link ox#Bytes.Bytes} value.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.trimLeft(Bytes.from([0, 0, 0, 0, 1, 2, 3]))
 * // @log: Uint8Array([1, 2, 3])
 * ```
 *
 * @param value - {@link ox#Bytes.Bytes} value.
 * @returns Trimmed {@link ox#Bytes.Bytes} value.
 */
function trimLeft(value) {
    return _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.trim(value, { dir: 'left' });
}
/**
 * Trims trailing zeros from a {@link ox#Bytes.Bytes} value.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.trimRight(Bytes.from([1, 2, 3, 0, 0, 0, 0]))
 * // @log: Uint8Array([1, 2, 3])
 * ```
 *
 * @param value - {@link ox#Bytes.Bytes} value.
 * @returns Trimmed {@link ox#Bytes.Bytes} value.
 */
function trimRight(value) {
    return _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.trim(value, { dir: 'right' });
}
/**
 * Checks if the given value is {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.validate('0x')
 * // @log: false
 *
 * Bytes.validate(Bytes.from([1, 2, 3]))
 * // @log: true
 * ```
 *
 * @param value - Value to check.
 * @returns `true` if the value is {@link ox#Bytes.Bytes}, otherwise `false`.
 */
function validate(value) {
    try {
        assert(value);
        return true;
    }
    catch {
        return false;
    }
}
/**
 * Thrown when the bytes value cannot be represented as a boolean.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.toBoolean(Bytes.from([5]))
 * // @error: Bytes.InvalidBytesBooleanError: Bytes value `[5]` is not a valid boolean.
 * // @error: The bytes array must contain a single byte of either a `0` or `1` value.
 * ```
 */
class InvalidBytesBooleanError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor(bytes) {
        super(`Bytes value \`${bytes}\` is not a valid boolean.`, {
            metaMessages: [
                'The bytes array must contain a single byte of either a `0` or `1` value.',
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Bytes.InvalidBytesBooleanError'
        });
    }
}
/**
 * Thrown when a value cannot be converted to bytes.
 *
 * @example
 * ```ts twoslash
 * // @noErrors
 * import { Bytes } from 'ox'
 *
 * Bytes.from('foo')
 * // @error: Bytes.InvalidBytesTypeError: Value `foo` of type `string` is an invalid Bytes value.
 * ```
 */
class InvalidBytesTypeError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor(value) {
        super(`Value \`${typeof value === 'object' ? _Json_js__WEBPACK_IMPORTED_MODULE_3__.stringify(value) : value}\` of type \`${typeof value}\` is an invalid Bytes value.`, {
            metaMessages: ['Bytes values must be of type `Bytes`.'],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Bytes.InvalidBytesTypeError'
        });
    }
}
/**
 * Thrown when a size exceeds the maximum allowed size.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.fromString('Hello World!', { size: 8 })
 * // @error: Bytes.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.
 * ```
 */
class SizeOverflowError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ givenSize, maxSize }) {
        super(`Size cannot exceed \`${maxSize}\` bytes. Given size: \`${givenSize}\` bytes.`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Bytes.SizeOverflowError'
        });
    }
}
/**
 * Thrown when a slice offset is out-of-bounds.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.slice(Bytes.from([1, 2, 3]), 4)
 * // @error: Bytes.SliceOffsetOutOfBoundsError: Slice starting at offset `4` is out-of-bounds (size: `3`).
 * ```
 */
class SliceOffsetOutOfBoundsError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ offset, position, size, }) {
        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \`${offset}\` is out-of-bounds (size: \`${size}\`).`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Bytes.SliceOffsetOutOfBoundsError'
        });
    }
}
/**
 * Thrown when a the padding size exceeds the maximum allowed size.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.padLeft(Bytes.fromString('Hello World!'), 8)
 * // @error: [Bytes.SizeExceedsPaddingSizeError: Bytes size (`12`) exceeds padding size (`8`).
 * ```
 */
class SizeExceedsPaddingSizeError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ size, targetSize, type, }) {
        super(`${type.charAt(0).toUpperCase()}${type
            .slice(1)
            .toLowerCase()} size (\`${size}\`) exceeds padding size (\`${targetSize}\`).`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Bytes.SizeExceedsPaddingSizeError'
        });
    }
}
//# sourceMappingURL=Bytes.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Caches.js":
/*!*********************************************!*\
  !*** ./node_modules/ox/_esm/core/Caches.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checksum: () => (/* binding */ checksum),
/* harmony export */   clear: () => (/* binding */ clear)
/* harmony export */ });
/* harmony import */ var _internal_lru_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/lru.js */ "./node_modules/ox/_esm/core/internal/lru.js");

const caches = {
    checksum: /*#__PURE__*/ new _internal_lru_js__WEBPACK_IMPORTED_MODULE_0__.LruMap(8192),
};
const checksum = caches.checksum;
/**
 * Clears all global caches.
 *
 * @example
 * ```ts
 * import { Caches } from 'ox'
 * Caches.clear()
 * ```
 */
function clear() {
    for (const cache of Object.values(caches))
        cache.clear();
}
//# sourceMappingURL=Caches.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Errors.js":
/*!*********************************************!*\
  !*** ./node_modules/ox/_esm/core/Errors.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseError: () => (/* binding */ BaseError)
/* harmony export */ });
/* harmony import */ var _internal_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/errors.js */ "./node_modules/ox/_esm/core/internal/errors.js");

/**
 * Base error class inherited by all errors thrown by ox.
 *
 * @example
 * ```ts
 * import { Errors } from 'ox'
 * throw new Errors.BaseError('An error occurred')
 * ```
 */
class BaseError extends Error {
    constructor(shortMessage, options = {}) {
        const details = (() => {
            if (options.cause instanceof BaseError) {
                if (options.cause.details)
                    return options.cause.details;
                if (options.cause.shortMessage)
                    return options.cause.shortMessage;
            }
            if (options.cause &&
                'details' in options.cause &&
                typeof options.cause.details === 'string')
                return options.cause.details;
            if (options.cause?.message)
                return options.cause.message;
            return options.details;
        })();
        const docsPath = (() => {
            if (options.cause instanceof BaseError)
                return options.cause.docsPath || options.docsPath;
            return options.docsPath;
        })();
        const docsBaseUrl = 'https://oxlib.sh';
        const docs = `${docsBaseUrl}${docsPath ?? ''}`;
        const message = [
            shortMessage || 'An error occurred.',
            ...(options.metaMessages ? ['', ...options.metaMessages] : []),
            ...(details || docsPath
                ? [
                    '',
                    details ? `Details: ${details}` : undefined,
                    docsPath ? `See: ${docs}` : undefined,
                ]
                : []),
        ]
            .filter((x) => typeof x === 'string')
            .join('\n');
        super(message, options.cause ? { cause: options.cause } : undefined);
        Object.defineProperty(this, "details", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "docsPath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shortMessage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "cause", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'BaseError'
        });
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: `ox@${(0,_internal_errors_js__WEBPACK_IMPORTED_MODULE_0__.getVersion)()}`
        });
        this.cause = options.cause;
        this.details = details;
        this.docs = docs;
        this.docsPath = docsPath;
        this.shortMessage = shortMessage;
    }
    walk(fn) {
        return walk(this, fn);
    }
}
/** @internal */
function walk(err, fn) {
    if (fn?.(err))
        return err;
    if (err && typeof err === 'object' && 'cause' in err && err.cause)
        return walk(err.cause, fn);
    return fn ? null : err;
}
//# sourceMappingURL=Errors.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Hash.js":
/*!*******************************************!*\
  !*** ./node_modules/ox/_esm/core/Hash.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   keccak256: () => (/* binding */ keccak256),
/* harmony export */   ripemd160: () => (/* binding */ ripemd160),
/* harmony export */   sha256: () => (/* binding */ sha256),
/* harmony export */   validate: () => (/* binding */ validate)
/* harmony export */ });
/* harmony import */ var _noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/ripemd160 */ "./node_modules/@noble/hashes/esm/ripemd160.js");
/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha3 */ "./node_modules/@noble/hashes/esm/sha3.js");
/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ "./node_modules/@noble/hashes/esm/sha256.js");
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Bytes.js */ "./node_modules/ox/_esm/core/Bytes.js");
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");





/**
 * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.
 *
 * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.
 *
 * @example
 * ```ts twoslash
 * import { Hash } from 'ox'
 *
 * Hash.keccak256('0xdeadbeef')
 * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'
 * ```
 *
 * @example
 * ### Calculate Hash of a String
 *
 * ```ts twoslash
 * import { Hash, Hex } from 'ox'
 *
 * Hash.keccak256(Hex.fromString('hello world'))
 * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'
 * ```
 *
 * @example
 * ### Configure Return Type
 *
 * ```ts twoslash
 * import { Hash } from 'ox'
 *
 * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })
 * // @log: Uint8Array [...]
 * ```
 *
 * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.
 * @param options - Options.
 * @returns Keccak256 hash.
 */
function keccak256(value, options = {}) {
    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;
    const bytes = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_256)(_Bytes_js__WEBPACK_IMPORTED_MODULE_3__.from(value));
    if (as === 'Bytes')
        return bytes;
    return _Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromBytes(bytes);
}
/**
 * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.
 *
 * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.
 *
 * @example
 * ```ts twoslash
 * import { Hash } from 'ox'
 *
 * Hash.ripemd160('0xdeadbeef')
 * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'
 * ```
 *
 * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.
 * @param options - Options.
 * @returns Ripemd160 hash.
 */
function ripemd160(value, options = {}) {
    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;
    const bytes = (0,_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__.ripemd160)(_Bytes_js__WEBPACK_IMPORTED_MODULE_3__.from(value));
    if (as === 'Bytes')
        return bytes;
    return _Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromBytes(bytes);
}
/**
 * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.
 *
 * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.
 *
 * @example
 * ```ts twoslash
 * import { Hash } from 'ox'
 *
 * Hash.sha256('0xdeadbeef')
 * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'
 * ```
 *
 * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.
 * @param options - Options.
 * @returns Sha256 hash.
 */
function sha256(value, options = {}) {
    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;
    const bytes = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(_Bytes_js__WEBPACK_IMPORTED_MODULE_3__.from(value));
    if (as === 'Bytes')
        return bytes;
    return _Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromBytes(bytes);
}
/**
 * Checks if a string is a valid hash value.
 *
 * @example
 * ```ts twoslash
 * import { Hash } from 'ox'
 *
 * Hash.validate('0x')
 * // @log: false
 *
 * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')
 * // @log: true
 * ```
 *
 * @param value - Value to check.
 * @returns Whether the value is a valid hash.
 */
function validate(value) {
    return _Hex_js__WEBPACK_IMPORTED_MODULE_4__.validate(value) && _Hex_js__WEBPACK_IMPORTED_MODULE_4__.size(value) === 32;
}
//# sourceMappingURL=Hash.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Hex.js":
/*!******************************************!*\
  !*** ./node_modules/ox/_esm/core/Hex.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IntegerOutOfRangeError: () => (/* binding */ IntegerOutOfRangeError),
/* harmony export */   InvalidHexBooleanError: () => (/* binding */ InvalidHexBooleanError),
/* harmony export */   InvalidHexTypeError: () => (/* binding */ InvalidHexTypeError),
/* harmony export */   InvalidHexValueError: () => (/* binding */ InvalidHexValueError),
/* harmony export */   InvalidLengthError: () => (/* binding */ InvalidLengthError),
/* harmony export */   SizeExceedsPaddingSizeError: () => (/* binding */ SizeExceedsPaddingSizeError),
/* harmony export */   SizeOverflowError: () => (/* binding */ SizeOverflowError),
/* harmony export */   SliceOffsetOutOfBoundsError: () => (/* binding */ SliceOffsetOutOfBoundsError),
/* harmony export */   assert: () => (/* binding */ assert),
/* harmony export */   concat: () => (/* binding */ concat),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   fromBoolean: () => (/* binding */ fromBoolean),
/* harmony export */   fromBytes: () => (/* binding */ fromBytes),
/* harmony export */   fromNumber: () => (/* binding */ fromNumber),
/* harmony export */   fromString: () => (/* binding */ fromString),
/* harmony export */   isEqual: () => (/* binding */ isEqual),
/* harmony export */   padLeft: () => (/* binding */ padLeft),
/* harmony export */   padRight: () => (/* binding */ padRight),
/* harmony export */   random: () => (/* binding */ random),
/* harmony export */   size: () => (/* binding */ size),
/* harmony export */   slice: () => (/* binding */ slice),
/* harmony export */   toBigInt: () => (/* binding */ toBigInt),
/* harmony export */   toBoolean: () => (/* binding */ toBoolean),
/* harmony export */   toBytes: () => (/* binding */ toBytes),
/* harmony export */   toNumber: () => (/* binding */ toNumber),
/* harmony export */   toString: () => (/* binding */ toString),
/* harmony export */   trimLeft: () => (/* binding */ trimLeft),
/* harmony export */   trimRight: () => (/* binding */ trimRight),
/* harmony export */   validate: () => (/* binding */ validate)
/* harmony export */ });
/* harmony import */ var _noble_curves_abstract_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/abstract/utils */ "./node_modules/@noble/curves/esm/abstract/utils.js");
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bytes.js */ "./node_modules/ox/_esm/core/Bytes.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/ox/_esm/core/Errors.js");
/* harmony import */ var _Json_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Json.js */ "./node_modules/ox/_esm/core/Json.js");
/* harmony import */ var _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/bytes.js */ "./node_modules/ox/_esm/core/internal/bytes.js");
/* harmony import */ var _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/hex.js */ "./node_modules/ox/_esm/core/internal/hex.js");






const encoder = /*#__PURE__*/ new TextEncoder();
const hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));
/**
 * Asserts if the given value is {@link ox#Hex.Hex}.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.assert('abc')
 * // @error: InvalidHexValueTypeError:
 * // @error: Value `"abc"` of type `string` is an invalid hex type.
 * // @error: Hex types must be represented as `"0x\${string}"`.
 * ```
 *
 * @param value - The value to assert.
 * @param options - Options.
 */
function assert(value, options = {}) {
    const { strict = false } = options;
    if (!value)
        throw new InvalidHexTypeError(value);
    if (typeof value !== 'string')
        throw new InvalidHexTypeError(value);
    if (strict) {
        if (!/^0x[0-9a-fA-F]*$/.test(value))
            throw new InvalidHexValueError(value);
    }
    if (!value.startsWith('0x'))
        throw new InvalidHexValueError(value);
}
/**
 * Concatenates two or more {@link ox#Hex.Hex}.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.concat('0x123', '0x456')
 * // @log: '0x123456'
 * ```
 *
 * @param values - The {@link ox#Hex.Hex} values to concatenate.
 * @returns The concatenated {@link ox#Hex.Hex} value.
 */
function concat(...values) {
    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;
}
/**
 * Instantiates a {@link ox#Hex.Hex} value from a hex string or {@link ox#Bytes.Bytes} value.
 *
 * :::tip
 *
 * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:
 *
 * - `Hex.fromBoolean`
 *
 * - `Hex.fromString`
 *
 * - `Hex.fromNumber`
 *
 * :::
 *
 * @example
 * ```ts twoslash
 * import { Bytes, Hex } from 'ox'
 *
 * Hex.from('0x48656c6c6f20576f726c6421')
 * // @log: '0x48656c6c6f20576f726c6421'
 *
 * Hex.from(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))
 * // @log: '0x48656c6c6f20576f726c6421'
 * ```
 *
 * @param value - The {@link ox#Bytes.Bytes} value to encode.
 * @returns The encoded {@link ox#Hex.Hex} value.
 */
function from(value) {
    if (value instanceof Uint8Array)
        return fromBytes(value);
    if (Array.isArray(value))
        return fromBytes(new Uint8Array(value));
    return value;
}
/**
 * Encodes a boolean into a {@link ox#Hex.Hex} value.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.fromBoolean(true)
 * // @log: '0x1'
 *
 * Hex.fromBoolean(false)
 * // @log: '0x0'
 *
 * Hex.fromBoolean(true, { size: 32 })
 * // @log: '0x0000000000000000000000000000000000000000000000000000000000000001'
 * ```
 *
 * @param value - The boolean value to encode.
 * @param options - Options.
 * @returns The encoded {@link ox#Hex.Hex} value.
 */
function fromBoolean(value, options = {}) {
    const hex = `0x${Number(value)}`;
    if (typeof options.size === 'number') {
        _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.assertSize(hex, options.size);
        return padLeft(hex, options.size);
    }
    return hex;
}
/**
 * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.
 *
 * @example
 * ```ts twoslash
 * import { Bytes, Hex } from 'ox'
 *
 * Hex.fromBytes(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))
 * // @log: '0x48656c6c6f20576f726c6421'
 * ```
 *
 * @param value - The {@link ox#Bytes.Bytes} value to encode.
 * @param options - Options.
 * @returns The encoded {@link ox#Hex.Hex} value.
 */
function fromBytes(value, options = {}) {
    let string = '';
    for (let i = 0; i < value.length; i++)
        string += hexes[value[i]];
    const hex = `0x${string}`;
    if (typeof options.size === 'number') {
        _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.assertSize(hex, options.size);
        return padRight(hex, options.size);
    }
    return hex;
}
/**
 * Encodes a number or bigint into a {@link ox#Hex.Hex} value.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.fromNumber(420)
 * // @log: '0x1a4'
 *
 * Hex.fromNumber(420, { size: 32 })
 * // @log: '0x00000000000000000000000000000000000000000000000000000000000001a4'
 * ```
 *
 * @param value - The number or bigint value to encode.
 * @param options - Options.
 * @returns The encoded {@link ox#Hex.Hex} value.
 */
function fromNumber(value, options = {}) {
    const { signed, size } = options;
    const value_ = BigInt(value);
    let maxValue;
    if (size) {
        if (signed)
            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;
        else
            maxValue = 2n ** (BigInt(size) * 8n) - 1n;
    }
    else if (typeof value === 'number') {
        maxValue = BigInt(Number.MAX_SAFE_INTEGER);
    }
    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;
    if ((maxValue && value_ > maxValue) || value_ < minValue) {
        const suffix = typeof value === 'bigint' ? 'n' : '';
        throw new IntegerOutOfRangeError({
            max: maxValue ? `${maxValue}${suffix}` : undefined,
            min: `${minValue}${suffix}`,
            signed,
            size,
            value: `${value}${suffix}`,
        });
    }
    const stringValue = (signed && value_ < 0 ? (1n << BigInt(size * 8)) + BigInt(value_) : value_).toString(16);
    const hex = `0x${stringValue}`;
    if (size)
        return padLeft(hex, size);
    return hex;
}
/**
 * Encodes a string into a {@link ox#Hex.Hex} value.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 * Hex.fromString('Hello World!')
 * // '0x48656c6c6f20576f726c6421'
 *
 * Hex.fromString('Hello World!', { size: 32 })
 * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'
 * ```
 *
 * @param value - The string value to encode.
 * @param options - Options.
 * @returns The encoded {@link ox#Hex.Hex} value.
 */
function fromString(value, options = {}) {
    return fromBytes(encoder.encode(value), options);
}
/**
 * Checks if two {@link ox#Hex.Hex} values are equal.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.isEqual('0xdeadbeef', '0xdeadbeef')
 * // @log: true
 *
 * Hex.isEqual('0xda', '0xba')
 * // @log: false
 * ```
 *
 * @param hexA - The first {@link ox#Hex.Hex} value.
 * @param hexB - The second {@link ox#Hex.Hex} value.
 * @returns `true` if the two {@link ox#Hex.Hex} values are equal, `false` otherwise.
 */
function isEqual(hexA, hexB) {
    return (0,_noble_curves_abstract_utils__WEBPACK_IMPORTED_MODULE_0__.equalBytes)(_Bytes_js__WEBPACK_IMPORTED_MODULE_1__.fromHex(hexA), _Bytes_js__WEBPACK_IMPORTED_MODULE_1__.fromHex(hexB));
}
/**
 * Pads a {@link ox#Hex.Hex} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.padLeft('0x1234', 4)
 * // @log: '0x00001234'
 * ```
 *
 * @param value - The {@link ox#Hex.Hex} value to pad.
 * @param size - The size (in bytes) of the output hex value.
 * @returns The padded {@link ox#Hex.Hex} value.
 */
function padLeft(value, size) {
    return _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.pad(value, { dir: 'left', size });
}
/**
 * Pads a {@link ox#Hex.Hex} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).
 *
 * @example
 * ```ts
 * import { Hex } from 'ox'
 *
 * Hex.padRight('0x1234', 4)
 * // @log: '0x12340000'
 * ```
 *
 * @param value - The {@link ox#Hex.Hex} value to pad.
 * @param size - The size (in bytes) of the output hex value.
 * @returns The padded {@link ox#Hex.Hex} value.
 */
function padRight(value, size) {
    return _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.pad(value, { dir: 'right', size });
}
/**
 * Generates a random {@link ox#Hex.Hex} value of the specified length.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * const hex = Hex.random(32)
 * // @log: '0x...'
 * ```
 *
 * @returns Random {@link ox#Hex.Hex} value.
 */
function random(length) {
    return fromBytes(_Bytes_js__WEBPACK_IMPORTED_MODULE_1__.random(length));
}
/**
 * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.slice('0x0123456789', 1, 4)
 * // @log: '0x234567'
 * ```
 *
 * @param value - The {@link ox#Hex.Hex} value to slice.
 * @param start - The start offset (in bytes).
 * @param end - The end offset (in bytes).
 * @param options - Options.
 * @returns The sliced {@link ox#Hex.Hex} value.
 */
function slice(value, start, end, options = {}) {
    const { strict } = options;
    _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.assertStartOffset(value, start);
    const value_ = `0x${value
        .replace('0x', '')
        .slice((start ?? 0) * 2, (end ?? value.length) * 2)}`;
    if (strict)
        _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.assertEndOffset(value_, start, end);
    return value_;
}
/**
 * Retrieves the size of a {@link ox#Hex.Hex} value (in bytes).
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.size('0xdeadbeef')
 * // @log: 4
 * ```
 *
 * @param value - The {@link ox#Hex.Hex} value to get the size of.
 * @returns The size of the {@link ox#Hex.Hex} value (in bytes).
 */
function size(value) {
    return Math.ceil((value.length - 2) / 2);
}
/**
 * Trims leading zeros from a {@link ox#Hex.Hex} value.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.trimLeft('0x00000000deadbeef')
 * // @log: '0xdeadbeef'
 * ```
 *
 * @param value - The {@link ox#Hex.Hex} value to trim.
 * @returns The trimmed {@link ox#Hex.Hex} value.
 */
function trimLeft(value) {
    return _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.trim(value, { dir: 'left' });
}
/**
 * Trims trailing zeros from a {@link ox#Hex.Hex} value.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.trimRight('0xdeadbeef00000000')
 * // @log: '0xdeadbeef'
 * ```
 *
 * @param value - The {@link ox#Hex.Hex} value to trim.
 * @returns The trimmed {@link ox#Hex.Hex} value.
 */
function trimRight(value) {
    return _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.trim(value, { dir: 'right' });
}
/**
 * Decodes a {@link ox#Hex.Hex} value into a BigInt.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.toBigInt('0x1a4')
 * // @log: 420n
 *
 * Hex.toBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })
 * // @log: 420n
 * ```
 *
 * @param hex - The {@link ox#Hex.Hex} value to decode.
 * @param options - Options.
 * @returns The decoded BigInt.
 */
function toBigInt(hex, options = {}) {
    const { signed } = options;
    if (options.size)
        _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.assertSize(hex, options.size);
    const value = BigInt(hex);
    if (!signed)
        return value;
    const size = (hex.length - 2) / 2;
    const max_unsigned = (1n << (BigInt(size) * 8n)) - 1n;
    const max_signed = max_unsigned >> 1n;
    if (value <= max_signed)
        return value;
    return value - max_unsigned - 1n;
}
/**
 * Decodes a {@link ox#Hex.Hex} value into a boolean.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.toBoolean('0x01')
 * // @log: true
 *
 * Hex.toBoolean('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })
 * // @log: true
 * ```
 *
 * @param hex - The {@link ox#Hex.Hex} value to decode.
 * @param options - Options.
 * @returns The decoded boolean.
 */
function toBoolean(hex, options = {}) {
    if (options.size)
        _internal_hex_js__WEBPACK_IMPORTED_MODULE_5__.assertSize(hex, options.size);
    const hex_ = trimLeft(hex);
    if (hex_ === '0x')
        return false;
    if (hex_ === '0x1')
        return true;
    throw new InvalidHexBooleanError(hex);
}
/**
 * Decodes a {@link ox#Hex.Hex} value into a {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * const data = Hex.toBytes('0x48656c6c6f20776f726c6421')
 * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 * ```
 *
 * @param hex - The {@link ox#Hex.Hex} value to decode.
 * @param options - Options.
 * @returns The decoded {@link ox#Bytes.Bytes}.
 */
function toBytes(hex, options = {}) {
    return _Bytes_js__WEBPACK_IMPORTED_MODULE_1__.fromHex(hex, options);
}
/**
 * Decodes a {@link ox#Hex.Hex} value into a number.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.toNumber('0x1a4')
 * // @log: 420
 *
 * Hex.toNumber('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })
 * // @log: 420
 * ```
 *
 * @param hex - The {@link ox#Hex.Hex} value to decode.
 * @param options - Options.
 * @returns The decoded number.
 */
function toNumber(hex, options = {}) {
    const { signed, size } = options;
    if (!signed && !size)
        return Number(hex);
    return Number(toBigInt(hex, options));
}
/**
 * Decodes a {@link ox#Hex.Hex} value into a string.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.toString('0x48656c6c6f20576f726c6421')
 * // @log: 'Hello world!'
 *
 * Hex.toString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {
 *  size: 32,
 * })
 * // @log: 'Hello world'
 * ```
 *
 * @param hex - The {@link ox#Hex.Hex} value to decode.
 * @param options - Options.
 * @returns The decoded string.
 */
function toString(hex, options = {}) {
    const { size } = options;
    let bytes = _Bytes_js__WEBPACK_IMPORTED_MODULE_1__.fromHex(hex);
    if (size) {
        _internal_bytes_js__WEBPACK_IMPORTED_MODULE_4__.assertSize(bytes, size);
        bytes = _Bytes_js__WEBPACK_IMPORTED_MODULE_1__.trimRight(bytes);
    }
    return new TextDecoder().decode(bytes);
}
/**
 * Checks if the given value is {@link ox#Hex.Hex}.
 *
 * @example
 * ```ts twoslash
 * import { Bytes, Hex } from 'ox'
 *
 * Hex.validate('0xdeadbeef')
 * // @log: true
 *
 * Hex.validate(Bytes.from([1, 2, 3]))
 * // @log: false
 * ```
 *
 * @param value - The value to check.
 * @param options - Options.
 * @returns `true` if the value is a {@link ox#Hex.Hex}, `false` otherwise.
 */
function validate(value, options = {}) {
    const { strict = false } = options;
    try {
        assert(value, { strict });
        return true;
    }
    catch {
        return false;
    }
}
/**
 * Thrown when the provided integer is out of range, and cannot be represented as a hex value.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.fromNumber(420182738912731283712937129)
 * // @error: Hex.IntegerOutOfRangeError: Number \`4.2018273891273126e+26\` is not in safe unsigned integer range (`0` to `9007199254740991`)
 * ```
 */
class IntegerOutOfRangeError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ max, min, signed, size, value, }) {
        super(`Number \`${value}\` is not in safe${size ? ` ${size * 8}-bit` : ''}${signed ? ' signed' : ' unsigned'} integer range ${max ? `(\`${min}\` to \`${max}\`)` : `(above \`${min}\`)`}`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Hex.IntegerOutOfRangeError'
        });
    }
}
/**
 * Thrown when the provided hex value cannot be represented as a boolean.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.toBoolean('0xa')
 * // @error: Hex.InvalidHexBooleanError: Hex value `"0xa"` is not a valid boolean.
 * // @error: The hex value must be `"0x0"` (false) or `"0x1"` (true).
 * ```
 */
class InvalidHexBooleanError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(hex) {
        super(`Hex value \`"${hex}"\` is not a valid boolean.`, {
            metaMessages: [
                'The hex value must be `"0x0"` (false) or `"0x1"` (true).',
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Hex.InvalidHexBooleanError'
        });
    }
}
/**
 * Thrown when the provided value is not a valid hex type.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.assert(1)
 * // @error: Hex.InvalidHexTypeError: Value `1` of type `number` is an invalid hex type.
 * ```
 */
class InvalidHexTypeError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(value) {
        super(`Value \`${typeof value === 'object' ? _Json_js__WEBPACK_IMPORTED_MODULE_3__.stringify(value) : value}\` of type \`${typeof value}\` is an invalid hex type.`, {
            metaMessages: ['Hex types must be represented as `"0x${string}"`.'],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Hex.InvalidHexTypeError'
        });
    }
}
/**
 * Thrown when the provided hex value is invalid.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.assert('0x0123456789abcdefg')
 * // @error: Hex.InvalidHexValueError: Value `0x0123456789abcdefg` is an invalid hex value.
 * // @error: Hex values must start with `"0x"` and contain only hexadecimal characters (0-9, a-f, A-F).
 * ```
 */
class InvalidHexValueError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(value) {
        super(`Value \`${value}\` is an invalid hex value.`, {
            metaMessages: [
                'Hex values must start with `"0x"` and contain only hexadecimal characters (0-9, a-f, A-F).',
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Hex.InvalidHexValueError'
        });
    }
}
/**
 * Thrown when the provided hex value is an odd length.
 *
 * @example
 * ```ts twoslash
 * import { Bytes } from 'ox'
 *
 * Bytes.fromHex('0xabcde')
 * // @error: Hex.InvalidLengthError: Hex value `"0xabcde"` is an odd length (5 nibbles).
 * ```
 */
class InvalidLengthError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(value) {
        super(`Hex value \`"${value}"\` is an odd length (${value.length - 2} nibbles).`, {
            metaMessages: ['It must be an even length.'],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Hex.InvalidLengthError'
        });
    }
}
/**
 * Thrown when the size of the value exceeds the expected max size.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.fromString('Hello World!', { size: 8 })
 * // @error: Hex.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.
 * ```
 */
class SizeOverflowError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ givenSize, maxSize }) {
        super(`Size cannot exceed \`${maxSize}\` bytes. Given size: \`${givenSize}\` bytes.`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Hex.SizeOverflowError'
        });
    }
}
/**
 * Thrown when the slice offset exceeds the bounds of the value.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.slice('0x0123456789', 6)
 * // @error: Hex.SliceOffsetOutOfBoundsError: Slice starting at offset `6` is out-of-bounds (size: `5`).
 * ```
 */
class SliceOffsetOutOfBoundsError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ offset, position, size, }) {
        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \`${offset}\` is out-of-bounds (size: \`${size}\`).`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Hex.SliceOffsetOutOfBoundsError'
        });
    }
}
/**
 * Thrown when the size of the value exceeds the pad size.
 *
 * @example
 * ```ts twoslash
 * import { Hex } from 'ox'
 *
 * Hex.padLeft('0x1a4e12a45a21323123aaa87a897a897a898a6567a578a867a98778a667a85a875a87a6a787a65a675a6a9', 32)
 * // @error: Hex.SizeExceedsPaddingSizeError: Hex size (`43`) exceeds padding size (`32`).
 * ```
 */
class SizeExceedsPaddingSizeError extends _Errors_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ size, targetSize, type, }) {
        super(`${type.charAt(0).toUpperCase()}${type
            .slice(1)
            .toLowerCase()} size (\`${size}\`) exceeds padding size (\`${targetSize}\`).`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Hex.SizeExceedsPaddingSizeError'
        });
    }
}
//# sourceMappingURL=Hex.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Json.js":
/*!*******************************************!*\
  !*** ./node_modules/ox/_esm/core/Json.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parse: () => (/* binding */ parse),
/* harmony export */   stringify: () => (/* binding */ stringify)
/* harmony export */ });
const bigIntSuffix = '#__bigint';
/**
 * Parses a JSON string, with support for `bigint`.
 *
 * @example
 * ```ts twoslash
 * import { Json } from 'ox'
 *
 * const json = Json.parse('{"foo":"bar","baz":"69420694206942069420694206942069420694206942069420#__bigint"}')
 * // @log: {
 * // @log:   foo: 'bar',
 * // @log:   baz: 69420694206942069420694206942069420694206942069420n
 * // @log: }
 * ```
 *
 * @param string - The value to parse.
 * @param reviver - A function that transforms the results.
 * @returns The parsed value.
 */
function parse(string, reviver) {
    return JSON.parse(string, (key, value_) => {
        const value = value_;
        if (typeof value === 'string' && value.endsWith(bigIntSuffix))
            return BigInt(value.slice(0, -bigIntSuffix.length));
        return typeof reviver === 'function' ? reviver(key, value) : value;
    });
}
/**
 * Stringifies a value to its JSON representation, with support for `bigint`.
 *
 * @example
 * ```ts twoslash
 * import { Json } from 'ox'
 *
 * const json = Json.stringify({
 *   foo: 'bar',
 *   baz: 69420694206942069420694206942069420694206942069420n,
 * })
 * // @log: '{"foo":"bar","baz":"69420694206942069420694206942069420694206942069420#__bigint"}'
 * ```
 *
 * @param value - The value to stringify.
 * @param replacer - A function that transforms the results. It is passed the key and value of the property, and must return the value to be used in the JSON string. If this function returns `undefined`, the property is not included in the resulting JSON string.
 * @param space - A string or number that determines the indentation of the JSON string. If it is a number, it indicates the number of spaces to use as indentation; if it is a string (e.g. `'\t'`), it uses the string as the indentation character.
 * @returns The JSON string.
 */
function stringify(value, replacer, space) {
    return JSON.stringify(value, (key, value) => {
        if (typeof replacer === 'function')
            return replacer(key, value);
        if (typeof value === 'bigint')
            return value.toString() + bigIntSuffix;
        return value;
    }, space);
}
//# sourceMappingURL=Json.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/PublicKey.js":
/*!************************************************!*\
  !*** ./node_modules/ox/_esm/core/PublicKey.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidCompressedPrefixError: () => (/* binding */ InvalidCompressedPrefixError),
/* harmony export */   InvalidError: () => (/* binding */ InvalidError),
/* harmony export */   InvalidPrefixError: () => (/* binding */ InvalidPrefixError),
/* harmony export */   InvalidSerializedSizeError: () => (/* binding */ InvalidSerializedSizeError),
/* harmony export */   InvalidUncompressedPrefixError: () => (/* binding */ InvalidUncompressedPrefixError),
/* harmony export */   assert: () => (/* binding */ assert),
/* harmony export */   compress: () => (/* binding */ compress),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   fromBytes: () => (/* binding */ fromBytes),
/* harmony export */   fromHex: () => (/* binding */ fromHex),
/* harmony export */   toBytes: () => (/* binding */ toBytes),
/* harmony export */   toHex: () => (/* binding */ toHex),
/* harmony export */   validate: () => (/* binding */ validate)
/* harmony export */ });
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bytes.js */ "./node_modules/ox/_esm/core/Bytes.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/ox/_esm/core/Errors.js");
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");
/* harmony import */ var _Json_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Json.js */ "./node_modules/ox/_esm/core/Json.js");




/**
 * Asserts that a {@link ox#PublicKey.PublicKey} is valid.
 *
 * @example
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * PublicKey.assert({
 *   prefix: 4,
 *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,
 * })
 * // @error: PublicKey.InvalidError: Value \`{"y":"1"}\` is not a valid public key.
 * // @error: Public key must contain:
 * // @error: - an `x` and `prefix` value (compressed)
 * // @error: - an `x`, `y`, and `prefix` value (uncompressed)
 * ```
 *
 * @param publicKey - The public key object to assert.
 */
function assert(publicKey, options = {}) {
    const { compressed } = options;
    const { prefix, x, y } = publicKey;
    // Uncompressed
    if (compressed === false ||
        (typeof x === 'bigint' && typeof y === 'bigint')) {
        if (prefix !== 4)
            throw new InvalidPrefixError({
                prefix,
                cause: new InvalidUncompressedPrefixError(),
            });
        return;
    }
    // Compressed
    if (compressed === true ||
        (typeof x === 'bigint' && typeof y === 'undefined')) {
        if (prefix !== 3 && prefix !== 2)
            throw new InvalidPrefixError({
                prefix,
                cause: new InvalidCompressedPrefixError(),
            });
        return;
    }
    // Unknown/invalid
    throw new InvalidError({ publicKey });
}
/**
 * Compresses a {@link ox#PublicKey.PublicKey}.
 *
 * @example
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.from({
 *   prefix: 4,
 *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
 * })
 *
 * const compressed = PublicKey.compress(publicKey) // [!code focus]
 * // @log: {
 * // @log:   prefix: 3,
 * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 * // @log: }
 * ```
 *
 * @param publicKey - The public key to compress.
 * @returns The compressed public key.
 */
function compress(publicKey) {
    const { x, y } = publicKey;
    return {
        prefix: y % 2n === 0n ? 2 : 3,
        x,
    };
}
/**
 * Instantiates a typed {@link ox#PublicKey.PublicKey} object from a {@link ox#PublicKey.PublicKey}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.
 *
 * @example
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.from({
 *   prefix: 4,
 *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
 * })
 * // @log: {
 * // @log:   prefix: 4,
 * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
 * // @log: }
 * ```
 *
 * @example
 * ### From Serialized
 *
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.from('0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')
 * // @log: {
 * // @log:   prefix: 4,
 * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
 * // @log: }
 * ```
 *
 * @param value - The public key value to instantiate.
 * @returns The instantiated {@link ox#PublicKey.PublicKey}.
 */
function from(value) {
    const publicKey = (() => {
        if (_Hex_js__WEBPACK_IMPORTED_MODULE_2__.validate(value))
            return fromHex(value);
        if (_Bytes_js__WEBPACK_IMPORTED_MODULE_0__.validate(value))
            return fromBytes(value);
        const { prefix, x, y } = value;
        if (typeof x === 'bigint' && typeof y === 'bigint')
            return { prefix: prefix ?? 0x04, x, y };
        return { prefix, x };
    })();
    assert(publicKey);
    return publicKey;
}
/**
 * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Bytes.Bytes} value.
 *
 * @example
 * ```ts twoslash
 * // @noErrors
 * import { PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.fromBytes(new Uint8Array([128, 3, 131, ...]))
 * // @log: {
 * // @log:   prefix: 4,
 * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
 * // @log: }
 * ```
 *
 * @param publicKey - The serialized public key.
 * @returns The deserialized public key.
 */
function fromBytes(publicKey) {
    return fromHex(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.fromBytes(publicKey));
}
/**
 * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Hex.Hex} value.
 *
 * @example
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.fromHex('0x8318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')
 * // @log: {
 * // @log:   prefix: 4,
 * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
 * // @log: }
 * ```
 *
 * @example
 * ### Deserializing a Compressed Public Key
 *
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.fromHex('0x038318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed75')
 * // @log: {
 * // @log:   prefix: 3,
 * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 * // @log: }
 * ```
 *
 * @param publicKey - The serialized public key.
 * @returns The deserialized public key.
 */
function fromHex(publicKey) {
    if (publicKey.length !== 132 &&
        publicKey.length !== 130 &&
        publicKey.length !== 68)
        throw new InvalidSerializedSizeError({ publicKey });
    if (publicKey.length === 130) {
        const x = BigInt(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.slice(publicKey, 0, 32));
        const y = BigInt(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.slice(publicKey, 32, 64));
        return {
            prefix: 4,
            x,
            y,
        };
    }
    if (publicKey.length === 132) {
        const prefix = Number(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.slice(publicKey, 0, 1));
        const x = BigInt(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.slice(publicKey, 1, 33));
        const y = BigInt(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.slice(publicKey, 33, 65));
        return {
            prefix,
            x,
            y,
        };
    }
    const prefix = Number(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.slice(publicKey, 0, 1));
    const x = BigInt(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.slice(publicKey, 1, 33));
    return {
        prefix,
        x,
    };
}
/**
 * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Bytes.Bytes}.
 *
 * @example
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.from({
 *   prefix: 4,
 *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
 * })
 *
 * const bytes = PublicKey.toBytes(publicKey) // [!code focus]
 * // @log: Uint8Array [128, 3, 131, ...]
 * ```
 *
 * @param publicKey - The public key to serialize.
 * @returns The serialized public key.
 */
function toBytes(publicKey, options = {}) {
    return _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.fromHex(toHex(publicKey, options));
}
/**
 * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Hex.Hex}.
 *
 * @example
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * const publicKey = PublicKey.from({
 *   prefix: 4,
 *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
 *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
 * })
 *
 * const hex = PublicKey.toHex(publicKey) // [!code focus]
 * // @log: '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5'
 * ```
 *
 * @param publicKey - The public key to serialize.
 * @returns The serialized public key.
 */
function toHex(publicKey, options = {}) {
    assert(publicKey);
    const { prefix, x, y } = publicKey;
    const { includePrefix = true } = options;
    const publicKey_ = _Hex_js__WEBPACK_IMPORTED_MODULE_2__.concat(includePrefix ? _Hex_js__WEBPACK_IMPORTED_MODULE_2__.fromNumber(prefix, { size: 1 }) : '0x', _Hex_js__WEBPACK_IMPORTED_MODULE_2__.fromNumber(x, { size: 32 }), 
    // If the public key is not compressed, add the y coordinate.
    typeof y === 'bigint' ? _Hex_js__WEBPACK_IMPORTED_MODULE_2__.fromNumber(y, { size: 32 }) : '0x');
    return publicKey_;
}
/**
 * Validates a {@link ox#PublicKey.PublicKey}. Returns `true` if valid, `false` otherwise.
 *
 * @example
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * const valid = PublicKey.validate({
 *   prefix: 4,
 *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,
 * })
 * // @log: false
 * ```
 *
 * @param publicKey - The public key object to assert.
 */
function validate(publicKey, options = {}) {
    try {
        assert(publicKey, options);
        return true;
    }
    catch (error) {
        return false;
    }
}
/**
 * Thrown when a public key is invalid.
 *
 * @example
 * ```ts twoslash
 * import { PublicKey } from 'ox'
 *
 * PublicKey.assert({ y: 1n })
 * // @error: PublicKey.InvalidError: Value `{"y":1n}` is not a valid public key.
 * // @error: Public key must contain:
 * // @error: - an `x` and `prefix` value (compressed)
 * // @error: - an `x`, `y`, and `prefix` value (uncompressed)
 * ```
 */
class InvalidError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ publicKey }) {
        super(`Value \`${_Json_js__WEBPACK_IMPORTED_MODULE_3__.stringify(publicKey)}\` is not a valid public key.`, {
            metaMessages: [
                'Public key must contain:',
                '- an `x` and `prefix` value (compressed)',
                '- an `x`, `y`, and `prefix` value (uncompressed)',
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'PublicKey.InvalidError'
        });
    }
}
/** Thrown when a public key has an invalid prefix. */
class InvalidPrefixError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ prefix, cause }) {
        super(`Prefix "${prefix}" is invalid.`, {
            cause,
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'PublicKey.InvalidPrefixError'
        });
    }
}
/** Thrown when the public key has an invalid prefix for a compressed public key. */
class InvalidCompressedPrefixError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor() {
        super('Prefix must be 2 or 3 for compressed public keys.');
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'PublicKey.InvalidCompressedPrefixError'
        });
    }
}
/** Thrown when the public key has an invalid prefix for an uncompressed public key. */
class InvalidUncompressedPrefixError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor() {
        super('Prefix must be 4 for uncompressed public keys.');
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'PublicKey.InvalidUncompressedPrefixError'
        });
    }
}
/** Thrown when the public key has an invalid serialized size. */
class InvalidSerializedSizeError extends _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ publicKey }) {
        super(`Value \`${publicKey}\` is an invalid public key size.`, {
            metaMessages: [
                'Expected: 33 bytes (compressed + prefix), 64 bytes (uncompressed) or 65 bytes (uncompressed + prefix).',
                `Received ${_Hex_js__WEBPACK_IMPORTED_MODULE_2__.size(_Hex_js__WEBPACK_IMPORTED_MODULE_2__.from(publicKey))} bytes.`,
            ],
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'PublicKey.InvalidSerializedSizeError'
        });
    }
}
//# sourceMappingURL=PublicKey.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Solidity.js":
/*!***********************************************!*\
  !*** ./node_modules/ox/_esm/core/Solidity.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arrayRegex: () => (/* binding */ arrayRegex),
/* harmony export */   bytesRegex: () => (/* binding */ bytesRegex),
/* harmony export */   integerRegex: () => (/* binding */ integerRegex),
/* harmony export */   maxInt104: () => (/* binding */ maxInt104),
/* harmony export */   maxInt112: () => (/* binding */ maxInt112),
/* harmony export */   maxInt120: () => (/* binding */ maxInt120),
/* harmony export */   maxInt128: () => (/* binding */ maxInt128),
/* harmony export */   maxInt136: () => (/* binding */ maxInt136),
/* harmony export */   maxInt144: () => (/* binding */ maxInt144),
/* harmony export */   maxInt152: () => (/* binding */ maxInt152),
/* harmony export */   maxInt16: () => (/* binding */ maxInt16),
/* harmony export */   maxInt160: () => (/* binding */ maxInt160),
/* harmony export */   maxInt168: () => (/* binding */ maxInt168),
/* harmony export */   maxInt176: () => (/* binding */ maxInt176),
/* harmony export */   maxInt184: () => (/* binding */ maxInt184),
/* harmony export */   maxInt192: () => (/* binding */ maxInt192),
/* harmony export */   maxInt200: () => (/* binding */ maxInt200),
/* harmony export */   maxInt208: () => (/* binding */ maxInt208),
/* harmony export */   maxInt216: () => (/* binding */ maxInt216),
/* harmony export */   maxInt224: () => (/* binding */ maxInt224),
/* harmony export */   maxInt232: () => (/* binding */ maxInt232),
/* harmony export */   maxInt24: () => (/* binding */ maxInt24),
/* harmony export */   maxInt240: () => (/* binding */ maxInt240),
/* harmony export */   maxInt248: () => (/* binding */ maxInt248),
/* harmony export */   maxInt256: () => (/* binding */ maxInt256),
/* harmony export */   maxInt32: () => (/* binding */ maxInt32),
/* harmony export */   maxInt40: () => (/* binding */ maxInt40),
/* harmony export */   maxInt48: () => (/* binding */ maxInt48),
/* harmony export */   maxInt56: () => (/* binding */ maxInt56),
/* harmony export */   maxInt64: () => (/* binding */ maxInt64),
/* harmony export */   maxInt72: () => (/* binding */ maxInt72),
/* harmony export */   maxInt8: () => (/* binding */ maxInt8),
/* harmony export */   maxInt80: () => (/* binding */ maxInt80),
/* harmony export */   maxInt88: () => (/* binding */ maxInt88),
/* harmony export */   maxInt96: () => (/* binding */ maxInt96),
/* harmony export */   maxUint104: () => (/* binding */ maxUint104),
/* harmony export */   maxUint112: () => (/* binding */ maxUint112),
/* harmony export */   maxUint120: () => (/* binding */ maxUint120),
/* harmony export */   maxUint128: () => (/* binding */ maxUint128),
/* harmony export */   maxUint136: () => (/* binding */ maxUint136),
/* harmony export */   maxUint144: () => (/* binding */ maxUint144),
/* harmony export */   maxUint152: () => (/* binding */ maxUint152),
/* harmony export */   maxUint16: () => (/* binding */ maxUint16),
/* harmony export */   maxUint160: () => (/* binding */ maxUint160),
/* harmony export */   maxUint168: () => (/* binding */ maxUint168),
/* harmony export */   maxUint176: () => (/* binding */ maxUint176),
/* harmony export */   maxUint184: () => (/* binding */ maxUint184),
/* harmony export */   maxUint192: () => (/* binding */ maxUint192),
/* harmony export */   maxUint200: () => (/* binding */ maxUint200),
/* harmony export */   maxUint208: () => (/* binding */ maxUint208),
/* harmony export */   maxUint216: () => (/* binding */ maxUint216),
/* harmony export */   maxUint224: () => (/* binding */ maxUint224),
/* harmony export */   maxUint232: () => (/* binding */ maxUint232),
/* harmony export */   maxUint24: () => (/* binding */ maxUint24),
/* harmony export */   maxUint240: () => (/* binding */ maxUint240),
/* harmony export */   maxUint248: () => (/* binding */ maxUint248),
/* harmony export */   maxUint256: () => (/* binding */ maxUint256),
/* harmony export */   maxUint32: () => (/* binding */ maxUint32),
/* harmony export */   maxUint40: () => (/* binding */ maxUint40),
/* harmony export */   maxUint48: () => (/* binding */ maxUint48),
/* harmony export */   maxUint56: () => (/* binding */ maxUint56),
/* harmony export */   maxUint64: () => (/* binding */ maxUint64),
/* harmony export */   maxUint72: () => (/* binding */ maxUint72),
/* harmony export */   maxUint8: () => (/* binding */ maxUint8),
/* harmony export */   maxUint80: () => (/* binding */ maxUint80),
/* harmony export */   maxUint88: () => (/* binding */ maxUint88),
/* harmony export */   maxUint96: () => (/* binding */ maxUint96),
/* harmony export */   minInt104: () => (/* binding */ minInt104),
/* harmony export */   minInt112: () => (/* binding */ minInt112),
/* harmony export */   minInt120: () => (/* binding */ minInt120),
/* harmony export */   minInt128: () => (/* binding */ minInt128),
/* harmony export */   minInt136: () => (/* binding */ minInt136),
/* harmony export */   minInt144: () => (/* binding */ minInt144),
/* harmony export */   minInt152: () => (/* binding */ minInt152),
/* harmony export */   minInt16: () => (/* binding */ minInt16),
/* harmony export */   minInt160: () => (/* binding */ minInt160),
/* harmony export */   minInt168: () => (/* binding */ minInt168),
/* harmony export */   minInt176: () => (/* binding */ minInt176),
/* harmony export */   minInt184: () => (/* binding */ minInt184),
/* harmony export */   minInt192: () => (/* binding */ minInt192),
/* harmony export */   minInt200: () => (/* binding */ minInt200),
/* harmony export */   minInt208: () => (/* binding */ minInt208),
/* harmony export */   minInt216: () => (/* binding */ minInt216),
/* harmony export */   minInt224: () => (/* binding */ minInt224),
/* harmony export */   minInt232: () => (/* binding */ minInt232),
/* harmony export */   minInt24: () => (/* binding */ minInt24),
/* harmony export */   minInt240: () => (/* binding */ minInt240),
/* harmony export */   minInt248: () => (/* binding */ minInt248),
/* harmony export */   minInt256: () => (/* binding */ minInt256),
/* harmony export */   minInt32: () => (/* binding */ minInt32),
/* harmony export */   minInt40: () => (/* binding */ minInt40),
/* harmony export */   minInt48: () => (/* binding */ minInt48),
/* harmony export */   minInt56: () => (/* binding */ minInt56),
/* harmony export */   minInt64: () => (/* binding */ minInt64),
/* harmony export */   minInt72: () => (/* binding */ minInt72),
/* harmony export */   minInt8: () => (/* binding */ minInt8),
/* harmony export */   minInt80: () => (/* binding */ minInt80),
/* harmony export */   minInt88: () => (/* binding */ minInt88),
/* harmony export */   minInt96: () => (/* binding */ minInt96)
/* harmony export */ });
const arrayRegex = /^(.*)\[([0-9]*)\]$/;
// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`
// https://regexr.com/6va55
const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;
// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`
// https://regexr.com/6v8hp
const integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
const maxInt8 = 2n ** (8n - 1n) - 1n;
const maxInt16 = 2n ** (16n - 1n) - 1n;
const maxInt24 = 2n ** (24n - 1n) - 1n;
const maxInt32 = 2n ** (32n - 1n) - 1n;
const maxInt40 = 2n ** (40n - 1n) - 1n;
const maxInt48 = 2n ** (48n - 1n) - 1n;
const maxInt56 = 2n ** (56n - 1n) - 1n;
const maxInt64 = 2n ** (64n - 1n) - 1n;
const maxInt72 = 2n ** (72n - 1n) - 1n;
const maxInt80 = 2n ** (80n - 1n) - 1n;
const maxInt88 = 2n ** (88n - 1n) - 1n;
const maxInt96 = 2n ** (96n - 1n) - 1n;
const maxInt104 = 2n ** (104n - 1n) - 1n;
const maxInt112 = 2n ** (112n - 1n) - 1n;
const maxInt120 = 2n ** (120n - 1n) - 1n;
const maxInt128 = 2n ** (128n - 1n) - 1n;
const maxInt136 = 2n ** (136n - 1n) - 1n;
const maxInt144 = 2n ** (144n - 1n) - 1n;
const maxInt152 = 2n ** (152n - 1n) - 1n;
const maxInt160 = 2n ** (160n - 1n) - 1n;
const maxInt168 = 2n ** (168n - 1n) - 1n;
const maxInt176 = 2n ** (176n - 1n) - 1n;
const maxInt184 = 2n ** (184n - 1n) - 1n;
const maxInt192 = 2n ** (192n - 1n) - 1n;
const maxInt200 = 2n ** (200n - 1n) - 1n;
const maxInt208 = 2n ** (208n - 1n) - 1n;
const maxInt216 = 2n ** (216n - 1n) - 1n;
const maxInt224 = 2n ** (224n - 1n) - 1n;
const maxInt232 = 2n ** (232n - 1n) - 1n;
const maxInt240 = 2n ** (240n - 1n) - 1n;
const maxInt248 = 2n ** (248n - 1n) - 1n;
const maxInt256 = 2n ** (256n - 1n) - 1n;
const minInt8 = -(2n ** (8n - 1n));
const minInt16 = -(2n ** (16n - 1n));
const minInt24 = -(2n ** (24n - 1n));
const minInt32 = -(2n ** (32n - 1n));
const minInt40 = -(2n ** (40n - 1n));
const minInt48 = -(2n ** (48n - 1n));
const minInt56 = -(2n ** (56n - 1n));
const minInt64 = -(2n ** (64n - 1n));
const minInt72 = -(2n ** (72n - 1n));
const minInt80 = -(2n ** (80n - 1n));
const minInt88 = -(2n ** (88n - 1n));
const minInt96 = -(2n ** (96n - 1n));
const minInt104 = -(2n ** (104n - 1n));
const minInt112 = -(2n ** (112n - 1n));
const minInt120 = -(2n ** (120n - 1n));
const minInt128 = -(2n ** (128n - 1n));
const minInt136 = -(2n ** (136n - 1n));
const minInt144 = -(2n ** (144n - 1n));
const minInt152 = -(2n ** (152n - 1n));
const minInt160 = -(2n ** (160n - 1n));
const minInt168 = -(2n ** (168n - 1n));
const minInt176 = -(2n ** (176n - 1n));
const minInt184 = -(2n ** (184n - 1n));
const minInt192 = -(2n ** (192n - 1n));
const minInt200 = -(2n ** (200n - 1n));
const minInt208 = -(2n ** (208n - 1n));
const minInt216 = -(2n ** (216n - 1n));
const minInt224 = -(2n ** (224n - 1n));
const minInt232 = -(2n ** (232n - 1n));
const minInt240 = -(2n ** (240n - 1n));
const minInt248 = -(2n ** (248n - 1n));
const minInt256 = -(2n ** (256n - 1n));
const maxUint8 = 2n ** 8n - 1n;
const maxUint16 = 2n ** 16n - 1n;
const maxUint24 = 2n ** 24n - 1n;
const maxUint32 = 2n ** 32n - 1n;
const maxUint40 = 2n ** 40n - 1n;
const maxUint48 = 2n ** 48n - 1n;
const maxUint56 = 2n ** 56n - 1n;
const maxUint64 = 2n ** 64n - 1n;
const maxUint72 = 2n ** 72n - 1n;
const maxUint80 = 2n ** 80n - 1n;
const maxUint88 = 2n ** 88n - 1n;
const maxUint96 = 2n ** 96n - 1n;
const maxUint104 = 2n ** 104n - 1n;
const maxUint112 = 2n ** 112n - 1n;
const maxUint120 = 2n ** 120n - 1n;
const maxUint128 = 2n ** 128n - 1n;
const maxUint136 = 2n ** 136n - 1n;
const maxUint144 = 2n ** 144n - 1n;
const maxUint152 = 2n ** 152n - 1n;
const maxUint160 = 2n ** 160n - 1n;
const maxUint168 = 2n ** 168n - 1n;
const maxUint176 = 2n ** 176n - 1n;
const maxUint184 = 2n ** 184n - 1n;
const maxUint192 = 2n ** 192n - 1n;
const maxUint200 = 2n ** 200n - 1n;
const maxUint208 = 2n ** 208n - 1n;
const maxUint216 = 2n ** 216n - 1n;
const maxUint224 = 2n ** 224n - 1n;
const maxUint232 = 2n ** 232n - 1n;
const maxUint240 = 2n ** 240n - 1n;
const maxUint248 = 2n ** 248n - 1n;
const maxUint256 = 2n ** 256n - 1n;
//# sourceMappingURL=Solidity.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/Withdrawal.js":
/*!*************************************************!*\
  !*** ./node_modules/ox/_esm/core/Withdrawal.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fromRpc: () => (/* binding */ fromRpc),
/* harmony export */   toRpc: () => (/* binding */ toRpc)
/* harmony export */ });
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Hex.js */ "./node_modules/ox/_esm/core/Hex.js");

/**
 * Converts a {@link ox#Withdrawal.Rpc} to an {@link ox#Withdrawal.Withdrawal}.
 *
 * @example
 * ```ts twoslash
 * import { Withdrawal } from 'ox'
 *
 * const withdrawal = Withdrawal.fromRpc({
 *   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',
 *   amount: '0x620323',
 *   index: '0x0',
 *   validatorIndex: '0x1',
 * })
 * // @log: {
 * // @log:   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',
 * // @log:   amount: 6423331n,
 * // @log:   index: 0,
 * // @log:   validatorIndex: 1
 * // @log: }
 * ```
 *
 * @param withdrawal - The RPC withdrawal to convert.
 * @returns An instantiated {@link ox#Withdrawal.Withdrawal}.
 */
function fromRpc(withdrawal) {
    return {
        ...withdrawal,
        amount: BigInt(withdrawal.amount),
        index: Number(withdrawal.index),
        validatorIndex: Number(withdrawal.validatorIndex),
    };
}
/**
 * Converts a {@link ox#Withdrawal.Withdrawal} to an {@link ox#Withdrawal.Rpc}.
 *
 * @example
 * ```ts twoslash
 * import { Withdrawal } from 'ox'
 *
 * const withdrawal = Withdrawal.toRpc({
 *   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',
 *   amount: 6423331n,
 *   index: 0,
 *   validatorIndex: 1,
 * })
 * // @log: {
 * // @log:   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',
 * // @log:   amount: '0x620323',
 * // @log:   index: '0x0',
 * // @log:   validatorIndex: '0x1',
 * // @log: }
 * ```
 *
 * @param withdrawal - The Withdrawal to convert.
 * @returns An RPC Withdrawal.
 */
function toRpc(withdrawal) {
    return {
        address: withdrawal.address,
        amount: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(withdrawal.amount),
        index: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(withdrawal.index),
        validatorIndex: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(withdrawal.validatorIndex),
    };
}
//# sourceMappingURL=Withdrawal.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/internal/abiItem.js":
/*!*******************************************************!*\
  !*** ./node_modules/ox/_esm/core/internal/abiItem.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAmbiguousTypes: () => (/* binding */ getAmbiguousTypes),
/* harmony export */   isArgOfType: () => (/* binding */ isArgOfType),
/* harmony export */   normalizeSignature: () => (/* binding */ normalizeSignature)
/* harmony export */ });
/* harmony import */ var _Address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Address.js */ "./node_modules/ox/_esm/core/Address.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Errors.js */ "./node_modules/ox/_esm/core/Errors.js");


/** @internal */
function normalizeSignature(signature) {
    let active = true;
    let current = '';
    let level = 0;
    let result = '';
    let valid = false;
    for (let i = 0; i < signature.length; i++) {
        const char = signature[i];
        // If the character is a separator, we want to reactivate.
        if (['(', ')', ','].includes(char))
            active = true;
        // If the character is a "level" token, we want to increment/decrement.
        if (char === '(')
            level++;
        if (char === ')')
            level--;
        // If we aren't active, we don't want to mutate the result.
        if (!active)
            continue;
        // If level === 0, we are at the definition level.
        if (level === 0) {
            if (char === ' ' && ['event', 'function', 'error', ''].includes(result))
                result = '';
            else {
                result += char;
                // If we are at the end of the definition, we must be finished.
                if (char === ')') {
                    valid = true;
                    break;
                }
            }
            continue;
        }
        // Ignore spaces
        if (char === ' ') {
            // If the previous character is a separator, and the current section isn't empty, we want to deactivate.
            if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {
                current = '';
                active = false;
            }
            continue;
        }
        result += char;
        current += char;
    }
    if (!valid)
        throw new _Errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseError('Unable to normalize signature.');
    return result;
}
/** @internal */
function isArgOfType(arg, abiParameter) {
    const argType = typeof arg;
    const abiParameterType = abiParameter.type;
    switch (abiParameterType) {
        case 'address':
            return _Address_js__WEBPACK_IMPORTED_MODULE_0__.validate(arg, { strict: false });
        case 'bool':
            return argType === 'boolean';
        case 'function':
            return argType === 'string';
        case 'string':
            return argType === 'string';
        default: {
            if (abiParameterType === 'tuple' && 'components' in abiParameter)
                return Object.values(abiParameter.components).every((component, index) => {
                    return isArgOfType(Object.values(arg)[index], component);
                });
            // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`
            // https://regexr.com/6v8hp
            if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType))
                return argType === 'number' || argType === 'bigint';
            // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`
            // https://regexr.com/6va55
            if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))
                return argType === 'string' || arg instanceof Uint8Array;
            // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays
            // https://regexr.com/6va6i
            if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(abiParameterType)) {
                return (Array.isArray(arg) &&
                    arg.every((x) => isArgOfType(x, {
                        ...abiParameter,
                        // Pop off `[]` or `[M]` from end of type
                        type: abiParameterType.replace(/(\[[0-9]{0,}\])$/, ''),
                    })));
            }
            return false;
        }
    }
}
/** @internal */
function getAmbiguousTypes(sourceParameters, targetParameters, args) {
    for (const parameterIndex in sourceParameters) {
        const sourceParameter = sourceParameters[parameterIndex];
        const targetParameter = targetParameters[parameterIndex];
        if (sourceParameter.type === 'tuple' &&
            targetParameter.type === 'tuple' &&
            'components' in sourceParameter &&
            'components' in targetParameter)
            return getAmbiguousTypes(sourceParameter.components, targetParameter.components, args[parameterIndex]);
        const types = [sourceParameter.type, targetParameter.type];
        const ambiguous = (() => {
            if (types.includes('address') && types.includes('bytes20'))
                return true;
            if (types.includes('address') && types.includes('string'))
                return _Address_js__WEBPACK_IMPORTED_MODULE_0__.validate(args[parameterIndex], {
                    strict: false,
                });
            if (types.includes('address') && types.includes('bytes'))
                return _Address_js__WEBPACK_IMPORTED_MODULE_0__.validate(args[parameterIndex], {
                    strict: false,
                });
            return false;
        })();
        if (ambiguous)
            return types;
    }
    return;
}
//# sourceMappingURL=abiItem.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/internal/abiParameters.js":
/*!*************************************************************!*\
  !*** ./node_modules/ox/_esm/core/internal/abiParameters.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeAddress: () => (/* binding */ decodeAddress),
/* harmony export */   decodeArray: () => (/* binding */ decodeArray),
/* harmony export */   decodeBool: () => (/* binding */ decodeBool),
/* harmony export */   decodeBytes: () => (/* binding */ decodeBytes),
/* harmony export */   decodeNumber: () => (/* binding */ decodeNumber),
/* harmony export */   decodeParameter: () => (/* binding */ decodeParameter),
/* harmony export */   decodeString: () => (/* binding */ decodeString),
/* harmony export */   decodeTuple: () => (/* binding */ decodeTuple),
/* harmony export */   encode: () => (/* binding */ encode),
/* harmony export */   encodeAddress: () => (/* binding */ encodeAddress),
/* harmony export */   encodeArray: () => (/* binding */ encodeArray),
/* harmony export */   encodeBoolean: () => (/* binding */ encodeBoolean),
/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes),
/* harmony export */   encodeNumber: () => (/* binding */ encodeNumber),
/* harmony export */   encodeString: () => (/* binding */ encodeString),
/* harmony export */   encodeTuple: () => (/* binding */ encodeTuple),
/* harmony export */   getArrayComponents: () => (/* binding */ getArrayComponents),
/* harmony export */   hasDynamicChild: () => (/* binding */ hasDynamicChild),
/* harmony export */   prepareParameter: () => (/* binding */ prepareParameter),
/* harmony export */   prepareParameters: () => (/* binding */ prepareParameters)
/* harmony export */ });
/* harmony import */ var _AbiParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AbiParameters.js */ "./node_modules/ox/_esm/core/AbiParameters.js");
/* harmony import */ var _Address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Address.js */ "./node_modules/ox/_esm/core/Address.js");
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Bytes.js */ "./node_modules/ox/_esm/core/Bytes.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Errors.js */ "./node_modules/ox/_esm/core/Errors.js");
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Hex.js */ "./node_modules/ox/_esm/core/Hex.js");
/* harmony import */ var _Solidity_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Solidity.js */ "./node_modules/ox/_esm/core/Solidity.js");






/** @internal */
function decodeParameter(cursor, param, options) {
    const { checksumAddress, staticPosition } = options;
    const arrayComponents = getArrayComponents(param.type);
    if (arrayComponents) {
        const [length, type] = arrayComponents;
        return decodeArray(cursor, { ...param, type }, { checksumAddress, length, staticPosition });
    }
    if (param.type === 'tuple')
        return decodeTuple(cursor, param, {
            checksumAddress,
            staticPosition,
        });
    if (param.type === 'address')
        return decodeAddress(cursor, { checksum: checksumAddress });
    if (param.type === 'bool')
        return decodeBool(cursor);
    if (param.type.startsWith('bytes'))
        return decodeBytes(cursor, param, { staticPosition });
    if (param.type.startsWith('uint') || param.type.startsWith('int'))
        return decodeNumber(cursor, param);
    if (param.type === 'string')
        return decodeString(cursor, { staticPosition });
    throw new _AbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.InvalidTypeError(param.type);
}
const sizeOfLength = 32;
const sizeOfOffset = 32;
/** @internal */
function decodeAddress(cursor, options = {}) {
    const { checksum = false } = options;
    const value = cursor.readBytes(32);
    const wrap = (address) => checksum ? _Address_js__WEBPACK_IMPORTED_MODULE_1__.checksum(address) : address;
    return [wrap(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromBytes(_Bytes_js__WEBPACK_IMPORTED_MODULE_2__.slice(value, -20))), 32];
}
/** @internal */
function decodeArray(cursor, param, options) {
    const { checksumAddress, length, staticPosition } = options;
    // If the length of the array is not known in advance (dynamic array),
    // this means we will need to wonder off to the pointer and decode.
    if (!length) {
        // Dealing with a dynamic type, so get the offset of the array data.
        const offset = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(cursor.readBytes(sizeOfOffset));
        // Start is the static position of current slot + offset.
        const start = staticPosition + offset;
        const startOfData = start + sizeOfLength;
        // Get the length of the array from the offset.
        cursor.setPosition(start);
        const length = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(cursor.readBytes(sizeOfLength));
        // Check if the array has any dynamic children.
        const dynamicChild = hasDynamicChild(param);
        let consumed = 0;
        const value = [];
        for (let i = 0; i < length; ++i) {
            // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).
            // Otherwise, elements will be the size of their encoding (consumed bytes).
            cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed));
            const [data, consumed_] = decodeParameter(cursor, param, {
                checksumAddress,
                staticPosition: startOfData,
            });
            consumed += consumed_;
            value.push(data);
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [value, 32];
    }
    // If the length of the array is known in advance,
    // and the length of an element deeply nested in the array is not known,
    // we need to decode the offset of the array data.
    if (hasDynamicChild(param)) {
        // Dealing with dynamic types, so get the offset of the array data.
        const offset = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(cursor.readBytes(sizeOfOffset));
        // Start is the static position of current slot + offset.
        const start = staticPosition + offset;
        const value = [];
        for (let i = 0; i < length; ++i) {
            // Move cursor along to the next slot (next offset pointer).
            cursor.setPosition(start + i * 32);
            const [data] = decodeParameter(cursor, param, {
                checksumAddress,
                staticPosition: start,
            });
            value.push(data);
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [value, 32];
    }
    // If the length of the array is known in advance and the array is deeply static,
    // then we can just decode each element in sequence.
    let consumed = 0;
    const value = [];
    for (let i = 0; i < length; ++i) {
        const [data, consumed_] = decodeParameter(cursor, param, {
            checksumAddress,
            staticPosition: staticPosition + consumed,
        });
        consumed += consumed_;
        value.push(data);
    }
    return [value, consumed];
}
/** @internal */
function decodeBool(cursor) {
    return [_Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toBoolean(cursor.readBytes(32), { size: 32 }), 32];
}
/** @internal */
function decodeBytes(cursor, param, { staticPosition }) {
    const [_, size] = param.type.split('bytes');
    if (!size) {
        // Dealing with dynamic types, so get the offset of the bytes data.
        const offset = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(cursor.readBytes(32));
        // Set position of the cursor to start of bytes data.
        cursor.setPosition(staticPosition + offset);
        const length = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(cursor.readBytes(32));
        // If there is no length, we have zero data.
        if (length === 0) {
            // As we have gone wondering, restore to the original position + next slot.
            cursor.setPosition(staticPosition + 32);
            return ['0x', 32];
        }
        const data = cursor.readBytes(length);
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [_Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromBytes(data), 32];
    }
    const value = _Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromBytes(cursor.readBytes(Number.parseInt(size), 32));
    return [value, 32];
}
/** @internal */
function decodeNumber(cursor, param) {
    const signed = param.type.startsWith('int');
    const size = Number.parseInt(param.type.split('int')[1] || '256');
    const value = cursor.readBytes(32);
    return [
        size > 48
            ? _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toBigInt(value, { signed })
            : _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(value, { signed }),
        32,
    ];
}
/** @internal */
function decodeTuple(cursor, param, options) {
    const { checksumAddress, staticPosition } = options;
    // Tuples can have unnamed components (i.e. they are arrays), so we must
    // determine whether the tuple is named or unnamed. In the case of a named
    // tuple, the value will be an object where each property is the name of the
    // component. In the case of an unnamed tuple, the value will be an array.
    const hasUnnamedChild = param.components.length === 0 || param.components.some(({ name }) => !name);
    // Initialize the value to an object or an array, depending on whether the
    // tuple is named or unnamed.
    const value = hasUnnamedChild ? [] : {};
    let consumed = 0;
    // If the tuple has a dynamic child, we must first decode the offset to the
    // tuple data.
    if (hasDynamicChild(param)) {
        // Dealing with dynamic types, so get the offset of the tuple data.
        const offset = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(cursor.readBytes(sizeOfOffset));
        // Start is the static position of referencing slot + offset.
        const start = staticPosition + offset;
        for (let i = 0; i < param.components.length; ++i) {
            const component = param.components[i];
            cursor.setPosition(start + consumed);
            const [data, consumed_] = decodeParameter(cursor, component, {
                checksumAddress,
                staticPosition: start,
            });
            consumed += consumed_;
            value[hasUnnamedChild ? i : component?.name] = data;
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [value, 32];
    }
    // If the tuple has static children, we can just decode each component
    // in sequence.
    for (let i = 0; i < param.components.length; ++i) {
        const component = param.components[i];
        const [data, consumed_] = decodeParameter(cursor, component, {
            checksumAddress,
            staticPosition,
        });
        value[hasUnnamedChild ? i : component?.name] = data;
        consumed += consumed_;
    }
    return [value, consumed];
}
/** @internal */
function decodeString(cursor, { staticPosition }) {
    // Get offset to start of string data.
    const offset = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(cursor.readBytes(32));
    // Start is the static position of current slot + offset.
    const start = staticPosition + offset;
    cursor.setPosition(start);
    const length = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toNumber(cursor.readBytes(32));
    // If there is no length, we have zero data (empty string).
    if (length === 0) {
        cursor.setPosition(staticPosition + 32);
        return ['', 32];
    }
    const data = cursor.readBytes(length, 32);
    const value = _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.toString(_Bytes_js__WEBPACK_IMPORTED_MODULE_2__.trimLeft(data));
    // As we have gone wondering, restore to the original position + next slot.
    cursor.setPosition(staticPosition + 32);
    return [value, 32];
}
/** @internal */
function prepareParameters({ checksumAddress, parameters, values, }) {
    const preparedParameters = [];
    for (let i = 0; i < parameters.length; i++) {
        preparedParameters.push(prepareParameter({
            checksumAddress,
            parameter: parameters[i],
            value: values[i],
        }));
    }
    return preparedParameters;
}
/** @internal */
function prepareParameter({ checksumAddress = false, parameter: parameter_, value, }) {
    const parameter = parameter_;
    const arrayComponents = getArrayComponents(parameter.type);
    if (arrayComponents) {
        const [length, type] = arrayComponents;
        return encodeArray(value, {
            checksumAddress,
            length,
            parameter: {
                ...parameter,
                type,
            },
        });
    }
    if (parameter.type === 'tuple') {
        return encodeTuple(value, {
            checksumAddress,
            parameter: parameter,
        });
    }
    if (parameter.type === 'address') {
        return encodeAddress(value, {
            checksum: checksumAddress,
        });
    }
    if (parameter.type === 'bool') {
        return encodeBoolean(value);
    }
    if (parameter.type.startsWith('uint') || parameter.type.startsWith('int')) {
        const signed = parameter.type.startsWith('int');
        const [, , size = '256'] = _Solidity_js__WEBPACK_IMPORTED_MODULE_5__.integerRegex.exec(parameter.type) ?? [];
        return encodeNumber(value, {
            signed,
            size: Number(size),
        });
    }
    if (parameter.type.startsWith('bytes')) {
        return encodeBytes(value, { type: parameter.type });
    }
    if (parameter.type === 'string') {
        return encodeString(value);
    }
    throw new _AbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.InvalidTypeError(parameter.type);
}
/** @internal */
function encode(preparedParameters) {
    // 1. Compute the size of the static part of the parameters.
    let staticSize = 0;
    for (let i = 0; i < preparedParameters.length; i++) {
        const { dynamic, encoded } = preparedParameters[i];
        if (dynamic)
            staticSize += 32;
        else
            staticSize += _Hex_js__WEBPACK_IMPORTED_MODULE_4__.size(encoded);
    }
    // 2. Split the parameters into static and dynamic parts.
    const staticParameters = [];
    const dynamicParameters = [];
    let dynamicSize = 0;
    for (let i = 0; i < preparedParameters.length; i++) {
        const { dynamic, encoded } = preparedParameters[i];
        if (dynamic) {
            staticParameters.push(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromNumber(staticSize + dynamicSize, { size: 32 }));
            dynamicParameters.push(encoded);
            dynamicSize += _Hex_js__WEBPACK_IMPORTED_MODULE_4__.size(encoded);
        }
        else {
            staticParameters.push(encoded);
        }
    }
    // 3. Concatenate static and dynamic parts.
    return _Hex_js__WEBPACK_IMPORTED_MODULE_4__.concat(...staticParameters, ...dynamicParameters);
}
/** @internal */
function encodeAddress(value, options) {
    const { checksum = false } = options;
    _Address_js__WEBPACK_IMPORTED_MODULE_1__.assert(value, { strict: checksum });
    return {
        dynamic: false,
        encoded: _Hex_js__WEBPACK_IMPORTED_MODULE_4__.padLeft(value.toLowerCase()),
    };
}
/** @internal */
function encodeArray(value, options) {
    const { checksumAddress, length, parameter } = options;
    const dynamic = length === null;
    if (!Array.isArray(value))
        throw new _AbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArrayError(value);
    if (!dynamic && value.length !== length)
        throw new _AbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.ArrayLengthMismatchError({
            expectedLength: length,
            givenLength: value.length,
            type: `${parameter.type}[${length}]`,
        });
    let dynamicChild = false;
    const preparedParameters = [];
    for (let i = 0; i < value.length; i++) {
        const preparedParam = prepareParameter({
            checksumAddress,
            parameter,
            value: value[i],
        });
        if (preparedParam.dynamic)
            dynamicChild = true;
        preparedParameters.push(preparedParam);
    }
    if (dynamic || dynamicChild) {
        const data = encode(preparedParameters);
        if (dynamic) {
            const length = _Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromNumber(preparedParameters.length, { size: 32 });
            return {
                dynamic: true,
                encoded: preparedParameters.length > 0 ? _Hex_js__WEBPACK_IMPORTED_MODULE_4__.concat(length, data) : length,
            };
        }
        if (dynamicChild)
            return { dynamic: true, encoded: data };
    }
    return {
        dynamic: false,
        encoded: _Hex_js__WEBPACK_IMPORTED_MODULE_4__.concat(...preparedParameters.map(({ encoded }) => encoded)),
    };
}
/** @internal */
function encodeBytes(value, { type }) {
    const [, parametersize] = type.split('bytes');
    const bytesSize = _Hex_js__WEBPACK_IMPORTED_MODULE_4__.size(value);
    if (!parametersize) {
        let value_ = value;
        // If the size is not divisible by 32 bytes, pad the end
        // with empty bytes to the ceiling 32 bytes.
        if (bytesSize % 32 !== 0)
            value_ = _Hex_js__WEBPACK_IMPORTED_MODULE_4__.padRight(value_, Math.ceil((value.length - 2) / 2 / 32) * 32);
        return {
            dynamic: true,
            encoded: _Hex_js__WEBPACK_IMPORTED_MODULE_4__.concat(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.padLeft(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromNumber(bytesSize, { size: 32 })), value_),
        };
    }
    if (bytesSize !== Number.parseInt(parametersize))
        throw new _AbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.BytesSizeMismatchError({
            expectedSize: Number.parseInt(parametersize),
            value,
        });
    return { dynamic: false, encoded: _Hex_js__WEBPACK_IMPORTED_MODULE_4__.padRight(value) };
}
/** @internal */
function encodeBoolean(value) {
    if (typeof value !== 'boolean')
        throw new _Errors_js__WEBPACK_IMPORTED_MODULE_3__.BaseError(`Invalid boolean value: "${value}" (type: ${typeof value}). Expected: \`true\` or \`false\`.`);
    return { dynamic: false, encoded: _Hex_js__WEBPACK_IMPORTED_MODULE_4__.padLeft(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromBoolean(value)) };
}
/** @internal */
function encodeNumber(value, { signed, size }) {
    if (typeof size === 'number') {
        const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n;
        const min = signed ? -max - 1n : 0n;
        if (value > max || value < min)
            throw new _Hex_js__WEBPACK_IMPORTED_MODULE_4__.IntegerOutOfRangeError({
                max: max.toString(),
                min: min.toString(),
                signed,
                size: size / 8,
                value: value.toString(),
            });
    }
    return {
        dynamic: false,
        encoded: _Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromNumber(value, {
            size: 32,
            signed,
        }),
    };
}
/** @internal */
function encodeString(value) {
    const hexValue = _Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromString(value);
    const partsLength = Math.ceil(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.size(hexValue) / 32);
    const parts = [];
    for (let i = 0; i < partsLength; i++) {
        parts.push(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.padRight(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.slice(hexValue, i * 32, (i + 1) * 32)));
    }
    return {
        dynamic: true,
        encoded: _Hex_js__WEBPACK_IMPORTED_MODULE_4__.concat(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.padRight(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.fromNumber(_Hex_js__WEBPACK_IMPORTED_MODULE_4__.size(hexValue), { size: 32 })), ...parts),
    };
}
/** @internal */
function encodeTuple(value, options) {
    const { checksumAddress, parameter } = options;
    let dynamic = false;
    const preparedParameters = [];
    for (let i = 0; i < parameter.components.length; i++) {
        const param_ = parameter.components[i];
        const index = Array.isArray(value) ? i : param_.name;
        const preparedParam = prepareParameter({
            checksumAddress,
            parameter: param_,
            value: value[index],
        });
        preparedParameters.push(preparedParam);
        if (preparedParam.dynamic)
            dynamic = true;
    }
    return {
        dynamic,
        encoded: dynamic
            ? encode(preparedParameters)
            : _Hex_js__WEBPACK_IMPORTED_MODULE_4__.concat(...preparedParameters.map(({ encoded }) => encoded)),
    };
}
/** @internal */
function getArrayComponents(type) {
    const matches = type.match(/^(.*)\[(\d+)?\]$/);
    return matches
        ? // Return `null` if the array is dynamic.
            [matches[2] ? Number(matches[2]) : null, matches[1]]
        : undefined;
}
/** @internal */
function hasDynamicChild(param) {
    const { type } = param;
    if (type === 'string')
        return true;
    if (type === 'bytes')
        return true;
    if (type.endsWith('[]'))
        return true;
    if (type === 'tuple')
        return param.components?.some(hasDynamicChild);
    const arrayComponents = getArrayComponents(param.type);
    if (arrayComponents &&
        hasDynamicChild({
            ...param,
            type: arrayComponents[1],
        }))
        return true;
    return false;
}
//# sourceMappingURL=abiParameters.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/internal/bytes.js":
/*!*****************************************************!*\
  !*** ./node_modules/ox/_esm/core/internal/bytes.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertEndOffset: () => (/* binding */ assertEndOffset),
/* harmony export */   assertSize: () => (/* binding */ assertSize),
/* harmony export */   assertStartOffset: () => (/* binding */ assertStartOffset),
/* harmony export */   charCodeMap: () => (/* binding */ charCodeMap),
/* harmony export */   charCodeToBase16: () => (/* binding */ charCodeToBase16),
/* harmony export */   pad: () => (/* binding */ pad),
/* harmony export */   trim: () => (/* binding */ trim)
/* harmony export */ });
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bytes.js */ "./node_modules/ox/_esm/core/Bytes.js");

/** @internal */
function assertSize(bytes, size_) {
    if (_Bytes_js__WEBPACK_IMPORTED_MODULE_0__.size(bytes) > size_)
        throw new _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.SizeOverflowError({
            givenSize: _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.size(bytes),
            maxSize: size_,
        });
}
/** @internal */
function assertStartOffset(value, start) {
    if (typeof start === 'number' && start > 0 && start > _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.size(value) - 1)
        throw new _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.SliceOffsetOutOfBoundsError({
            offset: start,
            position: 'start',
            size: _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.size(value),
        });
}
/** @internal */
function assertEndOffset(value, start, end) {
    if (typeof start === 'number' &&
        typeof end === 'number' &&
        _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.size(value) !== end - start) {
        throw new _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.SliceOffsetOutOfBoundsError({
            offset: end,
            position: 'end',
            size: _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.size(value),
        });
    }
}
/** @internal */
const charCodeMap = {
    zero: 48,
    nine: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102,
};
/** @internal */
function charCodeToBase16(char) {
    if (char >= charCodeMap.zero && char <= charCodeMap.nine)
        return char - charCodeMap.zero;
    if (char >= charCodeMap.A && char <= charCodeMap.F)
        return char - (charCodeMap.A - 10);
    if (char >= charCodeMap.a && char <= charCodeMap.f)
        return char - (charCodeMap.a - 10);
    return undefined;
}
/** @internal */
function pad(bytes, options = {}) {
    const { dir, size = 32 } = options;
    if (size === 0)
        return bytes;
    if (bytes.length > size)
        throw new _Bytes_js__WEBPACK_IMPORTED_MODULE_0__.SizeExceedsPaddingSizeError({
            size: bytes.length,
            targetSize: size,
            type: 'Bytes',
        });
    const paddedBytes = new Uint8Array(size);
    for (let i = 0; i < size; i++) {
        const padEnd = dir === 'right';
        paddedBytes[padEnd ? i : size - i - 1] =
            bytes[padEnd ? i : bytes.length - i - 1];
    }
    return paddedBytes;
}
/** @internal */
function trim(value, options = {}) {
    const { dir = 'left' } = options;
    let data = value;
    let sliceLength = 0;
    for (let i = 0; i < data.length - 1; i++) {
        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')
            sliceLength++;
        else
            break;
    }
    data =
        dir === 'left'
            ? data.slice(sliceLength)
            : data.slice(0, data.length - sliceLength);
    return data;
}
//# sourceMappingURL=bytes.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/internal/cursor.js":
/*!******************************************************!*\
  !*** ./node_modules/ox/_esm/core/internal/cursor.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NegativeOffsetError: () => (/* binding */ NegativeOffsetError),
/* harmony export */   PositionOutOfBoundsError: () => (/* binding */ PositionOutOfBoundsError),
/* harmony export */   RecursiveReadLimitExceededError: () => (/* binding */ RecursiveReadLimitExceededError),
/* harmony export */   create: () => (/* binding */ create)
/* harmony export */ });
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Errors.js */ "./node_modules/ox/_esm/core/Errors.js");

const staticCursor = {
    bytes: new Uint8Array(),
    dataView: new DataView(new ArrayBuffer(0)),
    position: 0,
    positionReadCount: new Map(),
    recursiveReadCount: 0,
    recursiveReadLimit: Number.POSITIVE_INFINITY,
    assertReadLimit() {
        if (this.recursiveReadCount >= this.recursiveReadLimit)
            throw new RecursiveReadLimitExceededError({
                count: this.recursiveReadCount + 1,
                limit: this.recursiveReadLimit,
            });
    },
    assertPosition(position) {
        if (position < 0 || position > this.bytes.length - 1)
            throw new PositionOutOfBoundsError({
                length: this.bytes.length,
                position,
            });
    },
    decrementPosition(offset) {
        if (offset < 0)
            throw new NegativeOffsetError({ offset });
        const position = this.position - offset;
        this.assertPosition(position);
        this.position = position;
    },
    getReadCount(position) {
        return this.positionReadCount.get(position || this.position) || 0;
    },
    incrementPosition(offset) {
        if (offset < 0)
            throw new NegativeOffsetError({ offset });
        const position = this.position + offset;
        this.assertPosition(position);
        this.position = position;
    },
    inspectByte(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position);
        return this.bytes[position];
    },
    inspectBytes(length, position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + length - 1);
        return this.bytes.subarray(position, position + length);
    },
    inspectUint8(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position);
        return this.bytes[position];
    },
    inspectUint16(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 1);
        return this.dataView.getUint16(position);
    },
    inspectUint24(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 2);
        return ((this.dataView.getUint16(position) << 8) +
            this.dataView.getUint8(position + 2));
    },
    inspectUint32(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 3);
        return this.dataView.getUint32(position);
    },
    pushByte(byte) {
        this.assertPosition(this.position);
        this.bytes[this.position] = byte;
        this.position++;
    },
    pushBytes(bytes) {
        this.assertPosition(this.position + bytes.length - 1);
        this.bytes.set(bytes, this.position);
        this.position += bytes.length;
    },
    pushUint8(value) {
        this.assertPosition(this.position);
        this.bytes[this.position] = value;
        this.position++;
    },
    pushUint16(value) {
        this.assertPosition(this.position + 1);
        this.dataView.setUint16(this.position, value);
        this.position += 2;
    },
    pushUint24(value) {
        this.assertPosition(this.position + 2);
        this.dataView.setUint16(this.position, value >> 8);
        this.dataView.setUint8(this.position + 2, value & ~4294967040);
        this.position += 3;
    },
    pushUint32(value) {
        this.assertPosition(this.position + 3);
        this.dataView.setUint32(this.position, value);
        this.position += 4;
    },
    readByte() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectByte();
        this.position++;
        return value;
    },
    readBytes(length, size) {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectBytes(length);
        this.position += size ?? length;
        return value;
    },
    readUint8() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint8();
        this.position += 1;
        return value;
    },
    readUint16() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint16();
        this.position += 2;
        return value;
    },
    readUint24() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint24();
        this.position += 3;
        return value;
    },
    readUint32() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint32();
        this.position += 4;
        return value;
    },
    get remaining() {
        return this.bytes.length - this.position;
    },
    setPosition(position) {
        const oldPosition = this.position;
        this.assertPosition(position);
        this.position = position;
        return () => (this.position = oldPosition);
    },
    _touch() {
        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)
            return;
        const count = this.getReadCount();
        this.positionReadCount.set(this.position, count + 1);
        if (count > 0)
            this.recursiveReadCount++;
    },
};
/** @internal */
function create(bytes, { recursiveReadLimit = 8_192 } = {}) {
    const cursor = Object.create(staticCursor);
    cursor.bytes = bytes;
    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);
    cursor.positionReadCount = new Map();
    cursor.recursiveReadLimit = recursiveReadLimit;
    return cursor;
}
/** @internal */
class NegativeOffsetError extends _Errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ offset }) {
        super(`Offset \`${offset}\` cannot be negative.`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Cursor.NegativeOffsetError'
        });
    }
}
/** @internal */
class PositionOutOfBoundsError extends _Errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ length, position }) {
        super(`Position \`${position}\` is out of bounds (\`0 < position < ${length}\`).`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Cursor.PositionOutOfBoundsError'
        });
    }
}
/** @internal */
class RecursiveReadLimitExceededError extends _Errors_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ count, limit }) {
        super(`Recursive read limit of \`${limit}\` exceeded (recursive read count: \`${count}\`).`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'Cursor.RecursiveReadLimitExceededError'
        });
    }
}
//# sourceMappingURL=cursor.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/internal/errors.js":
/*!******************************************************!*\
  !*** ./node_modules/ox/_esm/core/internal/errors.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getUrl: () => (/* binding */ getUrl),
/* harmony export */   getVersion: () => (/* binding */ getVersion),
/* harmony export */   prettyPrint: () => (/* binding */ prettyPrint)
/* harmony export */ });
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.js */ "./node_modules/ox/_esm/core/version.js");

/** @internal */
function getUrl(url) {
    return url;
}
/** @internal */
function getVersion() {
    return _version_js__WEBPACK_IMPORTED_MODULE_0__.version;
}
/** @internal */
function prettyPrint(args) {
    if (!args)
        return '';
    const entries = Object.entries(args)
        .map(([key, value]) => {
        if (value === undefined || value === false)
            return null;
        return [key, value];
    })
        .filter(Boolean);
    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);
    return entries
        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)
        .join('\n');
}
//# sourceMappingURL=errors.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/internal/hex.js":
/*!***************************************************!*\
  !*** ./node_modules/ox/_esm/core/internal/hex.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertEndOffset: () => (/* binding */ assertEndOffset),
/* harmony export */   assertSize: () => (/* binding */ assertSize),
/* harmony export */   assertStartOffset: () => (/* binding */ assertStartOffset),
/* harmony export */   pad: () => (/* binding */ pad),
/* harmony export */   trim: () => (/* binding */ trim)
/* harmony export */ });
/* harmony import */ var _Hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Hex.js */ "./node_modules/ox/_esm/core/Hex.js");

/** @internal */
function assertSize(hex, size_) {
    if (_Hex_js__WEBPACK_IMPORTED_MODULE_0__.size(hex) > size_)
        throw new _Hex_js__WEBPACK_IMPORTED_MODULE_0__.SizeOverflowError({
            givenSize: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.size(hex),
            maxSize: size_,
        });
}
/** @internal */
function assertStartOffset(value, start) {
    if (typeof start === 'number' && start > 0 && start > _Hex_js__WEBPACK_IMPORTED_MODULE_0__.size(value) - 1)
        throw new _Hex_js__WEBPACK_IMPORTED_MODULE_0__.SliceOffsetOutOfBoundsError({
            offset: start,
            position: 'start',
            size: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.size(value),
        });
}
/** @internal */
function assertEndOffset(value, start, end) {
    if (typeof start === 'number' &&
        typeof end === 'number' &&
        _Hex_js__WEBPACK_IMPORTED_MODULE_0__.size(value) !== end - start) {
        throw new _Hex_js__WEBPACK_IMPORTED_MODULE_0__.SliceOffsetOutOfBoundsError({
            offset: end,
            position: 'end',
            size: _Hex_js__WEBPACK_IMPORTED_MODULE_0__.size(value),
        });
    }
}
/** @internal */
function pad(hex_, options = {}) {
    const { dir, size = 32 } = options;
    if (size === 0)
        return hex_;
    const hex = hex_.replace('0x', '');
    if (hex.length > size * 2)
        throw new _Hex_js__WEBPACK_IMPORTED_MODULE_0__.SizeExceedsPaddingSizeError({
            size: Math.ceil(hex.length / 2),
            targetSize: size,
            type: 'Hex',
        });
    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;
}
/** @internal */
function trim(value, options = {}) {
    const { dir = 'left' } = options;
    let data = value.replace('0x', '');
    let sliceLength = 0;
    for (let i = 0; i < data.length - 1; i++) {
        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')
            sliceLength++;
        else
            break;
    }
    data =
        dir === 'left'
            ? data.slice(sliceLength)
            : data.slice(0, data.length - sliceLength);
    if (data === '0')
        return '0x';
    if (dir === 'right' && data.length % 2 === 1)
        return `0x${data}0`;
    return `0x${data}`;
}
//# sourceMappingURL=hex.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/internal/lru.js":
/*!***************************************************!*\
  !*** ./node_modules/ox/_esm/core/internal/lru.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LruMap: () => (/* binding */ LruMap)
/* harmony export */ });
/**
 * @internal
 *
 * Map with a LRU (Least recently used) policy.
 * @see https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU
 */
class LruMap extends Map {
    constructor(size) {
        super();
        Object.defineProperty(this, "maxSize", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.maxSize = size;
    }
    get(key) {
        const value = super.get(key);
        if (super.has(key) && value !== undefined) {
            this.delete(key);
            super.set(key, value);
        }
        return value;
    }
    set(key, value) {
        super.set(key, value);
        if (this.maxSize && this.size > this.maxSize) {
            const firstKey = this.keys().next().value;
            if (firstKey)
                this.delete(firstKey);
        }
        return this;
    }
}
//# sourceMappingURL=lru.js.map

/***/ }),

/***/ "./node_modules/ox/_esm/core/version.js":
/*!**********************************************!*\
  !*** ./node_modules/ox/_esm/core/version.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   version: () => (/* binding */ version)
/* harmony export */ });
/** @internal */
const version = '0.1.1';
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/accounts/utils/parseAccount.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/accounts/utils/parseAccount.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAccount: () => (/* binding */ parseAccount)
/* harmony export */ });
function parseAccount(account) {
    if (typeof account === 'string')
        return { address: account, type: 'json-rpc' };
    return account;
}
//# sourceMappingURL=parseAccount.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js":
/*!*********************************************************************!*\
  !*** ./node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   publicKeyToAddress: () => (/* binding */ publicKeyToAddress)
/* harmony export */ });
/* harmony import */ var _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");


/**
 * @description Converts an ECDSA public key to an address.
 *
 * @param publicKey The public key to convert.
 *
 * @returns The address.
 */
function publicKeyToAddress(publicKey) {
    const address = (0,_utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(`0x${publicKey.substring(4)}`).substring(26);
    return (0,_utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.checksumAddress)(`0x${address}`);
}
//# sourceMappingURL=publicKeyToAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/ens/getEnsAddress.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/ens/getEnsAddress.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEnsAddress: () => (/* binding */ getEnsAddress)
/* harmony export */ });
/* harmony import */ var _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/abis.js */ "./node_modules/viem/_esm/constants/abis.js");
/* harmony import */ var _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/abi/decodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/chain/getChainContractAddress.js */ "./node_modules/viem/_esm/utils/chain/getChainContractAddress.js");
/* harmony import */ var _utils_data_trim_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/data/trim.js */ "./node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_ens_errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/ens/errors.js */ "./node_modules/viem/_esm/utils/ens/errors.js");
/* harmony import */ var _utils_ens_localBatchGatewayRequest_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/ens/localBatchGatewayRequest.js */ "./node_modules/viem/_esm/utils/ens/localBatchGatewayRequest.js");
/* harmony import */ var _utils_ens_namehash_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/ens/namehash.js */ "./node_modules/viem/_esm/utils/ens/namehash.js");
/* harmony import */ var _utils_ens_packetToBytes_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/ens/packetToBytes.js */ "./node_modules/viem/_esm/utils/ens/packetToBytes.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _public_readContract_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../public/readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");












/**
 * Gets address for ENS name.
 *
 * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens
 *
 * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.
 *
 * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.
 *
 * @param client - Client to use
 * @param parameters - {@link GetEnsAddressParameters}
 * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getEnsAddress, normalize } from 'viem/ens'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const ensAddress = await getEnsAddress(client, {
 *   name: normalize('wevm.eth'),
 * })
 * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'
 */
async function getEnsAddress(client, parameters) {
    const { blockNumber, blockTag, coinType, name, gatewayUrls, strict } = parameters;
    const { chain } = client;
    const universalResolverAddress = (() => {
        if (parameters.universalResolverAddress)
            return parameters.universalResolverAddress;
        if (!chain)
            throw new Error('client chain not configured. universalResolverAddress is required.');
        return (0,_utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_3__.getChainContractAddress)({
            blockNumber,
            chain,
            contract: 'ensUniversalResolver',
        });
    })();
    const tlds = chain?.ensTlds;
    if (tlds && !tlds.some((tld) => name.endsWith(tld)))
        return null;
    try {
        const functionData = (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionData)({
            abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.addressResolverAbi,
            functionName: 'addr',
            ...(coinType != null
                ? { args: [(0,_utils_ens_namehash_js__WEBPACK_IMPORTED_MODULE_8__.namehash)(name), BigInt(coinType)] }
                : { args: [(0,_utils_ens_namehash_js__WEBPACK_IMPORTED_MODULE_8__.namehash)(name)] }),
        });
        const readContractParameters = {
            address: universalResolverAddress,
            abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.universalResolverResolveAbi,
            functionName: 'resolve',
            args: [
                (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.toHex)((0,_utils_ens_packetToBytes_js__WEBPACK_IMPORTED_MODULE_9__.packetToBytes)(name)),
                functionData,
                gatewayUrls ?? [_utils_ens_localBatchGatewayRequest_js__WEBPACK_IMPORTED_MODULE_7__.localBatchGatewayUrl],
            ],
            blockNumber,
            blockTag,
        };
        const readContractAction = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_10__.getAction)(client, _public_readContract_js__WEBPACK_IMPORTED_MODULE_11__.readContract, 'readContract');
        const res = await readContractAction(readContractParameters);
        if (res[0] === '0x')
            return null;
        const address = (0,_utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_1__.decodeFunctionResult)({
            abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.addressResolverAbi,
            args: coinType != null ? [(0,_utils_ens_namehash_js__WEBPACK_IMPORTED_MODULE_8__.namehash)(name), BigInt(coinType)] : undefined,
            functionName: 'addr',
            data: res[0],
        });
        if (address === '0x')
            return null;
        if ((0,_utils_data_trim_js__WEBPACK_IMPORTED_MODULE_4__.trim)(address) === '0x00')
            return null;
        return address;
    }
    catch (err) {
        if (strict)
            throw err;
        if ((0,_utils_ens_errors_js__WEBPACK_IMPORTED_MODULE_6__.isNullUniversalResolverError)(err, 'resolve'))
            return null;
        throw err;
    }
}
//# sourceMappingURL=getEnsAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/ens/getEnsAvatar.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/ens/getEnsAvatar.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEnsAvatar: () => (/* binding */ getEnsAvatar)
/* harmony export */ });
/* harmony import */ var _utils_ens_avatar_parseAvatarRecord_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/ens/avatar/parseAvatarRecord.js */ "./node_modules/viem/_esm/utils/ens/avatar/parseAvatarRecord.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _getEnsText_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getEnsText.js */ "./node_modules/viem/_esm/actions/ens/getEnsText.js");



/**
 * Gets the avatar of an ENS name.
 *
 * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens
 *
 * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.
 *
 * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.
 *
 * @param client - Client to use
 * @param parameters - {@link GetEnsAvatarParameters}
 * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getEnsAvatar, normalize } from 'viem/ens'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const ensAvatar = await getEnsAvatar(client, {
 *   name: normalize('wevm.eth'),
 * })
 * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'
 */
async function getEnsAvatar(client, { blockNumber, blockTag, assetGatewayUrls, name, gatewayUrls, strict, universalResolverAddress, }) {
    const record = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, _getEnsText_js__WEBPACK_IMPORTED_MODULE_2__.getEnsText, 'getEnsText')({
        blockNumber,
        blockTag,
        key: 'avatar',
        name,
        universalResolverAddress,
        gatewayUrls,
        strict,
    });
    if (!record)
        return null;
    try {
        return await (0,_utils_ens_avatar_parseAvatarRecord_js__WEBPACK_IMPORTED_MODULE_0__.parseAvatarRecord)(client, {
            record,
            gatewayUrls: assetGatewayUrls,
        });
    }
    catch {
        return null;
    }
}
//# sourceMappingURL=getEnsAvatar.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/ens/getEnsName.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/ens/getEnsName.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEnsName: () => (/* binding */ getEnsName)
/* harmony export */ });
/* harmony import */ var _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/abis.js */ "./node_modules/viem/_esm/constants/abis.js");
/* harmony import */ var _utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/chain/getChainContractAddress.js */ "./node_modules/viem/_esm/utils/chain/getChainContractAddress.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_ens_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/ens/errors.js */ "./node_modules/viem/_esm/utils/ens/errors.js");
/* harmony import */ var _utils_ens_packetToBytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/ens/packetToBytes.js */ "./node_modules/viem/_esm/utils/ens/packetToBytes.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _public_readContract_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../public/readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");







/**
 * Gets primary name for specified address.
 *
 * - Docs: https://viem.sh/docs/ens/actions/getEnsName
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens
 *
 * Calls `reverse(bytes)` on ENS Universal Resolver Contract to "reverse resolve" the address to the primary ENS name.
 *
 * @param client - Client to use
 * @param parameters - {@link GetEnsNameParameters}
 * @returns Name or `null` if not found. {@link GetEnsNameReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getEnsName } from 'viem/ens'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const ensName = await getEnsName(client, {
 *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',
 * })
 * // 'wevm.eth'
 */
async function getEnsName(client, { address, blockNumber, blockTag, gatewayUrls, strict, universalResolverAddress: universalResolverAddress_, }) {
    let universalResolverAddress = universalResolverAddress_;
    if (!universalResolverAddress) {
        if (!client.chain)
            throw new Error('client chain not configured. universalResolverAddress is required.');
        universalResolverAddress = (0,_utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_1__.getChainContractAddress)({
            blockNumber,
            chain: client.chain,
            contract: 'ensUniversalResolver',
        });
    }
    const reverseNode = `${address.toLowerCase().substring(2)}.addr.reverse`;
    try {
        const readContractParameters = {
            address: universalResolverAddress,
            abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.universalResolverReverseAbi,
            functionName: 'reverse',
            args: [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.toHex)((0,_utils_ens_packetToBytes_js__WEBPACK_IMPORTED_MODULE_4__.packetToBytes)(reverseNode))],
            blockNumber,
            blockTag,
        };
        const readContractAction = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__.getAction)(client, _public_readContract_js__WEBPACK_IMPORTED_MODULE_6__.readContract, 'readContract');
        const [name, resolvedAddress] = gatewayUrls
            ? await readContractAction({
                ...readContractParameters,
                args: [...readContractParameters.args, gatewayUrls],
            })
            : await readContractAction(readContractParameters);
        if (address.toLowerCase() !== resolvedAddress.toLowerCase())
            return null;
        return name;
    }
    catch (err) {
        if (strict)
            throw err;
        if ((0,_utils_ens_errors_js__WEBPACK_IMPORTED_MODULE_3__.isNullUniversalResolverError)(err, 'reverse'))
            return null;
        throw err;
    }
}
//# sourceMappingURL=getEnsName.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/ens/getEnsResolver.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/ens/getEnsResolver.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEnsResolver: () => (/* binding */ getEnsResolver)
/* harmony export */ });
/* harmony import */ var _utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/chain/getChainContractAddress.js */ "./node_modules/viem/_esm/utils/chain/getChainContractAddress.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_ens_packetToBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ens/packetToBytes.js */ "./node_modules/viem/_esm/utils/ens/packetToBytes.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _public_readContract_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../public/readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");





/**
 * Gets resolver for ENS name.
 *
 * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens
 *
 * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.
 *
 * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.
 *
 * @param client - Client to use
 * @param parameters - {@link GetEnsResolverParameters}
 * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getEnsResolver, normalize } from 'viem/ens'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const resolverAddress = await getEnsResolver(client, {
 *   name: normalize('wevm.eth'),
 * })
 * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'
 */
async function getEnsResolver(client, parameters) {
    const { blockNumber, blockTag, name } = parameters;
    const { chain } = client;
    const universalResolverAddress = (() => {
        if (parameters.universalResolverAddress)
            return parameters.universalResolverAddress;
        if (!chain)
            throw new Error('client chain not configured. universalResolverAddress is required.');
        return (0,_utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_0__.getChainContractAddress)({
            blockNumber,
            chain,
            contract: 'ensUniversalResolver',
        });
    })();
    const tlds = chain?.ensTlds;
    if (tlds && !tlds.some((tld) => name.endsWith(tld)))
        throw new Error(`${name} is not a valid ENS TLD (${tlds?.join(', ')}) for chain "${chain.name}" (id: ${chain.id}).`);
    const [resolverAddress] = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.getAction)(client, _public_readContract_js__WEBPACK_IMPORTED_MODULE_4__.readContract, 'readContract')({
        address: universalResolverAddress,
        abi: [
            {
                inputs: [{ type: 'bytes' }],
                name: 'findResolver',
                outputs: [{ type: 'address' }, { type: 'bytes32' }],
                stateMutability: 'view',
                type: 'function',
            },
        ],
        functionName: 'findResolver',
        args: [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.toHex)((0,_utils_ens_packetToBytes_js__WEBPACK_IMPORTED_MODULE_2__.packetToBytes)(name))],
        blockNumber,
        blockTag,
    });
    return resolverAddress;
}
//# sourceMappingURL=getEnsResolver.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/ens/getEnsText.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/ens/getEnsText.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEnsText: () => (/* binding */ getEnsText)
/* harmony export */ });
/* harmony import */ var _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/abis.js */ "./node_modules/viem/_esm/constants/abis.js");
/* harmony import */ var _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/abi/decodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/chain/getChainContractAddress.js */ "./node_modules/viem/_esm/utils/chain/getChainContractAddress.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_ens_errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/ens/errors.js */ "./node_modules/viem/_esm/utils/ens/errors.js");
/* harmony import */ var _utils_ens_localBatchGatewayRequest_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/ens/localBatchGatewayRequest.js */ "./node_modules/viem/_esm/utils/ens/localBatchGatewayRequest.js");
/* harmony import */ var _utils_ens_namehash_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/ens/namehash.js */ "./node_modules/viem/_esm/utils/ens/namehash.js");
/* harmony import */ var _utils_ens_packetToBytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/ens/packetToBytes.js */ "./node_modules/viem/_esm/utils/ens/packetToBytes.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _public_readContract_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../public/readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");











/**
 * Gets a text record for specified ENS name.
 *
 * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens
 *
 * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.
 *
 * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.
 *
 * @param client - Client to use
 * @param parameters - {@link GetEnsTextParameters}
 * @returns Address for ENS resolver. {@link GetEnsTextReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getEnsText, normalize } from 'viem/ens'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const twitterRecord = await getEnsText(client, {
 *   name: normalize('wevm.eth'),
 *   key: 'com.twitter',
 * })
 * // 'wevm_dev'
 */
async function getEnsText(client, parameters) {
    const { blockNumber, blockTag, key, name, gatewayUrls, strict } = parameters;
    const { chain } = client;
    const universalResolverAddress = (() => {
        if (parameters.universalResolverAddress)
            return parameters.universalResolverAddress;
        if (!chain)
            throw new Error('client chain not configured. universalResolverAddress is required.');
        return (0,_utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_3__.getChainContractAddress)({
            blockNumber,
            chain,
            contract: 'ensUniversalResolver',
        });
    })();
    const tlds = chain?.ensTlds;
    if (tlds && !tlds.some((tld) => name.endsWith(tld)))
        return null;
    try {
        const readContractParameters = {
            address: universalResolverAddress,
            abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.universalResolverResolveAbi,
            functionName: 'resolve',
            args: [
                (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)((0,_utils_ens_packetToBytes_js__WEBPACK_IMPORTED_MODULE_8__.packetToBytes)(name)),
                (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionData)({
                    abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.textResolverAbi,
                    functionName: 'text',
                    args: [(0,_utils_ens_namehash_js__WEBPACK_IMPORTED_MODULE_7__.namehash)(name), key],
                }),
                gatewayUrls ?? [_utils_ens_localBatchGatewayRequest_js__WEBPACK_IMPORTED_MODULE_6__.localBatchGatewayUrl],
            ],
            blockNumber,
            blockTag,
        };
        const readContractAction = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_9__.getAction)(client, _public_readContract_js__WEBPACK_IMPORTED_MODULE_10__.readContract, 'readContract');
        const res = await readContractAction(readContractParameters);
        if (res[0] === '0x')
            return null;
        const record = (0,_utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_1__.decodeFunctionResult)({
            abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.textResolverAbi,
            functionName: 'text',
            data: res[0],
        });
        return record === '' ? null : record;
    }
    catch (err) {
        if (strict)
            throw err;
        if ((0,_utils_ens_errors_js__WEBPACK_IMPORTED_MODULE_5__.isNullUniversalResolverError)(err, 'resolve'))
            return null;
        throw err;
    }
}
//# sourceMappingURL=getEnsText.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/getContract.js":
/*!*******************************************************!*\
  !*** ./node_modules/viem/_esm/actions/getContract.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getContract: () => (/* binding */ getContract),
/* harmony export */   getEventParameters: () => (/* binding */ getEventParameters),
/* harmony export */   getFunctionParameters: () => (/* binding */ getFunctionParameters)
/* harmony export */ });
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _public_createContractEventFilter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./public/createContractEventFilter.js */ "./node_modules/viem/_esm/actions/public/createContractEventFilter.js");
/* harmony import */ var _public_estimateContractGas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./public/estimateContractGas.js */ "./node_modules/viem/_esm/actions/public/estimateContractGas.js");
/* harmony import */ var _public_getContractEvents_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./public/getContractEvents.js */ "./node_modules/viem/_esm/actions/public/getContractEvents.js");
/* harmony import */ var _public_readContract_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./public/readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");
/* harmony import */ var _public_simulateContract_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./public/simulateContract.js */ "./node_modules/viem/_esm/actions/public/simulateContract.js");
/* harmony import */ var _public_watchContractEvent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./public/watchContractEvent.js */ "./node_modules/viem/_esm/actions/public/watchContractEvent.js");
/* harmony import */ var _wallet_writeContract_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./wallet/writeContract.js */ "./node_modules/viem/_esm/actions/wallet/writeContract.js");








/**
 * Gets type-safe interface for performing contract-related actions with a specific `abi` and `address`.
 *
 * - Docs https://viem.sh/docs/contract/getContract
 *
 * Using Contract Instances can make it easier to work with contracts if you don't want to pass the `abi` and `address` properties every time you perform contract actions, e.g. [`readContract`](https://viem.sh/docs/contract/readContract), [`writeContract`](https://viem.sh/docs/contract/writeContract), [`estimateContractGas`](https://viem.sh/docs/contract/estimateContractGas), etc.
 *
 * @example
 * import { createPublicClient, getContract, http, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 *
 * const publicClient = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const contract = getContract({
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *   abi: parseAbi([
 *     'function balanceOf(address owner) view returns (uint256)',
 *     'function ownerOf(uint256 tokenId) view returns (address)',
 *     'function totalSupply() view returns (uint256)',
 *   ]),
 *   client: publicClient,
 * })
 */
function getContract({ abi, address, client: client_, }) {
    const client = client_;
    const [publicClient, walletClient] = (() => {
        if (!client)
            return [undefined, undefined];
        if ('public' in client && 'wallet' in client)
            return [client.public, client.wallet];
        if ('public' in client)
            return [client.public, undefined];
        if ('wallet' in client)
            return [undefined, client.wallet];
        return [client, client];
    })();
    const hasPublicClient = publicClient !== undefined && publicClient !== null;
    const hasWalletClient = walletClient !== undefined && walletClient !== null;
    const contract = {};
    let hasReadFunction = false;
    let hasWriteFunction = false;
    let hasEvent = false;
    for (const item of abi) {
        if (item.type === 'function')
            if (item.stateMutability === 'view' || item.stateMutability === 'pure')
                hasReadFunction = true;
            else
                hasWriteFunction = true;
        else if (item.type === 'event')
            hasEvent = true;
        // Exit early if all flags are `true`
        if (hasReadFunction && hasWriteFunction && hasEvent)
            break;
    }
    if (hasPublicClient) {
        if (hasReadFunction)
            contract.read = new Proxy({}, {
                get(_, functionName) {
                    return (...parameters) => {
                        const { args, options } = getFunctionParameters(parameters);
                        return (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(publicClient, _public_readContract_js__WEBPACK_IMPORTED_MODULE_4__.readContract, 'readContract')({
                            abi,
                            address,
                            functionName,
                            args,
                            ...options,
                        });
                    };
                },
            });
        if (hasWriteFunction)
            contract.simulate = new Proxy({}, {
                get(_, functionName) {
                    return (...parameters) => {
                        const { args, options } = getFunctionParameters(parameters);
                        return (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(publicClient, _public_simulateContract_js__WEBPACK_IMPORTED_MODULE_5__.simulateContract, 'simulateContract')({
                            abi,
                            address,
                            functionName,
                            args,
                            ...options,
                        });
                    };
                },
            });
        if (hasEvent) {
            contract.createEventFilter = new Proxy({}, {
                get(_, eventName) {
                    return (...parameters) => {
                        const abiEvent = abi.find((x) => x.type === 'event' && x.name === eventName);
                        const { args, options } = getEventParameters(parameters, abiEvent);
                        return (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(publicClient, _public_createContractEventFilter_js__WEBPACK_IMPORTED_MODULE_1__.createContractEventFilter, 'createContractEventFilter')({
                            abi,
                            address,
                            eventName,
                            args,
                            ...options,
                        });
                    };
                },
            });
            contract.getEvents = new Proxy({}, {
                get(_, eventName) {
                    return (...parameters) => {
                        const abiEvent = abi.find((x) => x.type === 'event' && x.name === eventName);
                        const { args, options } = getEventParameters(parameters, abiEvent);
                        return (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(publicClient, _public_getContractEvents_js__WEBPACK_IMPORTED_MODULE_3__.getContractEvents, 'getContractEvents')({
                            abi,
                            address,
                            eventName,
                            args,
                            ...options,
                        });
                    };
                },
            });
            contract.watchEvent = new Proxy({}, {
                get(_, eventName) {
                    return (...parameters) => {
                        const abiEvent = abi.find((x) => x.type === 'event' && x.name === eventName);
                        const { args, options } = getEventParameters(parameters, abiEvent);
                        return (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(publicClient, _public_watchContractEvent_js__WEBPACK_IMPORTED_MODULE_6__.watchContractEvent, 'watchContractEvent')({
                            abi,
                            address,
                            eventName,
                            args,
                            ...options,
                        });
                    };
                },
            });
        }
    }
    if (hasWalletClient) {
        if (hasWriteFunction)
            contract.write = new Proxy({}, {
                get(_, functionName) {
                    return (...parameters) => {
                        const { args, options } = getFunctionParameters(parameters);
                        return (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(walletClient, _wallet_writeContract_js__WEBPACK_IMPORTED_MODULE_7__.writeContract, 'writeContract')({
                            abi,
                            address,
                            functionName,
                            args,
                            ...options,
                        });
                    };
                },
            });
    }
    if (hasPublicClient || hasWalletClient)
        if (hasWriteFunction)
            contract.estimateGas = new Proxy({}, {
                get(_, functionName) {
                    return (...parameters) => {
                        const { args, options } = getFunctionParameters(parameters);
                        const client = (publicClient ?? walletClient);
                        return (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _public_estimateContractGas_js__WEBPACK_IMPORTED_MODULE_2__.estimateContractGas, 'estimateContractGas')({
                            abi,
                            address,
                            functionName,
                            args,
                            ...options,
                            account: options.account ??
                                walletClient.account,
                        });
                    };
                },
            });
    contract.address = address;
    contract.abi = abi;
    return contract;
}
/**
 * @internal exporting for testing only
 */
function getFunctionParameters(values) {
    const hasArgs = values.length && Array.isArray(values[0]);
    const args = hasArgs ? values[0] : [];
    const options = (hasArgs ? values[1] : values[0]) ?? {};
    return { args, options };
}
/**
 * @internal exporting for testing only
 */
function getEventParameters(values, abiEvent) {
    let hasArgs = false;
    // If first item is array, must be `args`
    if (Array.isArray(values[0]))
        hasArgs = true;
    // Check if first item is `args` or `options`
    else if (values.length === 1) {
        // if event has indexed inputs, must have `args`
        hasArgs = abiEvent.inputs.some((x) => x.indexed);
        // If there are two items in array, must have `args`
    }
    else if (values.length === 2) {
        hasArgs = true;
    }
    const args = hasArgs ? values[0] : undefined;
    const options = (hasArgs ? values[1] : values[0]) ?? {};
    return { args, options };
}
//# sourceMappingURL=getContract.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/call.js":
/*!*******************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/call.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   call: () => (/* binding */ call),
/* harmony export */   getRevertErrorData: () => (/* binding */ getRevertErrorData)
/* harmony export */ });
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/parseAbi.js");
/* harmony import */ var ox_BlockOverrides__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ox/BlockOverrides */ "./node_modules/ox/_esm/core/BlockOverrides.js");
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _constants_abis_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants/abis.js */ "./node_modules/viem/_esm/constants/abis.js");
/* harmony import */ var _constants_contract_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants/contract.js */ "./node_modules/viem/_esm/constants/contract.js");
/* harmony import */ var _constants_contracts_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/contracts.js */ "./node_modules/viem/_esm/constants/contracts.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_chain_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../errors/chain.js */ "./node_modules/viem/_esm/errors/chain.js");
/* harmony import */ var _errors_contract_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../errors/contract.js */ "./node_modules/viem/_esm/errors/contract.js");
/* harmony import */ var _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/abi/decodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js");
/* harmony import */ var _utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/abi/encodeDeployData.js */ "./node_modules/viem/_esm/utils/abi/encodeDeployData.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/chain/getChainContractAddress.js */ "./node_modules/viem/_esm/utils/chain/getChainContractAddress.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_errors_getCallError_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/errors/getCallError.js */ "./node_modules/viem/_esm/utils/errors/getCallError.js");
/* harmony import */ var _utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utils/formatters/extract.js */ "./node_modules/viem/_esm/utils/formatters/extract.js");
/* harmony import */ var _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../utils/formatters/transactionRequest.js */ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js");
/* harmony import */ var _utils_promise_createBatchScheduler_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../utils/promise/createBatchScheduler.js */ "./node_modules/viem/_esm/utils/promise/createBatchScheduler.js");
/* harmony import */ var _utils_stateOverride_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../utils/stateOverride.js */ "./node_modules/viem/_esm/utils/stateOverride.js");
/* harmony import */ var _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../utils/transaction/assertRequest.js */ "./node_modules/viem/_esm/utils/transaction/assertRequest.js");




















/**
 * Executes a new message call immediately without submitting a transaction to the network.
 *
 * - Docs: https://viem.sh/docs/actions/public/call
 * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)
 *
 * @param client - Client to use
 * @param parameters - {@link CallParameters}
 * @returns The call data. {@link CallReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { call } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const data = await call(client, {
 *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',
 *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
 *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 * })
 */
async function call(client, args) {
    const { account: account_ = client.account, authorizationList, batch = Boolean(client.batch?.multicall), blockNumber, blockTag = client.experimental_blockTag ?? 'latest', accessList, blobs, blockOverrides, code, data: data_, factory, factoryData, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, ...rest } = args;
    const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_2__.parseAccount)(account_) : undefined;
    if (code && (factory || factoryData))
        throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_6__.BaseError('Cannot provide both `code` & `factory`/`factoryData` as parameters.');
    if (code && to)
        throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_6__.BaseError('Cannot provide both `code` & `to` as parameters.');
    // Check if the call is deployless via bytecode.
    const deploylessCallViaBytecode = code && data_;
    // Check if the call is deployless via a factory.
    const deploylessCallViaFactory = factory && factoryData && to && data_;
    const deploylessCall = deploylessCallViaBytecode || deploylessCallViaFactory;
    const data = (() => {
        if (deploylessCallViaBytecode)
            return toDeploylessCallViaBytecodeData({
                code,
                data: data_,
            });
        if (deploylessCallViaFactory)
            return toDeploylessCallViaFactoryData({
                data: data_,
                factory,
                factoryData,
                to,
            });
        return data_;
    })();
    try {
        (0,_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_19__.assertRequest)(args);
        const blockNumberHex = typeof blockNumber === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_13__.numberToHex)(blockNumber) : undefined;
        const block = blockNumberHex || blockTag;
        const rpcBlockOverrides = blockOverrides
            ? ox_BlockOverrides__WEBPACK_IMPORTED_MODULE_1__.toRpc(blockOverrides)
            : undefined;
        const rpcStateOverride = (0,_utils_stateOverride_js__WEBPACK_IMPORTED_MODULE_18__.serializeStateOverride)(stateOverride);
        const chainFormat = client.chain?.formatters?.transactionRequest?.format;
        const format = chainFormat || _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_16__.formatTransactionRequest;
        const request = format({
            // Pick out extra data that might exist on the chain's transaction request type.
            ...(0,_utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_15__.extract)(rest, { format: chainFormat }),
            from: account?.address,
            accessList,
            authorizationList,
            blobs,
            data,
            gas,
            gasPrice,
            maxFeePerBlobGas,
            maxFeePerGas,
            maxPriorityFeePerGas,
            nonce,
            to: deploylessCall ? undefined : to,
            value,
        });
        if (batch &&
            shouldPerformMulticall({ request }) &&
            !rpcStateOverride &&
            !rpcBlockOverrides) {
            try {
                return await scheduleMulticall(client, {
                    ...request,
                    blockNumber,
                    blockTag,
                });
            }
            catch (err) {
                if (!(err instanceof _errors_chain_js__WEBPACK_IMPORTED_MODULE_7__.ClientChainNotConfiguredError) &&
                    !(err instanceof _errors_chain_js__WEBPACK_IMPORTED_MODULE_7__.ChainDoesNotSupportContract))
                    throw err;
            }
        }
        const params = (() => {
            const base = [
                request,
                block,
            ];
            if (rpcStateOverride && rpcBlockOverrides)
                return [...base, rpcStateOverride, rpcBlockOverrides];
            if (rpcStateOverride)
                return [...base, rpcStateOverride];
            if (rpcBlockOverrides)
                return [...base, {}, rpcBlockOverrides];
            return base;
        })();
        const response = await client.request({
            method: 'eth_call',
            params,
        });
        if (response === '0x')
            return { data: undefined };
        return { data: response };
    }
    catch (err) {
        const data = getRevertErrorData(err);
        // Check for CCIP-Read offchain lookup signature.
        const { offchainLookup, offchainLookupSignature } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../utils/ccip.js */ "./node_modules/viem/_esm/utils/ccip.js"));
        if (client.ccipRead !== false &&
            data?.slice(0, 10) === offchainLookupSignature &&
            to)
            return { data: await offchainLookup(client, { data, to }) };
        // Check for counterfactual deployment error.
        if (deploylessCall && data?.slice(0, 10) === '0x101bb98d')
            throw new _errors_contract_js__WEBPACK_IMPORTED_MODULE_8__.CounterfactualDeploymentFailedError({ factory });
        throw (0,_utils_errors_getCallError_js__WEBPACK_IMPORTED_MODULE_14__.getCallError)(err, {
            ...args,
            account,
            chain: client.chain,
        });
    }
}
// We only want to perform a scheduled multicall if:
// - The request has calldata,
// - The request has a target address,
// - The target address is not already the aggregate3 signature,
// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).
function shouldPerformMulticall({ request }) {
    const { data, to, ...request_ } = request;
    if (!data)
        return false;
    if (data.startsWith(_constants_contract_js__WEBPACK_IMPORTED_MODULE_4__.aggregate3Signature))
        return false;
    if (!to)
        return false;
    if (Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0)
        return false;
    return true;
}
async function scheduleMulticall(client, args) {
    const { batchSize = 1024, wait = 0 } = typeof client.batch?.multicall === 'object' ? client.batch.multicall : {};
    const { blockNumber, blockTag = client.experimental_blockTag ?? 'latest', data, multicallAddress: multicallAddress_, to, } = args;
    let multicallAddress = multicallAddress_;
    if (!multicallAddress) {
        if (!client.chain)
            throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_7__.ClientChainNotConfiguredError();
        multicallAddress = (0,_utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_12__.getChainContractAddress)({
            blockNumber,
            chain: client.chain,
            contract: 'multicall3',
        });
    }
    const blockNumberHex = typeof blockNumber === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_13__.numberToHex)(blockNumber) : undefined;
    const block = blockNumberHex || blockTag;
    const { schedule } = (0,_utils_promise_createBatchScheduler_js__WEBPACK_IMPORTED_MODULE_17__.createBatchScheduler)({
        id: `${client.uid}.${block}`,
        wait,
        shouldSplitBatch(args) {
            const size = args.reduce((size, { data }) => size + (data.length - 2), 0);
            return size > batchSize * 2;
        },
        fn: async (requests) => {
            const calls = requests.map((request) => ({
                allowFailure: true,
                callData: request.data,
                target: request.to,
            }));
            const calldata = (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_11__.encodeFunctionData)({
                abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_3__.multicall3Abi,
                args: [calls],
                functionName: 'aggregate3',
            });
            const data = await client.request({
                method: 'eth_call',
                params: [
                    {
                        data: calldata,
                        to: multicallAddress,
                    },
                    block,
                ],
            });
            return (0,_utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_9__.decodeFunctionResult)({
                abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_3__.multicall3Abi,
                args: [calls],
                functionName: 'aggregate3',
                data: data || '0x',
            });
        },
    });
    const [{ returnData, success }] = await schedule({ data, to });
    if (!success)
        throw new _errors_contract_js__WEBPACK_IMPORTED_MODULE_8__.RawContractError({ data: returnData });
    if (returnData === '0x')
        return { data: undefined };
    return { data: returnData };
}
function toDeploylessCallViaBytecodeData(parameters) {
    const { code, data } = parameters;
    return (0,_utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_10__.encodeDeployData)({
        abi: (0,abitype__WEBPACK_IMPORTED_MODULE_0__.parseAbi)(['constructor(bytes, bytes)']),
        bytecode: _constants_contracts_js__WEBPACK_IMPORTED_MODULE_5__.deploylessCallViaBytecodeBytecode,
        args: [code, data],
    });
}
function toDeploylessCallViaFactoryData(parameters) {
    const { data, factory, factoryData, to } = parameters;
    return (0,_utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_10__.encodeDeployData)({
        abi: (0,abitype__WEBPACK_IMPORTED_MODULE_0__.parseAbi)(['constructor(address, bytes, address, bytes)']),
        bytecode: _constants_contracts_js__WEBPACK_IMPORTED_MODULE_5__.deploylessCallViaFactoryBytecode,
        args: [to, data, factory, factoryData],
    });
}
/** @internal */
function getRevertErrorData(err) {
    if (!(err instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_6__.BaseError))
        return undefined;
    const error = err.walk();
    return typeof error?.data === 'object' ? error.data?.data : error.data;
}
//# sourceMappingURL=call.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/createAccessList.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/createAccessList.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createAccessList: () => (/* binding */ createAccessList)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_errors_getCallError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/errors/getCallError.js */ "./node_modules/viem/_esm/utils/errors/getCallError.js");
/* harmony import */ var _utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/formatters/extract.js */ "./node_modules/viem/_esm/utils/formatters/extract.js");
/* harmony import */ var _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/formatters/transactionRequest.js */ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js");
/* harmony import */ var _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/transaction/assertRequest.js */ "./node_modules/viem/_esm/utils/transaction/assertRequest.js");






/**
 * Creates an EIP-2930 access list.
 *
 * - Docs: https://viem.sh/docs/actions/public/createAccessList
 * - JSON-RPC Methods: `eth_createAccessList`
 *
 * @param client - Client to use
 * @param parameters - {@link CreateAccessListParameters}
 * @returns The access list. {@link CreateAccessListReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createAccessList } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const data = await createAccessList(client, {
 *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',
 *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
 *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 * })
 */
async function createAccessList(client, args) {
    const { account: account_ = client.account, blockNumber, blockTag = 'latest', blobs, data, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, to, value, ...rest } = args;
    const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_) : undefined;
    try {
        (0,_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_5__.assertRequest)(args);
        const blockNumberHex = typeof blockNumber === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(blockNumber) : undefined;
        const block = blockNumberHex || blockTag;
        const chainFormat = client.chain?.formatters?.transactionRequest?.format;
        const format = chainFormat || _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_4__.formatTransactionRequest;
        const request = format({
            // Pick out extra data that might exist on the chain's transaction request type.
            ...(0,_utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_3__.extract)(rest, { format: chainFormat }),
            from: account?.address,
            blobs,
            data,
            gas,
            gasPrice,
            maxFeePerBlobGas,
            maxFeePerGas,
            maxPriorityFeePerGas,
            to,
            value,
        });
        const response = await client.request({
            method: 'eth_createAccessList',
            params: [request, block],
        });
        return {
            accessList: response.accessList,
            gasUsed: BigInt(response.gasUsed),
        };
    }
    catch (err) {
        throw (0,_utils_errors_getCallError_js__WEBPACK_IMPORTED_MODULE_2__.getCallError)(err, {
            ...args,
            account,
            chain: client.chain,
        });
    }
}
//# sourceMappingURL=createAccessList.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/createBlockFilter.js":
/*!********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/createBlockFilter.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createBlockFilter: () => (/* binding */ createBlockFilter)
/* harmony export */ });
/* harmony import */ var _utils_filters_createFilterRequestScope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/filters/createFilterRequestScope.js */ "./node_modules/viem/_esm/utils/filters/createFilterRequestScope.js");

/**
 * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).
 *
 * - Docs: https://viem.sh/docs/actions/public/createBlockFilter
 * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)
 *
 * @param client - Client to use
 * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createBlockFilter } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createBlockFilter(client)
 * // { id: "0x345a6572337856574a76364e457a4366", type: 'block' }
 */
async function createBlockFilter(client) {
    const getRequest = (0,_utils_filters_createFilterRequestScope_js__WEBPACK_IMPORTED_MODULE_0__.createFilterRequestScope)(client, {
        method: 'eth_newBlockFilter',
    });
    const id = await client.request({
        method: 'eth_newBlockFilter',
    });
    return { id, request: getRequest(id), type: 'block' };
}
//# sourceMappingURL=createBlockFilter.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/createContractEventFilter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/createContractEventFilter.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createContractEventFilter: () => (/* binding */ createContractEventFilter)
/* harmony export */ });
/* harmony import */ var _utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/encodeEventTopics.js */ "./node_modules/viem/_esm/utils/abi/encodeEventTopics.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_filters_createFilterRequestScope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/filters/createFilterRequestScope.js */ "./node_modules/viem/_esm/utils/filters/createFilterRequestScope.js");



/**
 * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).
 *
 * - Docs: https://viem.sh/docs/contract/createContractEventFilter
 *
 * @param client - Client to use
 * @param parameters - {@link CreateContractEventFilterParameters}
 * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}
 *
 * @example
 * import { createPublicClient, http, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createContractEventFilter } from 'viem/contract'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createContractEventFilter(client, {
 *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),
 * })
 */
async function createContractEventFilter(client, parameters) {
    const { address, abi, args, eventName, fromBlock, strict, toBlock } = parameters;
    const getRequest = (0,_utils_filters_createFilterRequestScope_js__WEBPACK_IMPORTED_MODULE_2__.createFilterRequestScope)(client, {
        method: 'eth_newFilter',
    });
    const topics = eventName
        ? (0,_utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_0__.encodeEventTopics)({
            abi,
            args,
            eventName,
        })
        : undefined;
    const id = await client.request({
        method: 'eth_newFilter',
        params: [
            {
                address,
                fromBlock: typeof fromBlock === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(fromBlock) : fromBlock,
                toBlock: typeof toBlock === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(toBlock) : toBlock,
                topics,
            },
        ],
    });
    return {
        abi,
        args,
        eventName,
        id,
        request: getRequest(id),
        strict: Boolean(strict),
        type: 'event',
    };
}
//# sourceMappingURL=createContractEventFilter.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/createEventFilter.js":
/*!********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/createEventFilter.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createEventFilter: () => (/* binding */ createEventFilter)
/* harmony export */ });
/* harmony import */ var _utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/encodeEventTopics.js */ "./node_modules/viem/_esm/utils/abi/encodeEventTopics.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_filters_createFilterRequestScope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/filters/createFilterRequestScope.js */ "./node_modules/viem/_esm/utils/filters/createFilterRequestScope.js");



/**
 * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).
 *
 * - Docs: https://viem.sh/docs/actions/public/createEventFilter
 * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)
 *
 * @param client - Client to use
 * @param parameters - {@link CreateEventFilterParameters}
 * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createEventFilter } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createEventFilter(client, {
 *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',
 * })
 */
async function createEventFilter(client, { address, args, event, events: events_, fromBlock, strict, toBlock, } = {}) {
    const events = events_ ?? (event ? [event] : undefined);
    const getRequest = (0,_utils_filters_createFilterRequestScope_js__WEBPACK_IMPORTED_MODULE_2__.createFilterRequestScope)(client, {
        method: 'eth_newFilter',
    });
    let topics = [];
    if (events) {
        const encoded = events.flatMap((event) => (0,_utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_0__.encodeEventTopics)({
            abi: [event],
            eventName: event.name,
            args,
        }));
        // TODO: Clean up type casting
        topics = [encoded];
        if (event)
            topics = topics[0];
    }
    const id = await client.request({
        method: 'eth_newFilter',
        params: [
            {
                address,
                fromBlock: typeof fromBlock === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(fromBlock) : fromBlock,
                toBlock: typeof toBlock === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(toBlock) : toBlock,
                ...(topics.length ? { topics } : {}),
            },
        ],
    });
    return {
        abi: events,
        args,
        eventName: event ? event.name : undefined,
        fromBlock,
        id,
        request: getRequest(id),
        strict: Boolean(strict),
        toBlock,
        type: 'event',
    };
}
//# sourceMappingURL=createEventFilter.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/createPendingTransactionFilter.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/createPendingTransactionFilter.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createPendingTransactionFilter: () => (/* binding */ createPendingTransactionFilter)
/* harmony export */ });
/* harmony import */ var _utils_filters_createFilterRequestScope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/filters/createFilterRequestScope.js */ "./node_modules/viem/_esm/utils/filters/createFilterRequestScope.js");

/**
 * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).
 *
 * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter
 * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)
 *
 * @param client - Client to use
 * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createPendingTransactionFilter } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createPendingTransactionFilter(client)
 * // { id: "0x345a6572337856574a76364e457a4366", type: 'transaction' }
 */
async function createPendingTransactionFilter(client) {
    const getRequest = (0,_utils_filters_createFilterRequestScope_js__WEBPACK_IMPORTED_MODULE_0__.createFilterRequestScope)(client, {
        method: 'eth_newPendingTransactionFilter',
    });
    const id = await client.request({
        method: 'eth_newPendingTransactionFilter',
    });
    return { id, request: getRequest(id), type: 'transaction' };
}
//# sourceMappingURL=createPendingTransactionFilter.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/estimateContractGas.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/estimateContractGas.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   estimateContractGas: () => (/* binding */ estimateContractGas)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/errors/getContractError.js */ "./node_modules/viem/_esm/utils/errors/getContractError.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _estimateGas_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./estimateGas.js */ "./node_modules/viem/_esm/actions/public/estimateGas.js");





/**
 * Estimates the gas required to successfully execute a contract write function call.
 *
 * - Docs: https://viem.sh/docs/contract/estimateContractGas
 *
 * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).
 *
 * @param client - Client to use
 * @param parameters - {@link EstimateContractGasParameters}
 * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}
 *
 * @example
 * import { createPublicClient, http, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { estimateContractGas } from 'viem/contract'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const gas = await estimateContractGas(client, {
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *   abi: parseAbi(['function mint() public']),
 *   functionName: 'mint',
 *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',
 * })
 */
async function estimateContractGas(client, parameters) {
    const { abi, address, args, functionName, dataSuffix, ...request } = parameters;
    const data = (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_1__.encodeFunctionData)({
        abi,
        args,
        functionName,
    });
    try {
        const gas = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.getAction)(client, _estimateGas_js__WEBPACK_IMPORTED_MODULE_4__.estimateGas, 'estimateGas')({
            data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,
            to: address,
            ...request,
        });
        return gas;
    }
    catch (error) {
        const account = request.account ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(request.account) : undefined;
        throw (0,_utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_2__.getContractError)(error, {
            abi,
            address,
            args,
            docsPath: '/docs/contract/estimateContractGas',
            functionName,
            sender: account?.address,
        });
    }
}
//# sourceMappingURL=estimateContractGas.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/estimateFeesPerGas.js":
/*!*********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/estimateFeesPerGas.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   estimateFeesPerGas: () => (/* binding */ estimateFeesPerGas),
/* harmony export */   internal_estimateFeesPerGas: () => (/* binding */ internal_estimateFeesPerGas)
/* harmony export */ });
/* harmony import */ var _errors_fee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/fee.js */ "./node_modules/viem/_esm/errors/fee.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _estimateMaxPriorityFeePerGas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./estimateMaxPriorityFeePerGas.js */ "./node_modules/viem/_esm/actions/public/estimateMaxPriorityFeePerGas.js");
/* harmony import */ var _getBlock_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBlock.js */ "./node_modules/viem/_esm/actions/public/getBlock.js");
/* harmony import */ var _getGasPrice_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getGasPrice.js */ "./node_modules/viem/_esm/actions/public/getGasPrice.js");





/**
 * Returns an estimate for the fees per gas (in wei) for a
 * transaction to be likely included in the next block.
 * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains#fees-estimatefeespergas) if set.
 *
 * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas
 *
 * @param client - Client to use
 * @param parameters - {@link EstimateFeesPerGasParameters}
 * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { estimateFeesPerGas } from 'viem/actions'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const maxPriorityFeePerGas = await estimateFeesPerGas(client)
 * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }
 */
async function estimateFeesPerGas(client, args) {
    return internal_estimateFeesPerGas(client, args);
}
async function internal_estimateFeesPerGas(client, args) {
    const { block: block_, chain = client.chain, request, type = 'eip1559', } = args || {};
    const baseFeeMultiplier = await (async () => {
        if (typeof chain?.fees?.baseFeeMultiplier === 'function')
            return chain.fees.baseFeeMultiplier({
                block: block_,
                client,
                request,
            });
        return chain?.fees?.baseFeeMultiplier ?? 1.2;
    })();
    if (baseFeeMultiplier < 1)
        throw new _errors_fee_js__WEBPACK_IMPORTED_MODULE_0__.BaseFeeScalarError();
    const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0;
    const denominator = 10 ** decimals;
    const multiply = (base) => (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /
        BigInt(denominator);
    const block = block_
        ? block_
        : await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, _getBlock_js__WEBPACK_IMPORTED_MODULE_3__.getBlock, 'getBlock')({});
    if (typeof chain?.fees?.estimateFeesPerGas === 'function') {
        const fees = (await chain.fees.estimateFeesPerGas({
            block: block_,
            client,
            multiply,
            request,
            type,
        }));
        if (fees !== null)
            return fees;
    }
    if (type === 'eip1559') {
        if (typeof block.baseFeePerGas !== 'bigint')
            throw new _errors_fee_js__WEBPACK_IMPORTED_MODULE_0__.Eip1559FeesNotSupportedError();
        const maxPriorityFeePerGas = typeof request?.maxPriorityFeePerGas === 'bigint'
            ? request.maxPriorityFeePerGas
            : await (0,_estimateMaxPriorityFeePerGas_js__WEBPACK_IMPORTED_MODULE_2__.internal_estimateMaxPriorityFeePerGas)(client, {
                block: block,
                chain,
                request,
            });
        const baseFeePerGas = multiply(block.baseFeePerGas);
        const maxFeePerGas = request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas;
        return {
            maxFeePerGas,
            maxPriorityFeePerGas,
        };
    }
    const gasPrice = request?.gasPrice ??
        multiply(await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, _getGasPrice_js__WEBPACK_IMPORTED_MODULE_4__.getGasPrice, 'getGasPrice')({}));
    return {
        gasPrice,
    };
}
//# sourceMappingURL=estimateFeesPerGas.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/estimateGas.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/estimateGas.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   estimateGas: () => (/* binding */ estimateGas)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _utils_authorization_recoverAuthorizationAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/authorization/recoverAuthorizationAddress.js */ "./node_modules/viem/_esm/utils/authorization/recoverAuthorizationAddress.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_errors_getEstimateGasError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/errors/getEstimateGasError.js */ "./node_modules/viem/_esm/utils/errors/getEstimateGasError.js");
/* harmony import */ var _utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/formatters/extract.js */ "./node_modules/viem/_esm/utils/formatters/extract.js");
/* harmony import */ var _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/formatters/transactionRequest.js */ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js");
/* harmony import */ var _utils_stateOverride_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/stateOverride.js */ "./node_modules/viem/_esm/utils/stateOverride.js");
/* harmony import */ var _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/transaction/assertRequest.js */ "./node_modules/viem/_esm/utils/transaction/assertRequest.js");
/* harmony import */ var _wallet_prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../wallet/prepareTransactionRequest.js */ "./node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js");
/* harmony import */ var _getBalance_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getBalance.js */ "./node_modules/viem/_esm/actions/public/getBalance.js");











/**
 * Estimates the gas necessary to complete a transaction without submitting it to the network.
 *
 * - Docs: https://viem.sh/docs/actions/public/estimateGas
 * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)
 *
 * @param client - Client to use
 * @param parameters - {@link EstimateGasParameters}
 * @returns The gas estimate (in gas units). {@link EstimateGasReturnType}
 *
 * @example
 * import { createPublicClient, http, parseEther } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { estimateGas } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const gasEstimate = await estimateGas(client, {
 *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *   value: parseEther('1'),
 * })
 */
async function estimateGas(client, args) {
    const { account: account_ = client.account } = args;
    const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_) : undefined;
    try {
        const { accessList, authorizationList, blobs, blobVersionedHashes, blockNumber, blockTag, data, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, nonce, value, stateOverride, ...rest } = (await (0,_wallet_prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_9__.prepareTransactionRequest)(client, {
            ...args,
            parameters: 
            // Some RPC Providers do not compute versioned hashes from blobs. We will need
            // to compute them.
            account?.type === 'local' ? undefined : ['blobVersionedHashes'],
        }));
        const blockNumberHex = typeof blockNumber === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(blockNumber) : undefined;
        const block = blockNumberHex || blockTag;
        const rpcStateOverride = (0,_utils_stateOverride_js__WEBPACK_IMPORTED_MODULE_7__.serializeStateOverride)(stateOverride);
        const to = await (async () => {
            // If `to` exists on the parameters, use that.
            if (rest.to)
                return rest.to;
            // If no `to` exists, and we are sending a EIP-7702 transaction, use the
            // address of the first authorization in the list.
            if (authorizationList && authorizationList.length > 0)
                return await (0,_utils_authorization_recoverAuthorizationAddress_js__WEBPACK_IMPORTED_MODULE_2__.recoverAuthorizationAddress)({
                    authorization: authorizationList[0],
                }).catch(() => {
                    throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError('`to` is required. Could not infer from `authorizationList`');
                });
            // Otherwise, we are sending a deployment transaction.
            return undefined;
        })();
        (0,_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_8__.assertRequest)(args);
        const chainFormat = client.chain?.formatters?.transactionRequest?.format;
        const format = chainFormat || _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_6__.formatTransactionRequest;
        const request = format({
            // Pick out extra data that might exist on the chain's transaction request type.
            ...(0,_utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_5__.extract)(rest, { format: chainFormat }),
            from: account?.address,
            accessList,
            authorizationList,
            blobs,
            blobVersionedHashes,
            data,
            gas,
            gasPrice,
            maxFeePerBlobGas,
            maxFeePerGas,
            maxPriorityFeePerGas,
            nonce,
            to,
            value,
        });
        function estimateGas_rpc(parameters) {
            const { block, request, rpcStateOverride } = parameters;
            return client.request({
                method: 'eth_estimateGas',
                params: rpcStateOverride
                    ? [
                        request,
                        block ?? client.experimental_blockTag ?? 'latest',
                        rpcStateOverride,
                    ]
                    : block
                        ? [request, block]
                        : [request],
            });
        }
        let estimate = BigInt(await estimateGas_rpc({ block, request, rpcStateOverride }));
        // TODO(7702): Remove this once https://github.com/ethereum/execution-apis/issues/561 is resolved.
        //       Authorization list schema is not implemented on JSON-RPC spec yet, so we need to
        //       manually estimate the gas.
        if (authorizationList) {
            const value = await (0,_getBalance_js__WEBPACK_IMPORTED_MODULE_10__.getBalance)(client, { address: request.from });
            const estimates = await Promise.all(authorizationList.map(async (authorization) => {
                const { address } = authorization;
                const estimate = await estimateGas_rpc({
                    block,
                    request: {
                        authorizationList: undefined,
                        data,
                        from: account?.address,
                        to: address,
                        value: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(value),
                    },
                    rpcStateOverride,
                }).catch(() => 100000n);
                return 2n * BigInt(estimate);
            }));
            estimate += estimates.reduce((acc, curr) => acc + curr, 0n);
        }
        return estimate;
    }
    catch (err) {
        throw (0,_utils_errors_getEstimateGasError_js__WEBPACK_IMPORTED_MODULE_4__.getEstimateGasError)(err, {
            ...args,
            account,
            chain: client.chain,
        });
    }
}
//# sourceMappingURL=estimateGas.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/estimateMaxPriorityFeePerGas.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/estimateMaxPriorityFeePerGas.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   estimateMaxPriorityFeePerGas: () => (/* binding */ estimateMaxPriorityFeePerGas),
/* harmony export */   internal_estimateMaxPriorityFeePerGas: () => (/* binding */ internal_estimateMaxPriorityFeePerGas)
/* harmony export */ });
/* harmony import */ var _errors_fee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/fee.js */ "./node_modules/viem/_esm/errors/fee.js");
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _getBlock_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBlock.js */ "./node_modules/viem/_esm/actions/public/getBlock.js");
/* harmony import */ var _getGasPrice_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getGasPrice.js */ "./node_modules/viem/_esm/actions/public/getGasPrice.js");





/**
 * Returns an estimate for the max priority fee per gas (in wei) for a
 * transaction to be likely included in the next block.
 * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains#fees-defaultpriorityfee) if set.
 *
 * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas
 *
 * @param client - Client to use
 * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { estimateMaxPriorityFeePerGas } from 'viem/actions'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)
 * // 10000000n
 */
async function estimateMaxPriorityFeePerGas(client, args) {
    return internal_estimateMaxPriorityFeePerGas(client, args);
}
async function internal_estimateMaxPriorityFeePerGas(client, args) {
    const { block: block_, chain = client.chain, request } = args || {};
    try {
        const maxPriorityFeePerGas = chain?.fees?.maxPriorityFeePerGas ?? chain?.fees?.defaultPriorityFee;
        if (typeof maxPriorityFeePerGas === 'function') {
            const block = block_ || (await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _getBlock_js__WEBPACK_IMPORTED_MODULE_3__.getBlock, 'getBlock')({}));
            const maxPriorityFeePerGas_ = await maxPriorityFeePerGas({
                block,
                client,
                request,
            });
            if (maxPriorityFeePerGas_ === null)
                throw new Error();
            return maxPriorityFeePerGas_;
        }
        if (typeof maxPriorityFeePerGas !== 'undefined')
            return maxPriorityFeePerGas;
        const maxPriorityFeePerGasHex = await client.request({
            method: 'eth_maxPriorityFeePerGas',
        });
        return (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_1__.hexToBigInt)(maxPriorityFeePerGasHex);
    }
    catch {
        // If the RPC Provider does not support `eth_maxPriorityFeePerGas`
        // fall back to calculating it manually via `gasPrice - baseFeePerGas`.
        // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee
        const [block, gasPrice] = await Promise.all([
            block_
                ? Promise.resolve(block_)
                : (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _getBlock_js__WEBPACK_IMPORTED_MODULE_3__.getBlock, 'getBlock')({}),
            (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _getGasPrice_js__WEBPACK_IMPORTED_MODULE_4__.getGasPrice, 'getGasPrice')({}),
        ]);
        if (typeof block.baseFeePerGas !== 'bigint')
            throw new _errors_fee_js__WEBPACK_IMPORTED_MODULE_0__.Eip1559FeesNotSupportedError();
        const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas;
        if (maxPriorityFeePerGas < 0n)
            return 0n;
        return maxPriorityFeePerGas;
    }
}
//# sourceMappingURL=estimateMaxPriorityFeePerGas.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getBalance.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getBalance.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getBalance: () => (/* binding */ getBalance)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Returns the balance of an address in wei.
 *
 * - Docs: https://viem.sh/docs/actions/public/getBalance
 * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)
 *
 * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).
 *
 * ```ts
 * const balance = await getBalance(client, {
 *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 *   blockTag: 'safe'
 * })
 * const balanceAsEther = formatEther(balance)
 * // "6.942"
 * ```
 *
 * @param client - Client to use
 * @param parameters - {@link GetBalanceParameters}
 * @returns The balance of the address in wei. {@link GetBalanceReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getBalance } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const balance = await getBalance(client, {
 *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 * })
 * // 10000000000000000000000n (wei)
 */
async function getBalance(client, { address, blockNumber, blockTag = client.experimental_blockTag ?? 'latest', }) {
    const blockNumberHex = typeof blockNumber === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(blockNumber) : undefined;
    const balance = await client.request({
        method: 'eth_getBalance',
        params: [address, blockNumberHex || blockTag],
    });
    return BigInt(balance);
}
//# sourceMappingURL=getBalance.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getBlobBaseFee.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getBlobBaseFee.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getBlobBaseFee: () => (/* binding */ getBlobBaseFee)
/* harmony export */ });
/**
 * Returns the base fee per blob gas in wei.
 *
 * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee
 * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)
 *
 * @param client - Client to use
 * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getBlobBaseFee } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const blobBaseFee = await getBlobBaseFee(client)
 */
async function getBlobBaseFee(client) {
    const baseFee = await client.request({
        method: 'eth_blobBaseFee',
    });
    return BigInt(baseFee);
}
//# sourceMappingURL=getBlobBaseFee.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getBlock.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getBlock.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getBlock: () => (/* binding */ getBlock)
/* harmony export */ });
/* harmony import */ var _errors_block_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/block.js */ "./node_modules/viem/_esm/errors/block.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_formatters_block_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/formatters/block.js */ "./node_modules/viem/_esm/utils/formatters/block.js");



/**
 * Returns information about a block at a block number, hash, or tag.
 *
 * - Docs: https://viem.sh/docs/actions/public/getBlock
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks
 * - JSON-RPC Methods:
 *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.
 *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.
 *
 * @param client - Client to use
 * @param parameters - {@link GetBlockParameters}
 * @returns Information about the block. {@link GetBlockReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getBlock } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const block = await getBlock(client)
 */
async function getBlock(client, { blockHash, blockNumber, blockTag = client.experimental_blockTag ?? 'latest', includeTransactions: includeTransactions_, } = {}) {
    const includeTransactions = includeTransactions_ ?? false;
    const blockNumberHex = blockNumber !== undefined ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(blockNumber) : undefined;
    let block = null;
    if (blockHash) {
        block = await client.request({
            method: 'eth_getBlockByHash',
            params: [blockHash, includeTransactions],
        }, { dedupe: true });
    }
    else {
        block = await client.request({
            method: 'eth_getBlockByNumber',
            params: [blockNumberHex || blockTag, includeTransactions],
        }, { dedupe: Boolean(blockNumberHex) });
    }
    if (!block)
        throw new _errors_block_js__WEBPACK_IMPORTED_MODULE_0__.BlockNotFoundError({ blockHash, blockNumber });
    const format = client.chain?.formatters?.block?.format || _utils_formatters_block_js__WEBPACK_IMPORTED_MODULE_2__.formatBlock;
    return format(block);
}
//# sourceMappingURL=getBlock.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getBlockNumber.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getBlockNumber.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getBlockNumber: () => (/* binding */ getBlockNumber),
/* harmony export */   getBlockNumberCache: () => (/* binding */ getBlockNumberCache)
/* harmony export */ });
/* harmony import */ var _utils_promise_withCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/promise/withCache.js */ "./node_modules/viem/_esm/utils/promise/withCache.js");

const cacheKey = (id) => `blockNumber.${id}`;
/** @internal */
function getBlockNumberCache(id) {
    return (0,_utils_promise_withCache_js__WEBPACK_IMPORTED_MODULE_0__.getCache)(cacheKey(id));
}
/**
 * Returns the number of the most recent block seen.
 *
 * - Docs: https://viem.sh/docs/actions/public/getBlockNumber
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks
 * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)
 *
 * @param client - Client to use
 * @param parameters - {@link GetBlockNumberParameters}
 * @returns The number of the block. {@link GetBlockNumberReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getBlockNumber } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const blockNumber = await getBlockNumber(client)
 * // 69420n
 */
async function getBlockNumber(client, { cacheTime = client.cacheTime } = {}) {
    const blockNumberHex = await (0,_utils_promise_withCache_js__WEBPACK_IMPORTED_MODULE_0__.withCache)(() => client.request({
        method: 'eth_blockNumber',
    }), { cacheKey: cacheKey(client.uid), cacheTime });
    return BigInt(blockNumberHex);
}
//# sourceMappingURL=getBlockNumber.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getBlockTransactionCount.js":
/*!***************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getBlockTransactionCount.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getBlockTransactionCount: () => (/* binding */ getBlockTransactionCount)
/* harmony export */ });
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * Returns the number of Transactions at a block number, hash, or tag.
 *
 * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount
 * - JSON-RPC Methods:
 *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.
 *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.
 *
 * @param client - Client to use
 * @param parameters - {@link GetBlockTransactionCountParameters}
 * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getBlockTransactionCount } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const count = await getBlockTransactionCount(client)
 */
async function getBlockTransactionCount(client, { blockHash, blockNumber, blockTag = 'latest', } = {}) {
    const blockNumberHex = blockNumber !== undefined ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(blockNumber) : undefined;
    let count;
    if (blockHash) {
        count = await client.request({
            method: 'eth_getBlockTransactionCountByHash',
            params: [blockHash],
        }, { dedupe: true });
    }
    else {
        count = await client.request({
            method: 'eth_getBlockTransactionCountByNumber',
            params: [blockNumberHex || blockTag],
        }, { dedupe: Boolean(blockNumberHex) });
    }
    return (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(count);
}
//# sourceMappingURL=getBlockTransactionCount.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getChainId.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getChainId.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getChainId: () => (/* binding */ getChainId)
/* harmony export */ });
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");

/**
 * Returns the chain ID associated with the current network.
 *
 * - Docs: https://viem.sh/docs/actions/public/getChainId
 * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)
 *
 * @param client - Client to use
 * @returns The current chain ID. {@link GetChainIdReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getChainId } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const chainId = await getChainId(client)
 * // 1
 */
async function getChainId(client) {
    const chainIdHex = await client.request({
        method: 'eth_chainId',
    }, { dedupe: true });
    return (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(chainIdHex);
}
//# sourceMappingURL=getChainId.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getCode.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getCode.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getCode: () => (/* binding */ getCode)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Retrieves the bytecode at an address.
 *
 * - Docs: https://viem.sh/docs/contract/getCode
 * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)
 *
 * @param client - Client to use
 * @param parameters - {@link GetCodeParameters}
 * @returns The contract's bytecode. {@link GetCodeReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getCode } from 'viem/contract'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const code = await getCode(client, {
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 * })
 */
async function getCode(client, { address, blockNumber, blockTag = 'latest' }) {
    const blockNumberHex = blockNumber !== undefined ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(blockNumber) : undefined;
    const hex = await client.request({
        method: 'eth_getCode',
        params: [address, blockNumberHex || blockTag],
    }, { dedupe: Boolean(blockNumberHex) });
    if (hex === '0x')
        return undefined;
    return hex;
}
//# sourceMappingURL=getCode.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getContractEvents.js":
/*!********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getContractEvents.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getContractEvents: () => (/* binding */ getContractEvents)
/* harmony export */ });
/* harmony import */ var _utils_abi_getAbiItem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/getAbiItem.js */ "./node_modules/viem/_esm/utils/abi/getAbiItem.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _getLogs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getLogs.js */ "./node_modules/viem/_esm/actions/public/getLogs.js");



/**
 * Returns a list of event logs emitted by a contract.
 *
 * - Docs: https://viem.sh/docs/contract/getContractEvents#getcontractevents
 * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)
 *
 * @param client - Client to use
 * @param parameters - {@link GetContractEventsParameters}
 * @returns A list of event logs. {@link GetContractEventsReturnType}
 *
 * @example
 * import { createClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getContractEvents } from 'viem/public'
 * import { wagmiAbi } from './abi'
 *
 * const client = createClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const logs = await getContractEvents(client, {
 *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *  abi: wagmiAbi,
 *  eventName: 'Transfer'
 * })
 */
async function getContractEvents(client, parameters) {
    const { abi, address, args, blockHash, eventName, fromBlock, toBlock, strict, } = parameters;
    const event = eventName
        ? (0,_utils_abi_getAbiItem_js__WEBPACK_IMPORTED_MODULE_0__.getAbiItem)({ abi, name: eventName })
        : undefined;
    const events = !event
        ? abi.filter((x) => x.type === 'event')
        : undefined;
    return (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, _getLogs_js__WEBPACK_IMPORTED_MODULE_2__.getLogs, 'getLogs')({
        address,
        args,
        blockHash,
        event,
        events,
        fromBlock,
        toBlock,
        strict,
    });
}
//# sourceMappingURL=getContractEvents.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getEip712Domain.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getEip712Domain.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEip712Domain: () => (/* binding */ getEip712Domain)
/* harmony export */ });
/* harmony import */ var _errors_eip712_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/eip712.js */ "./node_modules/viem/_esm/errors/eip712.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _readContract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");



/**
 * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.
 *
 * @param client - A {@link Client} instance.
 * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}
 * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}
 *
 * @example
 * ```ts
 * import { createPublicClient, http, getEip712Domain } from 'viem'
 * import { mainnet } from 'viem/chains'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 *
 * const domain = await getEip712Domain(client, {
 *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
 * })
 * // {
 * //   domain: {
 * //     name: 'ExampleContract',
 * //     version: '1',
 * //     chainId: 1,
 * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
 * //   },
 * //   fields: '0x0f',
 * //   extensions: [],
 * // }
 * ```
 */
async function getEip712Domain(client, parameters) {
    const { address, factory, factoryData } = parameters;
    try {
        const [fields, name, version, chainId, verifyingContract, salt, extensions,] = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, _readContract_js__WEBPACK_IMPORTED_MODULE_2__.readContract, 'readContract')({
            abi,
            address,
            functionName: 'eip712Domain',
            factory,
            factoryData,
        });
        return {
            domain: {
                name,
                version,
                chainId: Number(chainId),
                verifyingContract,
                salt,
            },
            extensions,
            fields,
        };
    }
    catch (e) {
        const error = e;
        if (error.name === 'ContractFunctionExecutionError' &&
            error.cause.name === 'ContractFunctionZeroDataError') {
            throw new _errors_eip712_js__WEBPACK_IMPORTED_MODULE_0__.Eip712DomainNotFoundError({ address });
        }
        throw error;
    }
}
const abi = [
    {
        inputs: [],
        name: 'eip712Domain',
        outputs: [
            { name: 'fields', type: 'bytes1' },
            { name: 'name', type: 'string' },
            { name: 'version', type: 'string' },
            { name: 'chainId', type: 'uint256' },
            { name: 'verifyingContract', type: 'address' },
            { name: 'salt', type: 'bytes32' },
            { name: 'extensions', type: 'uint256[]' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
//# sourceMappingURL=getEip712Domain.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getFeeHistory.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getFeeHistory.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFeeHistory: () => (/* binding */ getFeeHistory)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_formatters_feeHistory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/formatters/feeHistory.js */ "./node_modules/viem/_esm/utils/formatters/feeHistory.js");


/**
 * Returns a collection of historical gas information.
 *
 * - Docs: https://viem.sh/docs/actions/public/getFeeHistory
 * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)
 *
 * @param client - Client to use
 * @param parameters - {@link GetFeeHistoryParameters}
 * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getFeeHistory } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const feeHistory = await getFeeHistory(client, {
 *   blockCount: 4,
 *   rewardPercentiles: [25, 75],
 * })
 */
async function getFeeHistory(client, { blockCount, blockNumber, blockTag = 'latest', rewardPercentiles, }) {
    const blockNumberHex = typeof blockNumber === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(blockNumber) : undefined;
    const feeHistory = await client.request({
        method: 'eth_feeHistory',
        params: [
            (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(blockCount),
            blockNumberHex || blockTag,
            rewardPercentiles,
        ],
    }, { dedupe: Boolean(blockNumberHex) });
    return (0,_utils_formatters_feeHistory_js__WEBPACK_IMPORTED_MODULE_1__.formatFeeHistory)(feeHistory);
}
//# sourceMappingURL=getFeeHistory.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getFilterChanges.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getFilterChanges.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFilterChanges: () => (/* binding */ getFilterChanges)
/* harmony export */ });
/* harmony import */ var _utils_abi_parseEventLogs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/parseEventLogs.js */ "./node_modules/viem/_esm/utils/abi/parseEventLogs.js");
/* harmony import */ var _utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/formatters/log.js */ "./node_modules/viem/_esm/utils/formatters/log.js");


/**
 * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.
 *
 * - Docs: https://viem.sh/docs/actions/public/getFilterChanges
 * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)
 *
 * A Filter can be created from the following actions:
 *
 * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)
 * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)
 * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)
 * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)
 *
 * Depending on the type of filter, the return value will be different:
 *
 * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.
 * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.
 * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.
 *
 * @param client - Client to use
 * @param parameters - {@link GetFilterChangesParameters}
 * @returns Logs or hashes. {@link GetFilterChangesReturnType}
 *
 * @example
 * // Blocks
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createBlockFilter, getFilterChanges } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createBlockFilter(client)
 * const hashes = await getFilterChanges(client, { filter })
 *
 * @example
 * // Contract Events
 * import { createPublicClient, http, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createContractEventFilter, getFilterChanges } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createContractEventFilter(client, {
 *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
 *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),
 *   eventName: 'Transfer',
 * })
 * const logs = await getFilterChanges(client, { filter })
 *
 * @example
 * // Raw Events
 * import { createPublicClient, http, parseAbiItem } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createEventFilter, getFilterChanges } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createEventFilter(client, {
 *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
 *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),
 * })
 * const logs = await getFilterChanges(client, { filter })
 *
 * @example
 * // Transactions
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createPendingTransactionFilter(client)
 * const hashes = await getFilterChanges(client, { filter })
 */
async function getFilterChanges(_client, { filter, }) {
    const strict = 'strict' in filter && filter.strict;
    const logs = await filter.request({
        method: 'eth_getFilterChanges',
        params: [filter.id],
    });
    if (typeof logs[0] === 'string')
        return logs;
    const formattedLogs = logs.map((log) => (0,_utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_1__.formatLog)(log));
    if (!('abi' in filter) || !filter.abi)
        return formattedLogs;
    return (0,_utils_abi_parseEventLogs_js__WEBPACK_IMPORTED_MODULE_0__.parseEventLogs)({
        abi: filter.abi,
        logs: formattedLogs,
        strict,
    });
}
//# sourceMappingURL=getFilterChanges.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getFilterLogs.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getFilterLogs.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFilterLogs: () => (/* binding */ getFilterLogs)
/* harmony export */ });
/* harmony import */ var _utils_abi_parseEventLogs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/parseEventLogs.js */ "./node_modules/viem/_esm/utils/abi/parseEventLogs.js");
/* harmony import */ var _utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/formatters/log.js */ "./node_modules/viem/_esm/utils/formatters/log.js");


/**
 * Returns a list of event logs since the filter was created.
 *
 * - Docs: https://viem.sh/docs/actions/public/getFilterLogs
 * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)
 *
 * `getFilterLogs` is only compatible with **event filters**.
 *
 * @param client - Client to use
 * @param parameters - {@link GetFilterLogsParameters}
 * @returns A list of event logs. {@link GetFilterLogsReturnType}
 *
 * @example
 * import { createPublicClient, http, parseAbiItem } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createEventFilter, getFilterLogs } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const filter = await createEventFilter(client, {
 *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
 *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),
 * })
 * const logs = await getFilterLogs(client, { filter })
 */
async function getFilterLogs(_client, { filter, }) {
    const strict = filter.strict ?? false;
    const logs = await filter.request({
        method: 'eth_getFilterLogs',
        params: [filter.id],
    });
    const formattedLogs = logs.map((log) => (0,_utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_1__.formatLog)(log));
    if (!filter.abi)
        return formattedLogs;
    return (0,_utils_abi_parseEventLogs_js__WEBPACK_IMPORTED_MODULE_0__.parseEventLogs)({
        abi: filter.abi,
        logs: formattedLogs,
        strict,
    });
}
//# sourceMappingURL=getFilterLogs.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getGasPrice.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getGasPrice.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getGasPrice: () => (/* binding */ getGasPrice)
/* harmony export */ });
/**
 * Returns the current price of gas (in wei).
 *
 * - Docs: https://viem.sh/docs/actions/public/getGasPrice
 * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)
 *
 * @param client - Client to use
 * @returns The gas price (in wei). {@link GetGasPriceReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getGasPrice } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const gasPrice = await getGasPrice(client)
 */
async function getGasPrice(client) {
    const gasPrice = await client.request({
        method: 'eth_gasPrice',
    });
    return BigInt(gasPrice);
}
//# sourceMappingURL=getGasPrice.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getLogs.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getLogs.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getLogs: () => (/* binding */ getLogs)
/* harmony export */ });
/* harmony import */ var _utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/encodeEventTopics.js */ "./node_modules/viem/_esm/utils/abi/encodeEventTopics.js");
/* harmony import */ var _utils_abi_parseEventLogs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/abi/parseEventLogs.js */ "./node_modules/viem/_esm/utils/abi/parseEventLogs.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/formatters/log.js */ "./node_modules/viem/_esm/utils/formatters/log.js");




/**
 * Returns a list of event logs matching the provided parameters.
 *
 * - Docs: https://viem.sh/docs/actions/public/getLogs
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs
 * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)
 *
 * @param client - Client to use
 * @param parameters - {@link GetLogsParameters}
 * @returns A list of event logs. {@link GetLogsReturnType}
 *
 * @example
 * import { createPublicClient, http, parseAbiItem } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getLogs } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const logs = await getLogs(client)
 */
async function getLogs(client, { address, blockHash, fromBlock, toBlock, event, events: events_, args, strict: strict_, } = {}) {
    const strict = strict_ ?? false;
    const events = events_ ?? (event ? [event] : undefined);
    let topics = [];
    if (events) {
        const encoded = events.flatMap((event) => (0,_utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_0__.encodeEventTopics)({
            abi: [event],
            eventName: event.name,
            args: events_ ? undefined : args,
        }));
        // TODO: Clean up type casting
        topics = [encoded];
        if (event)
            topics = topics[0];
    }
    let logs;
    if (blockHash) {
        logs = await client.request({
            method: 'eth_getLogs',
            params: [{ address, topics, blockHash }],
        });
    }
    else {
        logs = await client.request({
            method: 'eth_getLogs',
            params: [
                {
                    address,
                    topics,
                    fromBlock: typeof fromBlock === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(fromBlock) : fromBlock,
                    toBlock: typeof toBlock === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(toBlock) : toBlock,
                },
            ],
        });
    }
    const formattedLogs = logs.map((log) => (0,_utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_3__.formatLog)(log));
    if (!events)
        return formattedLogs;
    return (0,_utils_abi_parseEventLogs_js__WEBPACK_IMPORTED_MODULE_1__.parseEventLogs)({
        abi: events,
        args: args,
        logs: formattedLogs,
        strict,
    });
}
//# sourceMappingURL=getLogs.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getProof.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getProof.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getProof: () => (/* binding */ getProof)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_formatters_proof_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/formatters/proof.js */ "./node_modules/viem/_esm/utils/formatters/proof.js");


/**
 * Returns the account and storage values of the specified account including the Merkle-proof.
 *
 * - Docs: https://viem.sh/docs/actions/public/getProof
 * - JSON-RPC Methods:
 *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)
 *
 * @param client - Client to use
 * @param parameters - {@link GetProofParameters}
 * @returns Proof data. {@link GetProofReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getProof } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const block = await getProof(client, {
 *  address: '0x...',
 *  storageKeys: ['0x...'],
 * })
 */
async function getProof(client, { address, blockNumber, blockTag: blockTag_, storageKeys, }) {
    const blockTag = blockTag_ ?? 'latest';
    const blockNumberHex = blockNumber !== undefined ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(blockNumber) : undefined;
    const proof = await client.request({
        method: 'eth_getProof',
        params: [address, storageKeys, blockNumberHex || blockTag],
    });
    return (0,_utils_formatters_proof_js__WEBPACK_IMPORTED_MODULE_1__.formatProof)(proof);
}
//# sourceMappingURL=getProof.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getStorageAt.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getStorageAt.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getStorageAt: () => (/* binding */ getStorageAt)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Returns the value from a storage slot at a given address.
 *
 * - Docs: https://viem.sh/docs/contract/getStorageAt
 * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)
 *
 * @param client - Client to use
 * @param parameters - {@link GetStorageAtParameters}
 * @returns The value of the storage slot. {@link GetStorageAtReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getStorageAt } from 'viem/contract'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const code = await getStorageAt(client, {
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *   slot: toHex(0),
 * })
 */
async function getStorageAt(client, { address, blockNumber, blockTag = 'latest', slot }) {
    const blockNumberHex = blockNumber !== undefined ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(blockNumber) : undefined;
    const data = await client.request({
        method: 'eth_getStorageAt',
        params: [address, slot, blockNumberHex || blockTag],
    });
    return data;
}
//# sourceMappingURL=getStorageAt.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getTransaction.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getTransaction.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTransaction: () => (/* binding */ getTransaction)
/* harmony export */ });
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_formatters_transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/formatters/transaction.js */ "./node_modules/viem/_esm/utils/formatters/transaction.js");



/**
 * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.
 *
 * - Docs: https://viem.sh/docs/actions/public/getTransaction
 * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions
 * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)
 *
 * @param client - Client to use
 * @param parameters - {@link GetTransactionParameters}
 * @returns The transaction information. {@link GetTransactionReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getTransaction } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const transaction = await getTransaction(client, {
 *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',
 * })
 */
async function getTransaction(client, { blockHash, blockNumber, blockTag: blockTag_, hash, index, }) {
    const blockTag = blockTag_ || 'latest';
    const blockNumberHex = blockNumber !== undefined ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(blockNumber) : undefined;
    let transaction = null;
    if (hash) {
        transaction = await client.request({
            method: 'eth_getTransactionByHash',
            params: [hash],
        }, { dedupe: true });
    }
    else if (blockHash) {
        transaction = await client.request({
            method: 'eth_getTransactionByBlockHashAndIndex',
            params: [blockHash, (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(index)],
        }, { dedupe: true });
    }
    else if (blockNumberHex || blockTag) {
        transaction = await client.request({
            method: 'eth_getTransactionByBlockNumberAndIndex',
            params: [blockNumberHex || blockTag, (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(index)],
        }, { dedupe: Boolean(blockNumberHex) });
    }
    if (!transaction)
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__.TransactionNotFoundError({
            blockHash,
            blockNumber,
            blockTag,
            hash,
            index,
        });
    const format = client.chain?.formatters?.transaction?.format || _utils_formatters_transaction_js__WEBPACK_IMPORTED_MODULE_2__.formatTransaction;
    return format(transaction);
}
//# sourceMappingURL=getTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getTransactionConfirmations.js":
/*!******************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getTransactionConfirmations.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTransactionConfirmations: () => (/* binding */ getTransactionConfirmations)
/* harmony export */ });
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _getBlockNumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getBlockNumber.js */ "./node_modules/viem/_esm/actions/public/getBlockNumber.js");
/* harmony import */ var _getTransaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getTransaction.js */ "./node_modules/viem/_esm/actions/public/getTransaction.js");



/**
 * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.
 *
 * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations
 * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions
 * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)
 *
 * @param client - Client to use
 * @param parameters - {@link GetTransactionConfirmationsParameters}
 * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getTransactionConfirmations } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const confirmations = await getTransactionConfirmations(client, {
 *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',
 * })
 */
async function getTransactionConfirmations(client, { hash, transactionReceipt }) {
    const [blockNumber, transaction] = await Promise.all([
        (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _getBlockNumber_js__WEBPACK_IMPORTED_MODULE_1__.getBlockNumber, 'getBlockNumber')({}),
        hash
            ? (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _getTransaction_js__WEBPACK_IMPORTED_MODULE_2__.getTransaction, 'getTransaction')({ hash })
            : undefined,
    ]);
    const transactionBlockNumber = transactionReceipt?.blockNumber || transaction?.blockNumber;
    if (!transactionBlockNumber)
        return 0n;
    return blockNumber - transactionBlockNumber + 1n;
}
//# sourceMappingURL=getTransactionConfirmations.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getTransactionCount.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getTransactionCount.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTransactionCount: () => (/* binding */ getTransactionCount)
/* harmony export */ });
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has sent.
 *
 * - Docs: https://viem.sh/docs/actions/public/getTransactionCount
 * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)
 *
 * @param client - Client to use
 * @param parameters - {@link GetTransactionCountParameters}
 * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getTransactionCount } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const transactionCount = await getTransactionCount(client, {
 *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 * })
 */
async function getTransactionCount(client, { address, blockTag = 'latest', blockNumber }) {
    const count = await client.request({
        method: 'eth_getTransactionCount',
        params: [
            address,
            typeof blockNumber === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(blockNumber) : blockTag,
        ],
    }, {
        dedupe: Boolean(blockNumber),
    });
    return (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(count);
}
//# sourceMappingURL=getTransactionCount.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/getTransactionReceipt.js":
/*!************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/getTransactionReceipt.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTransactionReceipt: () => (/* binding */ getTransactionReceipt)
/* harmony export */ });
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/formatters/transactionReceipt.js */ "./node_modules/viem/_esm/utils/formatters/transactionReceipt.js");


/**
 * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.
 *
 * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt
 * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions
 * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)
 *
 * @param client - Client to use
 * @param parameters - {@link GetTransactionReceiptParameters}
 * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getTransactionReceipt } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const transactionReceipt = await getTransactionReceipt(client, {
 *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',
 * })
 */
async function getTransactionReceipt(client, { hash }) {
    const receipt = await client.request({
        method: 'eth_getTransactionReceipt',
        params: [hash],
    }, { dedupe: true });
    if (!receipt)
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__.TransactionReceiptNotFoundError({ hash });
    const format = client.chain?.formatters?.transactionReceipt?.format ||
        _utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_1__.formatTransactionReceipt;
    return format(receipt);
}
//# sourceMappingURL=getTransactionReceipt.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/multicall.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/multicall.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   multicall: () => (/* binding */ multicall)
/* harmony export */ });
/* harmony import */ var _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/abis.js */ "./node_modules/viem/_esm/constants/abis.js");
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_contract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/contract.js */ "./node_modules/viem/_esm/errors/contract.js");
/* harmony import */ var _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/abi/decodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/chain/getChainContractAddress.js */ "./node_modules/viem/_esm/utils/chain/getChainContractAddress.js");
/* harmony import */ var _utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/errors/getContractError.js */ "./node_modules/viem/_esm/utils/errors/getContractError.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _readContract_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");










/**
 * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).
 *
 * - Docs: https://viem.sh/docs/contract/multicall
 *
 * @param client - Client to use
 * @param parameters - {@link MulticallParameters}
 * @returns An array of results with accompanying status. {@link MulticallReturnType}
 *
 * @example
 * import { createPublicClient, http, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { multicall } from 'viem/contract'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const abi = parseAbi([
 *   'function balanceOf(address) view returns (uint256)',
 *   'function totalSupply() view returns (uint256)',
 * ])
 * const results = await multicall(client, {
 *   contracts: [
 *     {
 *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *       abi,
 *       functionName: 'balanceOf',
 *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],
 *     },
 *     {
 *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *       abi,
 *       functionName: 'totalSupply',
 *     },
 *   ],
 * })
 * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]
 */
async function multicall(client, parameters) {
    const { account, allowFailure = true, batchSize: batchSize_, blockNumber, blockTag, multicallAddress: multicallAddress_, stateOverride, } = parameters;
    const contracts = parameters.contracts;
    const batchSize = batchSize_ ??
        ((typeof client.batch?.multicall === 'object' &&
            client.batch.multicall.batchSize) ||
            1_024);
    let multicallAddress = multicallAddress_;
    if (!multicallAddress) {
        if (!client.chain)
            throw new Error('client chain not configured. multicallAddress is required.');
        multicallAddress = (0,_utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_6__.getChainContractAddress)({
            blockNumber,
            chain: client.chain,
            contract: 'multicall3',
        });
    }
    const chunkedCalls = [[]];
    let currentChunk = 0;
    let currentChunkSize = 0;
    for (let i = 0; i < contracts.length; i++) {
        const { abi, address, args, functionName } = contracts[i];
        try {
            const callData = (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_5__.encodeFunctionData)({ abi, args, functionName });
            currentChunkSize += (callData.length - 2) / 2;
            // Check to see if we need to create a new chunk.
            if (
            // Check if batching is enabled.
            batchSize > 0 &&
                // Check if the current size of the batch exceeds the size limit.
                currentChunkSize > batchSize &&
                // Check if the current chunk is not already empty.
                chunkedCalls[currentChunk].length > 0) {
                currentChunk++;
                currentChunkSize = (callData.length - 2) / 2;
                chunkedCalls[currentChunk] = [];
            }
            chunkedCalls[currentChunk] = [
                ...chunkedCalls[currentChunk],
                {
                    allowFailure: true,
                    callData,
                    target: address,
                },
            ];
        }
        catch (err) {
            const error = (0,_utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_7__.getContractError)(err, {
                abi,
                address,
                args,
                docsPath: '/docs/contract/multicall',
                functionName,
                sender: account,
            });
            if (!allowFailure)
                throw error;
            chunkedCalls[currentChunk] = [
                ...chunkedCalls[currentChunk],
                {
                    allowFailure: true,
                    callData: '0x',
                    target: address,
                },
            ];
        }
    }
    const aggregate3Results = await Promise.allSettled(chunkedCalls.map((calls) => (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _readContract_js__WEBPACK_IMPORTED_MODULE_9__.readContract, 'readContract')({
        abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.multicall3Abi,
        account,
        address: multicallAddress,
        args: [calls],
        blockNumber,
        blockTag,
        functionName: 'aggregate3',
        stateOverride,
    })));
    const results = [];
    for (let i = 0; i < aggregate3Results.length; i++) {
        const result = aggregate3Results[i];
        // If an error occurred in a `readContract` invocation (ie. network error),
        // then append the failure reason to each contract result.
        if (result.status === 'rejected') {
            if (!allowFailure)
                throw result.reason;
            for (let j = 0; j < chunkedCalls[i].length; j++) {
                results.push({
                    status: 'failure',
                    error: result.reason,
                    result: undefined,
                });
            }
            continue;
        }
        // If the `readContract` call was successful, then decode the results.
        const aggregate3Result = result.value;
        for (let j = 0; j < aggregate3Result.length; j++) {
            // Extract the response from `readContract`
            const { returnData, success } = aggregate3Result[j];
            // Extract the request call data from the original call.
            const { callData } = chunkedCalls[i][j];
            // Extract the contract config for this call from the `contracts` argument
            // for decoding.
            const { abi, address, functionName, args } = contracts[results.length];
            try {
                if (callData === '0x')
                    throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_1__.AbiDecodingZeroDataError();
                if (!success)
                    throw new _errors_contract_js__WEBPACK_IMPORTED_MODULE_3__.RawContractError({ data: returnData });
                const result = (0,_utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_4__.decodeFunctionResult)({
                    abi,
                    args,
                    data: returnData,
                    functionName,
                });
                results.push(allowFailure ? { result, status: 'success' } : result);
            }
            catch (err) {
                const error = (0,_utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_7__.getContractError)(err, {
                    abi,
                    address,
                    args,
                    docsPath: '/docs/contract/multicall',
                    functionName,
                });
                if (!allowFailure)
                    throw error;
                results.push({ error, result: undefined, status: 'failure' });
            }
        }
    }
    if (results.length !== contracts.length)
        throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError('multicall results mismatch');
    return results;
}
//# sourceMappingURL=multicall.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/readContract.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/readContract.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   readContract: () => (/* binding */ readContract)
/* harmony export */ });
/* harmony import */ var _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/decodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/errors/getContractError.js */ "./node_modules/viem/_esm/utils/errors/getContractError.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _call_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./call.js */ "./node_modules/viem/_esm/actions/public/call.js");





/**
 * Calls a read-only function on a contract, and returns the response.
 *
 * - Docs: https://viem.sh/docs/contract/readContract
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts
 *
 * A "read-only" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.
 *
 * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).
 *
 * @param client - Client to use
 * @param parameters - {@link ReadContractParameters}
 * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}
 *
 * @example
 * import { createPublicClient, http, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { readContract } from 'viem/contract'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const result = await readContract(client, {
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),
 *   functionName: 'balanceOf',
 *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],
 * })
 * // 424122n
 */
async function readContract(client, parameters) {
    const { abi, address, args, functionName, ...rest } = parameters;
    const calldata = (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_1__.encodeFunctionData)({
        abi,
        args,
        functionName,
    });
    try {
        const { data } = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.getAction)(client, _call_js__WEBPACK_IMPORTED_MODULE_4__.call, 'call')({
            ...rest,
            data: calldata,
            to: address,
        });
        return (0,_utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_0__.decodeFunctionResult)({
            abi,
            args,
            functionName,
            data: data || '0x',
        });
    }
    catch (error) {
        throw (0,_utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_2__.getContractError)(error, {
            abi,
            address,
            args,
            docsPath: '/docs/contract/readContract',
            functionName,
        });
    }
}
//# sourceMappingURL=readContract.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/simulateBlocks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/simulateBlocks.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   simulateBlocks: () => (/* binding */ simulateBlocks)
/* harmony export */ });
/* harmony import */ var ox_BlockOverrides__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ox/BlockOverrides */ "./node_modules/ox/_esm/core/BlockOverrides.js");
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_contract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/contract.js */ "./node_modules/viem/_esm/errors/contract.js");
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/abi/decodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_data_concat_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/errors/getContractError.js */ "./node_modules/viem/_esm/utils/errors/getContractError.js");
/* harmony import */ var _utils_errors_getNodeError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/errors/getNodeError.js */ "./node_modules/viem/_esm/utils/errors/getNodeError.js");
/* harmony import */ var _utils_formatters_block_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/formatters/block.js */ "./node_modules/viem/_esm/utils/formatters/block.js");
/* harmony import */ var _utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/formatters/log.js */ "./node_modules/viem/_esm/utils/formatters/log.js");
/* harmony import */ var _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utils/formatters/transactionRequest.js */ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js");
/* harmony import */ var _utils_stateOverride_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/stateOverride.js */ "./node_modules/viem/_esm/utils/stateOverride.js");
/* harmony import */ var _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utils/transaction/assertRequest.js */ "./node_modules/viem/_esm/utils/transaction/assertRequest.js");
















/**
 * Simulates a set of calls on block(s) with optional block and state overrides.
 *
 * @example
 * ```ts
 * import { createClient, http, parseEther } from 'viem'
 * import { simulate } from 'viem/actions'
 * import { mainnet } from 'viem/chains'
 *
 * const client = createClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 *
 * const result = await simulate(client, {
 *   blocks: [{
 *     blockOverrides: {
 *       number: 69420n,
 *     },
 *     calls: [{
 *       {
 *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',
 *         data: '0xdeadbeef',
 *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *       },
 *       {
 *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',
 *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *         value: parseEther('1'),
 *       },
 *     }],
 *     stateOverrides: [{
 *       address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',
 *       balance: parseEther('10'),
 *     }],
 *   }]
 * })
 * ```
 *
 * @param client - Client to use.
 * @param parameters - {@link SimulateBlocksParameters}
 * @returns Simulated blocks. {@link SimulateBlocksReturnType}
 */
async function simulateBlocks(client, parameters) {
    const { blockNumber, blockTag = client.experimental_blockTag ?? 'latest', blocks, returnFullTransactions, traceTransfers, validation, } = parameters;
    try {
        const blockStateCalls = [];
        for (const block of blocks) {
            const blockOverrides = block.blockOverrides
                ? ox_BlockOverrides__WEBPACK_IMPORTED_MODULE_0__.toRpc(block.blockOverrides)
                : undefined;
            const calls = block.calls.map((call_) => {
                const call = call_;
                const account = call.account ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_1__.parseAccount)(call.account) : undefined;
                const data = call.abi ? (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_6__.encodeFunctionData)(call) : call.data;
                const request = {
                    ...call,
                    data: call.dataSuffix
                        ? (0,_utils_data_concat_js__WEBPACK_IMPORTED_MODULE_7__.concat)([data || '0x', call.dataSuffix])
                        : data,
                    from: call.from ?? account?.address,
                };
                (0,_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_15__.assertRequest)(request);
                return (0,_utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_13__.formatTransactionRequest)(request);
            });
            const stateOverrides = block.stateOverrides
                ? (0,_utils_stateOverride_js__WEBPACK_IMPORTED_MODULE_14__.serializeStateOverride)(block.stateOverrides)
                : undefined;
            blockStateCalls.push({
                blockOverrides,
                calls,
                stateOverrides,
            });
        }
        const blockNumberHex = typeof blockNumber === 'bigint' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(blockNumber) : undefined;
        const block = blockNumberHex || blockTag;
        const result = await client.request({
            method: 'eth_simulateV1',
            params: [
                { blockStateCalls, returnFullTransactions, traceTransfers, validation },
                block,
            ],
        });
        return result.map((block, i) => ({
            ...(0,_utils_formatters_block_js__WEBPACK_IMPORTED_MODULE_11__.formatBlock)(block),
            calls: block.calls.map((call, j) => {
                const { abi, args, functionName, to } = blocks[i].calls[j];
                const data = call.error?.data ?? call.returnData;
                const gasUsed = BigInt(call.gasUsed);
                const logs = call.logs?.map((log) => (0,_utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_12__.formatLog)(log));
                const status = call.status === '0x1' ? 'success' : 'failure';
                const result = abi && status === 'success' && data !== '0x'
                    ? (0,_utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_5__.decodeFunctionResult)({
                        abi,
                        data,
                        functionName,
                    })
                    : null;
                const error = (() => {
                    if (status === 'success')
                        return undefined;
                    let error = undefined;
                    if (call.error?.data === '0x')
                        error = new _errors_abi_js__WEBPACK_IMPORTED_MODULE_2__.AbiDecodingZeroDataError();
                    else if (call.error)
                        error = new _errors_contract_js__WEBPACK_IMPORTED_MODULE_3__.RawContractError(call.error);
                    if (!error)
                        return undefined;
                    return (0,_utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_9__.getContractError)(error, {
                        abi: (abi ?? []),
                        address: to ?? '0x',
                        args,
                        functionName: functionName ?? '<unknown>',
                    });
                })();
                return {
                    data,
                    gasUsed,
                    logs,
                    status,
                    ...(status === 'success'
                        ? {
                            result,
                        }
                        : {
                            error,
                        }),
                };
            }),
        }));
    }
    catch (e) {
        const cause = e;
        const error = (0,_utils_errors_getNodeError_js__WEBPACK_IMPORTED_MODULE_10__.getNodeError)(cause, {});
        if (error instanceof _errors_node_js__WEBPACK_IMPORTED_MODULE_4__.UnknownNodeError)
            throw cause;
        throw error;
    }
}
//# sourceMappingURL=simulateBlocks.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/simulateCalls.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/simulateCalls.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   simulateCalls: () => (/* binding */ simulateCalls)
/* harmony export */ });
/* harmony import */ var ox_AbiConstructor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ox/AbiConstructor */ "./node_modules/ox/_esm/core/AbiConstructor.js");
/* harmony import */ var ox_AbiFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ox/AbiFunction */ "./node_modules/ox/_esm/core/AbiFunction.js");
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _constants_address_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants/address.js */ "./node_modules/viem/_esm/constants/address.js");
/* harmony import */ var _constants_contracts_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants/contracts.js */ "./node_modules/viem/_esm/constants/contracts.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/index.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _createAccessList_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./createAccessList.js */ "./node_modules/viem/_esm/actions/public/createAccessList.js");
/* harmony import */ var _simulateBlocks_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./simulateBlocks.js */ "./node_modules/viem/_esm/actions/public/simulateBlocks.js");










const getBalanceCode = '0x6080604052348015600e575f80fd5b5061016d8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8b2cb4f1461002d575b5f80fd5b610047600480360381019061004291906100db565b61005d565b604051610054919061011e565b60405180910390f35b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100aa82610081565b9050919050565b6100ba816100a0565b81146100c4575f80fd5b50565b5f813590506100d5816100b1565b92915050565b5f602082840312156100f0576100ef61007d565b5b5f6100fd848285016100c7565b91505092915050565b5f819050919050565b61011881610106565b82525050565b5f6020820190506101315f83018461010f565b9291505056fea26469706673582212203b9fe929fe995c7cf9887f0bdba8a36dd78e8b73f149b17d2d9ad7cd09d2dc6264736f6c634300081a0033';
/**
 * Simulates execution of a batch of calls.
 *
 * @param client - Client to use
 * @param parameters - {@link SimulateCallsParameters}
 * @returns Results. {@link SimulateCallsReturnType}
 *
 * @example
 * ```ts
 * import { createPublicClient, http, parseEther } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { simulateCalls } from 'viem/actions'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 *
 * const result = await simulateCalls(client, {
 *   account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',
 *   calls: [{
 *     {
 *       data: '0xdeadbeef',
 *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *     },
 *     {
 *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *       value: parseEther('1'),
 *     },
 *   ]
 * })
 * ```
 */
async function simulateCalls(client, parameters) {
    const { blockNumber, blockTag, calls, stateOverrides, traceAssetChanges, traceTransfers, validation, } = parameters;
    const account = parameters.account
        ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_2__.parseAccount)(parameters.account)
        : undefined;
    if (traceAssetChanges && !account)
        throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_5__.BaseError('`account` is required when `traceAssetChanges` is true');
    // Derive bytecode to extract ETH balance via a contract call.
    const getBalanceData = account
        ? ox_AbiConstructor__WEBPACK_IMPORTED_MODULE_0__.encode(ox_AbiConstructor__WEBPACK_IMPORTED_MODULE_0__.from('constructor(bytes, bytes)'), {
            bytecode: _constants_contracts_js__WEBPACK_IMPORTED_MODULE_4__.deploylessCallViaBytecodeBytecode,
            args: [
                getBalanceCode,
                ox_AbiFunction__WEBPACK_IMPORTED_MODULE_1__.encodeData(ox_AbiFunction__WEBPACK_IMPORTED_MODULE_1__.from('function getBalance(address)'), [account.address]),
            ],
        })
        : undefined;
    // Fetch ERC20/721 addresses that were "touched" from the calls.
    const assetAddresses = traceAssetChanges
        ? await Promise.all(parameters.calls.map(async (call) => {
            if (!call.data && !call.abi)
                return;
            const { accessList } = await (0,_createAccessList_js__WEBPACK_IMPORTED_MODULE_8__.createAccessList)(client, {
                account: account.address,
                ...call,
                data: call.abi ? (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_6__.encodeFunctionData)(call) : call.data,
            });
            return accessList.map(({ address, storageKeys }) => storageKeys.length > 0 ? address : null);
        })).then((x) => x.flat().filter(Boolean))
        : [];
    const blocks = await (0,_simulateBlocks_js__WEBPACK_IMPORTED_MODULE_9__.simulateBlocks)(client, {
        blockNumber,
        blockTag: blockTag,
        blocks: [
            ...(traceAssetChanges
                ? [
                    // ETH pre balances
                    {
                        calls: [{ data: getBalanceData }],
                        stateOverrides,
                    },
                    // Asset pre balances
                    {
                        calls: assetAddresses.map((address, i) => ({
                            abi: [
                                ox_AbiFunction__WEBPACK_IMPORTED_MODULE_1__.from('function balanceOf(address) returns (uint256)'),
                            ],
                            functionName: 'balanceOf',
                            args: [account.address],
                            to: address,
                            from: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                            nonce: i,
                        })),
                        stateOverrides: [
                            {
                                address: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                                nonce: 0,
                            },
                        ],
                    },
                ]
                : []),
            {
                calls: [...calls, {}].map((call) => ({
                    ...call,
                    from: account?.address,
                })),
                stateOverrides,
            },
            ...(traceAssetChanges
                ? [
                    // ETH post balances
                    {
                        calls: [{ data: getBalanceData }],
                    },
                    // Asset post balances
                    {
                        calls: assetAddresses.map((address, i) => ({
                            abi: [
                                ox_AbiFunction__WEBPACK_IMPORTED_MODULE_1__.from('function balanceOf(address) returns (uint256)'),
                            ],
                            functionName: 'balanceOf',
                            args: [account.address],
                            to: address,
                            from: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                            nonce: i,
                        })),
                        stateOverrides: [
                            {
                                address: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                                nonce: 0,
                            },
                        ],
                    },
                    // Decimals
                    {
                        calls: assetAddresses.map((address, i) => ({
                            to: address,
                            abi: [
                                ox_AbiFunction__WEBPACK_IMPORTED_MODULE_1__.from('function decimals() returns (uint256)'),
                            ],
                            functionName: 'decimals',
                            from: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                            nonce: i,
                        })),
                        stateOverrides: [
                            {
                                address: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                                nonce: 0,
                            },
                        ],
                    },
                    // Token URI
                    {
                        calls: assetAddresses.map((address, i) => ({
                            to: address,
                            abi: [
                                ox_AbiFunction__WEBPACK_IMPORTED_MODULE_1__.from('function tokenURI(uint256) returns (string)'),
                            ],
                            functionName: 'tokenURI',
                            args: [0n],
                            from: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                            nonce: i,
                        })),
                        stateOverrides: [
                            {
                                address: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                                nonce: 0,
                            },
                        ],
                    },
                    // Symbols
                    {
                        calls: assetAddresses.map((address, i) => ({
                            to: address,
                            abi: [ox_AbiFunction__WEBPACK_IMPORTED_MODULE_1__.from('function symbol() returns (string)')],
                            functionName: 'symbol',
                            from: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                            nonce: i,
                        })),
                        stateOverrides: [
                            {
                                address: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.zeroAddress,
                                nonce: 0,
                            },
                        ],
                    },
                ]
                : []),
        ],
        traceTransfers,
        validation,
    });
    const block_results = traceAssetChanges ? blocks[2] : blocks[0];
    const [block_ethPre, block_assetsPre, , block_ethPost, block_assetsPost, block_decimals, block_tokenURI, block_symbols,] = traceAssetChanges ? blocks : [];
    // Extract call results from the simulation.
    const { calls: block_calls, ...block } = block_results;
    const results = block_calls.slice(0, -1) ?? [];
    // Extract pre-execution ETH and asset balances.
    const ethPre = block_ethPre?.calls ?? [];
    const assetsPre = block_assetsPre?.calls ?? [];
    const balancesPre = [...ethPre, ...assetsPre].map((call) => call.status === 'success' ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(call.data) : null);
    // Extract post-execution ETH and asset balances.
    const ethPost = block_ethPost?.calls ?? [];
    const assetsPost = block_assetsPost?.calls ?? [];
    const balancesPost = [...ethPost, ...assetsPost].map((call) => call.status === 'success' ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(call.data) : null);
    // Extract asset symbols & decimals.
    const decimals = (block_decimals?.calls ?? []).map((x) => x.status === 'success' ? x.result : null);
    const symbols = (block_symbols?.calls ?? []).map((x) => x.status === 'success' ? x.result : null);
    const tokenURI = (block_tokenURI?.calls ?? []).map((x) => x.status === 'success' ? x.result : null);
    const changes = [];
    for (const [i, balancePost] of balancesPost.entries()) {
        const balancePre = balancesPre[i];
        if (typeof balancePost !== 'bigint')
            continue;
        if (typeof balancePre !== 'bigint')
            continue;
        const decimals_ = decimals[i - 1];
        const symbol_ = symbols[i - 1];
        const tokenURI_ = tokenURI[i - 1];
        const token = (() => {
            if (i === 0)
                return {
                    address: _constants_address_js__WEBPACK_IMPORTED_MODULE_3__.ethAddress,
                    decimals: 18,
                    symbol: 'ETH',
                };
            return {
                address: assetAddresses[i - 1],
                decimals: tokenURI_ || decimals_ ? Number(decimals_ ?? 1) : undefined,
                symbol: symbol_ ?? undefined,
            };
        })();
        if (changes.some((change) => change.token.address === token.address))
            continue;
        changes.push({
            token,
            value: {
                pre: balancePre,
                post: balancePost,
                diff: balancePost - balancePre,
            },
        });
    }
    return {
        assetChanges: changes,
        block,
        results,
    };
}
//# sourceMappingURL=simulateCalls.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/simulateContract.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/simulateContract.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   simulateContract: () => (/* binding */ simulateContract)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/abi/decodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/errors/getContractError.js */ "./node_modules/viem/_esm/utils/errors/getContractError.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _call_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./call.js */ "./node_modules/viem/_esm/actions/public/call.js");






/**
 * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.
 *
 * - Docs: https://viem.sh/docs/contract/simulateContract
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts
 *
 * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.
 *
 * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).
 *
 * @param client - Client to use
 * @param parameters - {@link SimulateContractParameters}
 * @returns The simulation result and write request. {@link SimulateContractReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { simulateContract } from 'viem/contract'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const result = await simulateContract(client, {
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),
 *   functionName: 'mint',
 *   args: ['69420'],
 *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 * })
 */
async function simulateContract(client, parameters) {
    const { abi, address, args, dataSuffix, functionName, ...callRequest } = parameters;
    const account = callRequest.account
        ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(callRequest.account)
        : client.account;
    const calldata = (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionData)({ abi, args, functionName });
    try {
        const { data } = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_4__.getAction)(client, _call_js__WEBPACK_IMPORTED_MODULE_5__.call, 'call')({
            batch: false,
            data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,
            to: address,
            ...callRequest,
            account,
        });
        const result = (0,_utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_1__.decodeFunctionResult)({
            abi,
            args,
            functionName,
            data: data || '0x',
        });
        const minimizedAbi = abi.filter((abiItem) => 'name' in abiItem && abiItem.name === parameters.functionName);
        return {
            result,
            request: {
                abi: minimizedAbi,
                address,
                args,
                dataSuffix,
                functionName,
                ...callRequest,
                account,
            },
        };
    }
    catch (error) {
        throw (0,_utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_3__.getContractError)(error, {
            abi,
            address,
            args,
            docsPath: '/docs/contract/simulateContract',
            functionName,
            sender: account?.address,
        });
    }
}
//# sourceMappingURL=simulateContract.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/uninstallFilter.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/uninstallFilter.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   uninstallFilter: () => (/* binding */ uninstallFilter)
/* harmony export */ });
/**
 * Destroys a [`Filter`](https://viem.sh/docs/glossary/types#filter).
 *
 * - Docs: https://viem.sh/docs/actions/public/uninstallFilter
 * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)
 *
 * Destroys a Filter that was created from one of the following Actions:
 * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)
 * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)
 * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)
 *
 * @param client - Client to use
 * @param parameters - {@link UninstallFilterParameters}
 * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'
 *
 * const filter = await createPendingTransactionFilter(client)
 * const uninstalled = await uninstallFilter(client, { filter })
 * // true
 */
async function uninstallFilter(_client, { filter }) {
    return filter.request({
        method: 'eth_uninstallFilter',
        params: [filter.id],
    });
}
//# sourceMappingURL=uninstallFilter.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/verifyHash.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/verifyHash.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   verifyHash: () => (/* binding */ verifyHash)
/* harmony export */ });
/* harmony import */ var _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/abis.js */ "./node_modules/viem/_esm/constants/abis.js");
/* harmony import */ var _constants_contracts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/contracts.js */ "./node_modules/viem/_esm/constants/contracts.js");
/* harmony import */ var _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/contract.js */ "./node_modules/viem/_esm/errors/contract.js");
/* harmony import */ var _utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/abi/encodeDeployData.js */ "./node_modules/viem/_esm/utils/abi/encodeDeployData.js");
/* harmony import */ var _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _utils_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");
/* harmony import */ var _utils_data_isHex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/index.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/index.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _utils_signature_isErc6492Signature_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/signature/isErc6492Signature.js */ "./node_modules/viem/_esm/utils/signature/isErc6492Signature.js");
/* harmony import */ var _utils_signature_recoverAddress_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/signature/recoverAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverAddress.js");
/* harmony import */ var _utils_signature_serializeErc6492Signature_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utils/signature/serializeErc6492Signature.js */ "./node_modules/viem/_esm/utils/signature/serializeErc6492Signature.js");
/* harmony import */ var _utils_signature_serializeSignature_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/signature/serializeSignature.js */ "./node_modules/viem/_esm/utils/signature/serializeSignature.js");
/* harmony import */ var _call_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./call.js */ "./node_modules/viem/_esm/actions/public/call.js");















/**
 * Verifies a message hash onchain using ERC-6492.
 *
 * @param client - Client to use.
 * @param parameters - {@link VerifyHashParameters}
 * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}
 */
async function verifyHash(client, parameters) {
    const { address, factory, factoryData, hash, signature, universalSignatureVerifierAddress = client.chain?.contracts
        ?.universalSignatureVerifier?.address, ...rest } = parameters;
    const signatureHex = (() => {
        if ((0,_utils_data_isHex_js__WEBPACK_IMPORTED_MODULE_6__.isHex)(signature))
            return signature;
        if (typeof signature === 'object' && 'r' in signature && 's' in signature)
            return (0,_utils_signature_serializeSignature_js__WEBPACK_IMPORTED_MODULE_14__.serializeSignature)(signature);
        return (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_7__.bytesToHex)(signature);
    })();
    const wrappedSignature = await (async () => {
        // If no `factory` or `factoryData` is provided, it is assumed that the
        // address is not a Smart Account, or the Smart Account is already deployed.
        if (!factory && !factoryData)
            return signatureHex;
        // If the signature is already wrapped, return the signature.
        if ((0,_utils_signature_isErc6492Signature_js__WEBPACK_IMPORTED_MODULE_11__.isErc6492Signature)(signatureHex))
            return signatureHex;
        // If the Smart Account is not deployed, wrap the signature with a 6492 wrapper
        // to perform counterfactual validation.
        return (0,_utils_signature_serializeErc6492Signature_js__WEBPACK_IMPORTED_MODULE_13__.serializeErc6492Signature)({
            address: factory,
            data: factoryData,
            signature: signatureHex,
        });
    })();
    try {
        const args = universalSignatureVerifierAddress
            ? {
                to: universalSignatureVerifierAddress,
                data: (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_9__.encodeFunctionData)({
                    abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.universalSignatureValidatorAbi,
                    functionName: 'isValidSig',
                    args: [address, hash, wrappedSignature],
                }),
                ...rest,
            }
            : {
                data: (0,_utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_3__.encodeDeployData)({
                    abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.universalSignatureValidatorAbi,
                    args: [address, hash, wrappedSignature],
                    bytecode: _constants_contracts_js__WEBPACK_IMPORTED_MODULE_1__.universalSignatureValidatorByteCode,
                }),
                ...rest,
            };
        const { data } = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _call_js__WEBPACK_IMPORTED_MODULE_15__.call, 'call')(args);
        return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_10__.hexToBool)(data ?? '0x0');
    }
    catch (error) {
        // Fallback attempt to verify the signature via ECDSA recovery.
        try {
            const verified = (0,_utils_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_5__.isAddressEqual)((0,_utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_4__.getAddress)(address), await (0,_utils_signature_recoverAddress_js__WEBPACK_IMPORTED_MODULE_12__.recoverAddress)({ hash, signature }));
            if (verified)
                return true;
        }
        catch { }
        if (error instanceof _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__.CallExecutionError) {
            // if the execution fails, the signature was not valid and an internal method inside of the validator reverted
            // this can happen for many reasons, for example if signer can not be recovered from the signature
            // or if the signature has no valid format
            return false;
        }
        throw error;
    }
}
//# sourceMappingURL=verifyHash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/verifyMessage.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/verifyMessage.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   verifyMessage: () => (/* binding */ verifyMessage)
/* harmony export */ });
/* harmony import */ var _utils_signature_hashMessage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/signature/hashMessage.js */ "./node_modules/viem/_esm/utils/signature/hashMessage.js");
/* harmony import */ var _verifyHash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifyHash.js */ "./node_modules/viem/_esm/actions/public/verifyHash.js");


/**
 * Verify that a message was signed by the provided address.
 *
 * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).
 *
 * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}
 *
 * @param client - Client to use.
 * @param parameters - {@link VerifyMessageParameters}
 * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}
 */
async function verifyMessage(client, { address, message, factory, factoryData, signature, ...callRequest }) {
    const hash = (0,_utils_signature_hashMessage_js__WEBPACK_IMPORTED_MODULE_0__.hashMessage)(message);
    return (0,_verifyHash_js__WEBPACK_IMPORTED_MODULE_1__.verifyHash)(client, {
        address,
        factory: factory,
        factoryData: factoryData,
        hash,
        signature,
        ...callRequest,
    });
}
//# sourceMappingURL=verifyMessage.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/verifyTypedData.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/verifyTypedData.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   verifyTypedData: () => (/* binding */ verifyTypedData)
/* harmony export */ });
/* harmony import */ var _utils_signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/signature/hashTypedData.js */ "./node_modules/viem/_esm/utils/signature/hashTypedData.js");
/* harmony import */ var _verifyHash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifyHash.js */ "./node_modules/viem/_esm/actions/public/verifyHash.js");


/**
 * Verify that typed data was signed by the provided address.
 *
 * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}
 *
 * @param client - Client to use.
 * @param parameters - {@link VerifyTypedDataParameters}
 * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}
 */
async function verifyTypedData(client, parameters) {
    const { address, factory, factoryData, signature, message, primaryType, types, domain, ...callRequest } = parameters;
    const hash = (0,_utils_signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_0__.hashTypedData)({ message, primaryType, types, domain });
    return (0,_verifyHash_js__WEBPACK_IMPORTED_MODULE_1__.verifyHash)(client, {
        address,
        factory: factory,
        factoryData: factoryData,
        hash,
        signature,
        ...callRequest,
    });
}
//# sourceMappingURL=verifyTypedData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js":
/*!****************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   waitForTransactionReceipt: () => (/* binding */ waitForTransactionReceipt)
/* harmony export */ });
/* harmony import */ var _errors_block_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/block.js */ "./node_modules/viem/_esm/errors/block.js");
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/observe.js */ "./node_modules/viem/_esm/utils/observe.js");
/* harmony import */ var _utils_promise_withResolvers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/promise/withResolvers.js */ "./node_modules/viem/_esm/utils/promise/withResolvers.js");
/* harmony import */ var _utils_promise_withRetry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/promise/withRetry.js */ "./node_modules/viem/_esm/utils/promise/withRetry.js");
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _getBlock_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getBlock.js */ "./node_modules/viem/_esm/actions/public/getBlock.js");
/* harmony import */ var _getTransaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getTransaction.js */ "./node_modules/viem/_esm/actions/public/getTransaction.js");
/* harmony import */ var _getTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./getTransactionReceipt.js */ "./node_modules/viem/_esm/actions/public/getTransactionReceipt.js");
/* harmony import */ var _watchBlockNumber_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./watchBlockNumber.js */ "./node_modules/viem/_esm/actions/public/watchBlockNumber.js");











/**
 * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt).
 *
 * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt
 * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions
 * - JSON-RPC Methods:
 *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.
 *   - If a Transaction has been replaced:
 *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions
 *     - Checks if one of the Transactions is a replacement
 *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).
 *
 * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).
 *
 * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.
 *
 * There are 3 types of Transaction Replacement reasons:
 *
 * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)
 * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)
 * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)
 *
 * @param client - Client to use
 * @param parameters - {@link WaitForTransactionReceiptParameters}
 * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}
 *
 * @example
 * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const transactionReceipt = await waitForTransactionReceipt(client, {
 *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',
 * })
 */
async function waitForTransactionReceipt(client, parameters) {
    const { checkReplacement = true, confirmations = 1, hash, onReplaced, retryCount = 6, retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff
    timeout = 180_000, } = parameters;
    const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_6__.stringify)(['waitForTransactionReceipt', client.uid, hash]);
    const pollingInterval = (() => {
        if (parameters.pollingInterval)
            return parameters.pollingInterval;
        if (client.chain?.experimental_preconfirmationTime)
            return client.chain.experimental_preconfirmationTime;
        return client.pollingInterval;
    })();
    let transaction;
    let replacedTransaction;
    let receipt;
    let retrying = false;
    // biome-ignore lint/style/useConst:
    let _unobserve;
    let _unwatch;
    const { promise, resolve, reject } = (0,_utils_promise_withResolvers_js__WEBPACK_IMPORTED_MODULE_4__.withResolvers)();
    const timer = timeout
        ? setTimeout(() => {
            _unwatch();
            _unobserve();
            reject(new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.WaitForTransactionReceiptTimeoutError({ hash }));
        }, timeout)
        : undefined;
    _unobserve = (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)(observerId, { onReplaced, resolve, reject }, async (emit) => {
        receipt = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _getTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionReceipt, 'getTransactionReceipt')({ hash }).catch(() => undefined);
        if (receipt && confirmations <= 1) {
            clearTimeout(timer);
            emit.resolve(receipt);
            _unobserve();
            return;
        }
        _unwatch = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _watchBlockNumber_js__WEBPACK_IMPORTED_MODULE_10__.watchBlockNumber, 'watchBlockNumber')({
            emitMissed: true,
            emitOnBegin: true,
            poll: true,
            pollingInterval,
            async onBlockNumber(blockNumber_) {
                const done = (fn) => {
                    clearTimeout(timer);
                    _unwatch();
                    fn();
                    _unobserve();
                };
                let blockNumber = blockNumber_;
                if (retrying)
                    return;
                try {
                    // If we already have a valid receipt, let's check if we have enough
                    // confirmations. If we do, then we can resolve.
                    if (receipt) {
                        if (confirmations > 1 &&
                            (!receipt.blockNumber ||
                                blockNumber - receipt.blockNumber + 1n < confirmations))
                            return;
                        done(() => emit.resolve(receipt));
                        return;
                    }
                    // Get the transaction to check if it's been replaced.
                    // We need to retry as some RPC Providers may be slow to sync
                    // up mined transactions.
                    if (checkReplacement && !transaction) {
                        retrying = true;
                        await (0,_utils_promise_withRetry_js__WEBPACK_IMPORTED_MODULE_5__.withRetry)(async () => {
                            transaction = (await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _getTransaction_js__WEBPACK_IMPORTED_MODULE_8__.getTransaction, 'getTransaction')({ hash }));
                            if (transaction.blockNumber)
                                blockNumber = transaction.blockNumber;
                        }, {
                            delay: retryDelay,
                            retryCount,
                        });
                        retrying = false;
                    }
                    // Get the receipt to check if it's been processed.
                    receipt = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _getTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionReceipt, 'getTransactionReceipt')({ hash });
                    // Check if we have enough confirmations. If not, continue polling.
                    if (confirmations > 1 &&
                        (!receipt.blockNumber ||
                            blockNumber - receipt.blockNumber + 1n < confirmations))
                        return;
                    done(() => emit.resolve(receipt));
                }
                catch (err) {
                    // If the receipt is not found, the transaction will be pending.
                    // We need to check if it has potentially been replaced.
                    if (err instanceof _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.TransactionNotFoundError ||
                        err instanceof _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.TransactionReceiptNotFoundError) {
                        if (!transaction) {
                            retrying = false;
                            return;
                        }
                        try {
                            replacedTransaction = transaction;
                            // Let's retrieve the transactions from the current block.
                            // We need to retry as some RPC Providers may be slow to sync
                            // up mined blocks.
                            retrying = true;
                            const block = await (0,_utils_promise_withRetry_js__WEBPACK_IMPORTED_MODULE_5__.withRetry)(() => (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _getBlock_js__WEBPACK_IMPORTED_MODULE_7__.getBlock, 'getBlock')({
                                blockNumber,
                                includeTransactions: true,
                            }), {
                                delay: retryDelay,
                                retryCount,
                                shouldRetry: ({ error }) => error instanceof _errors_block_js__WEBPACK_IMPORTED_MODULE_0__.BlockNotFoundError,
                            });
                            retrying = false;
                            const replacementTransaction = block.transactions.find(({ from, nonce }) => from === replacedTransaction.from &&
                                nonce === replacedTransaction.nonce);
                            // If we couldn't find a replacement transaction, continue polling.
                            if (!replacementTransaction)
                                return;
                            // If we found a replacement transaction, return it's receipt.
                            receipt = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, _getTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionReceipt, 'getTransactionReceipt')({
                                hash: replacementTransaction.hash,
                            });
                            // Check if we have enough confirmations. If not, continue polling.
                            if (confirmations > 1 &&
                                (!receipt.blockNumber ||
                                    blockNumber - receipt.blockNumber + 1n < confirmations))
                                return;
                            let reason = 'replaced';
                            if (replacementTransaction.to === replacedTransaction.to &&
                                replacementTransaction.value === replacedTransaction.value &&
                                replacementTransaction.input === replacedTransaction.input) {
                                reason = 'repriced';
                            }
                            else if (replacementTransaction.from === replacementTransaction.to &&
                                replacementTransaction.value === 0n) {
                                reason = 'cancelled';
                            }
                            done(() => {
                                emit.onReplaced?.({
                                    reason,
                                    replacedTransaction: replacedTransaction,
                                    transaction: replacementTransaction,
                                    transactionReceipt: receipt,
                                });
                                emit.resolve(receipt);
                            });
                        }
                        catch (err_) {
                            done(() => emit.reject(err_));
                        }
                    }
                    else {
                        done(() => emit.reject(err));
                    }
                }
            },
        });
    });
    return promise;
}
//# sourceMappingURL=waitForTransactionReceipt.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/watchBlockNumber.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/watchBlockNumber.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchBlockNumber: () => (/* binding */ watchBlockNumber)
/* harmony export */ });
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_observe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/observe.js */ "./node_modules/viem/_esm/utils/observe.js");
/* harmony import */ var _utils_poll_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/poll.js */ "./node_modules/viem/_esm/utils/poll.js");
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _getBlockNumber_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getBlockNumber.js */ "./node_modules/viem/_esm/actions/public/getBlockNumber.js");






/**
 * Watches and returns incoming block numbers.
 *
 * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks
 * - JSON-RPC Methods:
 *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.
 *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `"newHeads"` event.
 *
 * @param client - Client to use
 * @param parameters - {@link WatchBlockNumberParameters}
 * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}
 *
 * @example
 * import { createPublicClient, watchBlockNumber, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const unwatch = watchBlockNumber(client, {
 *   onBlockNumber: (blockNumber) => console.log(blockNumber),
 * })
 */
function watchBlockNumber(client, { emitOnBegin = false, emitMissed = false, onBlockNumber, onError, poll: poll_, pollingInterval = client.pollingInterval, }) {
    const enablePolling = (() => {
        if (typeof poll_ !== 'undefined')
            return poll_;
        if (client.transport.type === 'webSocket' ||
            client.transport.type === 'ipc')
            return false;
        if (client.transport.type === 'fallback' &&
            (client.transport.transports[0].config.type === 'webSocket' ||
                client.transport.transports[0].config.type === 'ipc'))
            return false;
        return true;
    })();
    let prevBlockNumber;
    const pollBlockNumber = () => {
        const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_4__.stringify)([
            'watchBlockNumber',
            client.uid,
            emitOnBegin,
            emitMissed,
            pollingInterval,
        ]);
        return (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_2__.observe)(observerId, { onBlockNumber, onError }, (emit) => (0,_utils_poll_js__WEBPACK_IMPORTED_MODULE_3__.poll)(async () => {
            try {
                const blockNumber = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, _getBlockNumber_js__WEBPACK_IMPORTED_MODULE_5__.getBlockNumber, 'getBlockNumber')({ cacheTime: 0 });
                if (prevBlockNumber) {
                    // If the current block number is the same as the previous,
                    // we can skip.
                    if (blockNumber === prevBlockNumber)
                        return;
                    // If we have missed out on some previous blocks, and the
                    // `emitMissed` flag is truthy, let's emit those blocks.
                    if (blockNumber - prevBlockNumber > 1 && emitMissed) {
                        for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {
                            emit.onBlockNumber(i, prevBlockNumber);
                            prevBlockNumber = i;
                        }
                    }
                }
                // If the next block number is greater than the previous,
                // it is not in the past, and we can emit the new block number.
                if (!prevBlockNumber || blockNumber > prevBlockNumber) {
                    emit.onBlockNumber(blockNumber, prevBlockNumber);
                    prevBlockNumber = blockNumber;
                }
            }
            catch (err) {
                emit.onError?.(err);
            }
        }, {
            emitOnBegin,
            interval: pollingInterval,
        }));
    };
    const subscribeBlockNumber = () => {
        const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_4__.stringify)([
            'watchBlockNumber',
            client.uid,
            emitOnBegin,
            emitMissed,
        ]);
        return (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_2__.observe)(observerId, { onBlockNumber, onError }, (emit) => {
            let active = true;
            let unsubscribe = () => (active = false);
            (async () => {
                try {
                    const transport = (() => {
                        if (client.transport.type === 'fallback') {
                            const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket' ||
                                transport.config.type === 'ipc');
                            if (!transport)
                                return client.transport;
                            return transport.value;
                        }
                        return client.transport;
                    })();
                    const { unsubscribe: unsubscribe_ } = await transport.subscribe({
                        params: ['newHeads'],
                        onData(data) {
                            if (!active)
                                return;
                            const blockNumber = (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToBigInt)(data.result?.number);
                            emit.onBlockNumber(blockNumber, prevBlockNumber);
                            prevBlockNumber = blockNumber;
                        },
                        onError(error) {
                            emit.onError?.(error);
                        },
                    });
                    unsubscribe = unsubscribe_;
                    if (!active)
                        unsubscribe();
                }
                catch (err) {
                    onError?.(err);
                }
            })();
            return () => unsubscribe();
        });
    };
    return enablePolling ? pollBlockNumber() : subscribeBlockNumber();
}
//# sourceMappingURL=watchBlockNumber.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/watchBlocks.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/watchBlocks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchBlocks: () => (/* binding */ watchBlocks)
/* harmony export */ });
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_observe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/observe.js */ "./node_modules/viem/_esm/utils/observe.js");
/* harmony import */ var _utils_poll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/poll.js */ "./node_modules/viem/_esm/utils/poll.js");
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _getBlock_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getBlock.js */ "./node_modules/viem/_esm/actions/public/getBlock.js");





/**
 * Watches and returns information for incoming blocks.
 *
 * - Docs: https://viem.sh/docs/actions/public/watchBlocks
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks
 * - JSON-RPC Methods:
 *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.
 *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `"newHeads"` event.
 *
 * @param client - Client to use
 * @param parameters - {@link WatchBlocksParameters}
 * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}
 *
 * @example
 * import { createPublicClient, watchBlocks, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const unwatch = watchBlocks(client, {
 *   onBlock: (block) => console.log(block),
 * })
 */
function watchBlocks(client, { blockTag = client.experimental_blockTag ?? 'latest', emitMissed = false, emitOnBegin = false, onBlock, onError, includeTransactions: includeTransactions_, poll: poll_, pollingInterval = client.pollingInterval, }) {
    const enablePolling = (() => {
        if (typeof poll_ !== 'undefined')
            return poll_;
        if (client.transport.type === 'webSocket' ||
            client.transport.type === 'ipc')
            return false;
        if (client.transport.type === 'fallback' &&
            (client.transport.transports[0].config.type === 'webSocket' ||
                client.transport.transports[0].config.type === 'ipc'))
            return false;
        return true;
    })();
    const includeTransactions = includeTransactions_ ?? false;
    let prevBlock;
    const pollBlocks = () => {
        const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_3__.stringify)([
            'watchBlocks',
            client.uid,
            blockTag,
            emitMissed,
            emitOnBegin,
            includeTransactions,
            pollingInterval,
        ]);
        return (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_1__.observe)(observerId, { onBlock, onError }, (emit) => (0,_utils_poll_js__WEBPACK_IMPORTED_MODULE_2__.poll)(async () => {
            try {
                const block = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _getBlock_js__WEBPACK_IMPORTED_MODULE_4__.getBlock, 'getBlock')({
                    blockTag,
                    includeTransactions,
                });
                if (block.number !== null && prevBlock?.number != null) {
                    // If the current block number is the same as the previous,
                    // we can skip.
                    if (block.number === prevBlock.number)
                        return;
                    // If we have missed out on some previous blocks, and the
                    // `emitMissed` flag is truthy, let's emit those blocks.
                    if (block.number - prevBlock.number > 1 && emitMissed) {
                        for (let i = prevBlock?.number + 1n; i < block.number; i++) {
                            const block = (await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _getBlock_js__WEBPACK_IMPORTED_MODULE_4__.getBlock, 'getBlock')({
                                blockNumber: i,
                                includeTransactions,
                            }));
                            emit.onBlock(block, prevBlock);
                            prevBlock = block;
                        }
                    }
                }
                if (
                // If no previous block exists, emit.
                prevBlock?.number == null ||
                    // If the block tag is "pending" with no block number, emit.
                    (blockTag === 'pending' && block?.number == null) ||
                    // If the next block number is greater than the previous block number, emit.
                    // We don't want to emit blocks in the past.
                    (block.number !== null && block.number > prevBlock.number)) {
                    emit.onBlock(block, prevBlock);
                    prevBlock = block;
                }
            }
            catch (err) {
                emit.onError?.(err);
            }
        }, {
            emitOnBegin,
            interval: pollingInterval,
        }));
    };
    const subscribeBlocks = () => {
        let active = true;
        let emitFetched = true;
        let unsubscribe = () => (active = false);
        (async () => {
            try {
                if (emitOnBegin) {
                    (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _getBlock_js__WEBPACK_IMPORTED_MODULE_4__.getBlock, 'getBlock')({
                        blockTag,
                        includeTransactions,
                    })
                        .then((block) => {
                        if (!active)
                            return;
                        if (!emitFetched)
                            return;
                        onBlock(block, undefined);
                        emitFetched = false;
                    })
                        .catch(onError);
                }
                const transport = (() => {
                    if (client.transport.type === 'fallback') {
                        const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket' ||
                            transport.config.type === 'ipc');
                        if (!transport)
                            return client.transport;
                        return transport.value;
                    }
                    return client.transport;
                })();
                const { unsubscribe: unsubscribe_ } = await transport.subscribe({
                    params: ['newHeads'],
                    async onData(data) {
                        if (!active)
                            return;
                        const block = (await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _getBlock_js__WEBPACK_IMPORTED_MODULE_4__.getBlock, 'getBlock')({
                            blockNumber: data.result?.number,
                            includeTransactions,
                        }).catch(() => { }));
                        if (!active)
                            return;
                        onBlock(block, prevBlock);
                        emitFetched = false;
                        prevBlock = block;
                    },
                    onError(error) {
                        onError?.(error);
                    },
                });
                unsubscribe = unsubscribe_;
                if (!active)
                    unsubscribe();
            }
            catch (err) {
                onError?.(err);
            }
        })();
        return () => unsubscribe();
    };
    return enablePolling ? pollBlocks() : subscribeBlocks();
}
//# sourceMappingURL=watchBlocks.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/watchContractEvent.js":
/*!*********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/watchContractEvent.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchContractEvent: () => (/* binding */ watchContractEvent)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/rpc.js */ "./node_modules/viem/_esm/errors/rpc.js");
/* harmony import */ var _utils_abi_decodeEventLog_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/abi/decodeEventLog.js */ "./node_modules/viem/_esm/utils/abi/decodeEventLog.js");
/* harmony import */ var _utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/abi/encodeEventTopics.js */ "./node_modules/viem/_esm/utils/abi/encodeEventTopics.js");
/* harmony import */ var _utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/formatters/log.js */ "./node_modules/viem/_esm/utils/formatters/log.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_observe_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/observe.js */ "./node_modules/viem/_esm/utils/observe.js");
/* harmony import */ var _utils_poll_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/poll.js */ "./node_modules/viem/_esm/utils/poll.js");
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _createContractEventFilter_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createContractEventFilter.js */ "./node_modules/viem/_esm/actions/public/createContractEventFilter.js");
/* harmony import */ var _getBlockNumber_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getBlockNumber.js */ "./node_modules/viem/_esm/actions/public/getBlockNumber.js");
/* harmony import */ var _getContractEvents_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./getContractEvents.js */ "./node_modules/viem/_esm/actions/public/getContractEvents.js");
/* harmony import */ var _getFilterChanges_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./getFilterChanges.js */ "./node_modules/viem/_esm/actions/public/getFilterChanges.js");
/* harmony import */ var _uninstallFilter_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./uninstallFilter.js */ "./node_modules/viem/_esm/actions/public/uninstallFilter.js");














/**
 * Watches and returns emitted contract event logs.
 *
 * - Docs: https://viem.sh/docs/contract/watchContractEvent
 *
 * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).
 *
 * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.
 *
 * @param client - Client to use
 * @param parameters - {@link WatchContractEventParameters}
 * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}
 *
 * @example
 * import { createPublicClient, http, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { watchContractEvent } from 'viem/contract'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const unwatch = watchContractEvent(client, {
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),
 *   eventName: 'Transfer',
 *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },
 *   onLogs: (logs) => console.log(logs),
 * })
 */
function watchContractEvent(client, parameters) {
    const { abi, address, args, batch = true, eventName, fromBlock, onError, onLogs, poll: poll_, pollingInterval = client.pollingInterval, strict: strict_, } = parameters;
    const enablePolling = (() => {
        if (typeof poll_ !== 'undefined')
            return poll_;
        if (typeof fromBlock === 'bigint')
            return true;
        if (client.transport.type === 'webSocket' ||
            client.transport.type === 'ipc')
            return false;
        if (client.transport.type === 'fallback' &&
            (client.transport.transports[0].config.type === 'webSocket' ||
                client.transport.transports[0].config.type === 'ipc'))
            return false;
        return true;
    })();
    const pollContractEvent = () => {
        const strict = strict_ ?? false;
        const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_8__.stringify)([
            'watchContractEvent',
            address,
            args,
            batch,
            client.uid,
            eventName,
            pollingInterval,
            strict,
            fromBlock,
        ]);
        return (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_6__.observe)(observerId, { onLogs, onError }, (emit) => {
            let previousBlockNumber;
            if (fromBlock !== undefined)
                previousBlockNumber = fromBlock - 1n;
            let filter;
            let initialized = false;
            const unwatch = (0,_utils_poll_js__WEBPACK_IMPORTED_MODULE_7__.poll)(async () => {
                if (!initialized) {
                    try {
                        filter = (await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__.getAction)(client, _createContractEventFilter_js__WEBPACK_IMPORTED_MODULE_9__.createContractEventFilter, 'createContractEventFilter')({
                            abi,
                            address,
                            args: args,
                            eventName: eventName,
                            strict: strict,
                            fromBlock,
                        }));
                    }
                    catch { }
                    initialized = true;
                    return;
                }
                try {
                    let logs;
                    if (filter) {
                        logs = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__.getAction)(client, _getFilterChanges_js__WEBPACK_IMPORTED_MODULE_12__.getFilterChanges, 'getFilterChanges')({ filter });
                    }
                    else {
                        // If the filter doesn't exist, we will fall back to use `getLogs`.
                        // The fall back exists because some RPC Providers do not support filters.
                        // Fetch the block number to use for `getLogs`.
                        const blockNumber = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__.getAction)(client, _getBlockNumber_js__WEBPACK_IMPORTED_MODULE_10__.getBlockNumber, 'getBlockNumber')({});
                        // If the block number has changed, we will need to fetch the logs.
                        // If the block number doesn't exist, we are yet to reach the first poll interval,
                        // so do not emit any logs.
                        if (previousBlockNumber && previousBlockNumber < blockNumber) {
                            logs = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__.getAction)(client, _getContractEvents_js__WEBPACK_IMPORTED_MODULE_11__.getContractEvents, 'getContractEvents')({
                                abi,
                                address,
                                args,
                                eventName,
                                fromBlock: previousBlockNumber + 1n,
                                toBlock: blockNumber,
                                strict,
                            });
                        }
                        else {
                            logs = [];
                        }
                        previousBlockNumber = blockNumber;
                    }
                    if (logs.length === 0)
                        return;
                    if (batch)
                        emit.onLogs(logs);
                    else
                        for (const log of logs)
                            emit.onLogs([log]);
                }
                catch (err) {
                    // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.
                    // Reinitialize the filter when this occurs
                    if (filter && err instanceof _errors_rpc_js__WEBPACK_IMPORTED_MODULE_1__.InvalidInputRpcError)
                        initialized = false;
                    emit.onError?.(err);
                }
            }, {
                emitOnBegin: true,
                interval: pollingInterval,
            });
            return async () => {
                if (filter)
                    await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__.getAction)(client, _uninstallFilter_js__WEBPACK_IMPORTED_MODULE_13__.uninstallFilter, 'uninstallFilter')({ filter });
                unwatch();
            };
        });
    };
    const subscribeContractEvent = () => {
        const strict = strict_ ?? false;
        const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_8__.stringify)([
            'watchContractEvent',
            address,
            args,
            batch,
            client.uid,
            eventName,
            pollingInterval,
            strict,
        ]);
        let active = true;
        let unsubscribe = () => (active = false);
        return (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_6__.observe)(observerId, { onLogs, onError }, (emit) => {
            ;
            (async () => {
                try {
                    const transport = (() => {
                        if (client.transport.type === 'fallback') {
                            const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket' ||
                                transport.config.type === 'ipc');
                            if (!transport)
                                return client.transport;
                            return transport.value;
                        }
                        return client.transport;
                    })();
                    const topics = eventName
                        ? (0,_utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_3__.encodeEventTopics)({
                            abi: abi,
                            eventName: eventName,
                            args,
                        })
                        : [];
                    const { unsubscribe: unsubscribe_ } = await transport.subscribe({
                        params: ['logs', { address, topics }],
                        onData(data) {
                            if (!active)
                                return;
                            const log = data.result;
                            try {
                                const { eventName, args } = (0,_utils_abi_decodeEventLog_js__WEBPACK_IMPORTED_MODULE_2__.decodeEventLog)({
                                    abi: abi,
                                    data: log.data,
                                    topics: log.topics,
                                    strict: strict_,
                                });
                                const formatted = (0,_utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_4__.formatLog)(log, {
                                    args,
                                    eventName: eventName,
                                });
                                emit.onLogs([formatted]);
                            }
                            catch (err) {
                                let eventName;
                                let isUnnamed;
                                if (err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.DecodeLogDataMismatch ||
                                    err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.DecodeLogTopicsMismatch) {
                                    // If strict mode is on, and log data/topics do not match event definition, skip.
                                    if (strict_)
                                        return;
                                    eventName = err.abiItem.name;
                                    isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));
                                }
                                // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).
                                const formatted = (0,_utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_4__.formatLog)(log, {
                                    args: isUnnamed ? [] : {},
                                    eventName,
                                });
                                emit.onLogs([formatted]);
                            }
                        },
                        onError(error) {
                            emit.onError?.(error);
                        },
                    });
                    unsubscribe = unsubscribe_;
                    if (!active)
                        unsubscribe();
                }
                catch (err) {
                    onError?.(err);
                }
            })();
            return () => unsubscribe();
        });
    };
    return enablePolling ? pollContractEvent() : subscribeContractEvent();
}
//# sourceMappingURL=watchContractEvent.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/watchEvent.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/watchEvent.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchEvent: () => (/* binding */ watchEvent)
/* harmony export */ });
/* harmony import */ var _utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/encodeEventTopics.js */ "./node_modules/viem/_esm/utils/abi/encodeEventTopics.js");
/* harmony import */ var _utils_observe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/observe.js */ "./node_modules/viem/_esm/utils/observe.js");
/* harmony import */ var _utils_poll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/poll.js */ "./node_modules/viem/_esm/utils/poll.js");
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_rpc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../errors/rpc.js */ "./node_modules/viem/_esm/errors/rpc.js");
/* harmony import */ var _utils_abi_decodeEventLog_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/abi/decodeEventLog.js */ "./node_modules/viem/_esm/utils/abi/decodeEventLog.js");
/* harmony import */ var _utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/formatters/log.js */ "./node_modules/viem/_esm/utils/formatters/log.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _createEventFilter_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createEventFilter.js */ "./node_modules/viem/_esm/actions/public/createEventFilter.js");
/* harmony import */ var _getBlockNumber_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getBlockNumber.js */ "./node_modules/viem/_esm/actions/public/getBlockNumber.js");
/* harmony import */ var _getFilterChanges_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./getFilterChanges.js */ "./node_modules/viem/_esm/actions/public/getFilterChanges.js");
/* harmony import */ var _getLogs_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./getLogs.js */ "./node_modules/viem/_esm/actions/public/getLogs.js");
/* harmony import */ var _uninstallFilter_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./uninstallFilter.js */ "./node_modules/viem/_esm/actions/public/uninstallFilter.js");














/**
 * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).
 *
 * - Docs: https://viem.sh/docs/actions/public/watchEvent
 * - JSON-RPC Methods:
 *   - **RPC Provider supports `eth_newFilter`:**
 *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).
 *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).
 *   - **RPC Provider does not support `eth_newFilter`:**
 *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.
 *
 * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).
 *
 * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.
 *
 * @param client - Client to use
 * @param parameters - {@link WatchEventParameters}
 * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { watchEvent } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const unwatch = watchEvent(client, {
 *   onLogs: (logs) => console.log(logs),
 * })
 */
function watchEvent(client, { address, args, batch = true, event, events, fromBlock, onError, onLogs, poll: poll_, pollingInterval = client.pollingInterval, strict: strict_, }) {
    const enablePolling = (() => {
        if (typeof poll_ !== 'undefined')
            return poll_;
        if (typeof fromBlock === 'bigint')
            return true;
        if (client.transport.type === 'webSocket' ||
            client.transport.type === 'ipc')
            return false;
        if (client.transport.type === 'fallback' &&
            (client.transport.transports[0].config.type === 'webSocket' ||
                client.transport.transports[0].config.type === 'ipc'))
            return false;
        return true;
    })();
    const strict = strict_ ?? false;
    const pollEvent = () => {
        const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_3__.stringify)([
            'watchEvent',
            address,
            args,
            batch,
            client.uid,
            event,
            pollingInterval,
            fromBlock,
        ]);
        return (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_1__.observe)(observerId, { onLogs, onError }, (emit) => {
            let previousBlockNumber;
            if (fromBlock !== undefined)
                previousBlockNumber = fromBlock - 1n;
            let filter;
            let initialized = false;
            const unwatch = (0,_utils_poll_js__WEBPACK_IMPORTED_MODULE_2__.poll)(async () => {
                if (!initialized) {
                    try {
                        filter = (await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _createEventFilter_js__WEBPACK_IMPORTED_MODULE_9__.createEventFilter, 'createEventFilter')({
                            address,
                            args,
                            event: event,
                            events,
                            strict,
                            fromBlock,
                        }));
                    }
                    catch { }
                    initialized = true;
                    return;
                }
                try {
                    let logs;
                    if (filter) {
                        logs = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _getFilterChanges_js__WEBPACK_IMPORTED_MODULE_11__.getFilterChanges, 'getFilterChanges')({ filter });
                    }
                    else {
                        // If the filter doesn't exist, we will fall back to use `getLogs`.
                        // The fall back exists because some RPC Providers do not support filters.
                        // Fetch the block number to use for `getLogs`.
                        const blockNumber = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _getBlockNumber_js__WEBPACK_IMPORTED_MODULE_10__.getBlockNumber, 'getBlockNumber')({});
                        // If the block number has changed, we will need to fetch the logs.
                        // If the block number doesn't exist, we are yet to reach the first poll interval,
                        // so do not emit any logs.
                        if (previousBlockNumber && previousBlockNumber !== blockNumber) {
                            logs = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _getLogs_js__WEBPACK_IMPORTED_MODULE_12__.getLogs, 'getLogs')({
                                address,
                                args,
                                event: event,
                                events,
                                fromBlock: previousBlockNumber + 1n,
                                toBlock: blockNumber,
                            });
                        }
                        else {
                            logs = [];
                        }
                        previousBlockNumber = blockNumber;
                    }
                    if (logs.length === 0)
                        return;
                    if (batch)
                        emit.onLogs(logs);
                    else
                        for (const log of logs)
                            emit.onLogs([log]);
                }
                catch (err) {
                    // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.
                    // Reinitialize the filter when this occurs
                    if (filter && err instanceof _errors_rpc_js__WEBPACK_IMPORTED_MODULE_5__.InvalidInputRpcError)
                        initialized = false;
                    emit.onError?.(err);
                }
            }, {
                emitOnBegin: true,
                interval: pollingInterval,
            });
            return async () => {
                if (filter)
                    await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _uninstallFilter_js__WEBPACK_IMPORTED_MODULE_13__.uninstallFilter, 'uninstallFilter')({ filter });
                unwatch();
            };
        });
    };
    const subscribeEvent = () => {
        let active = true;
        let unsubscribe = () => (active = false);
        (async () => {
            try {
                const transport = (() => {
                    if (client.transport.type === 'fallback') {
                        const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket' ||
                            transport.config.type === 'ipc');
                        if (!transport)
                            return client.transport;
                        return transport.value;
                    }
                    return client.transport;
                })();
                const events_ = events ?? (event ? [event] : undefined);
                let topics = [];
                if (events_) {
                    const encoded = events_.flatMap((event) => (0,_utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_0__.encodeEventTopics)({
                        abi: [event],
                        eventName: event.name,
                        args,
                    }));
                    // TODO: Clean up type casting
                    topics = [encoded];
                    if (event)
                        topics = topics[0];
                }
                const { unsubscribe: unsubscribe_ } = await transport.subscribe({
                    params: ['logs', { address, topics }],
                    onData(data) {
                        if (!active)
                            return;
                        const log = data.result;
                        try {
                            const { eventName, args } = (0,_utils_abi_decodeEventLog_js__WEBPACK_IMPORTED_MODULE_6__.decodeEventLog)({
                                abi: events_ ?? [],
                                data: log.data,
                                topics: log.topics,
                                strict,
                            });
                            const formatted = (0,_utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_7__.formatLog)(log, { args, eventName });
                            onLogs([formatted]);
                        }
                        catch (err) {
                            let eventName;
                            let isUnnamed;
                            if (err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_4__.DecodeLogDataMismatch ||
                                err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_4__.DecodeLogTopicsMismatch) {
                                // If strict mode is on, and log data/topics do not match event definition, skip.
                                if (strict_)
                                    return;
                                eventName = err.abiItem.name;
                                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));
                            }
                            // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).
                            const formatted = (0,_utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_7__.formatLog)(log, {
                                args: isUnnamed ? [] : {},
                                eventName,
                            });
                            onLogs([formatted]);
                        }
                    },
                    onError(error) {
                        onError?.(error);
                    },
                });
                unsubscribe = unsubscribe_;
                if (!active)
                    unsubscribe();
            }
            catch (err) {
                onError?.(err);
            }
        })();
        return () => unsubscribe();
    };
    return enablePolling ? pollEvent() : subscribeEvent();
}
//# sourceMappingURL=watchEvent.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/public/watchPendingTransactions.js":
/*!***************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/public/watchPendingTransactions.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchPendingTransactions: () => (/* binding */ watchPendingTransactions)
/* harmony export */ });
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_observe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/observe.js */ "./node_modules/viem/_esm/utils/observe.js");
/* harmony import */ var _utils_poll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/poll.js */ "./node_modules/viem/_esm/utils/poll.js");
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _createPendingTransactionFilter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createPendingTransactionFilter.js */ "./node_modules/viem/_esm/actions/public/createPendingTransactionFilter.js");
/* harmony import */ var _getFilterChanges_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getFilterChanges.js */ "./node_modules/viem/_esm/actions/public/getFilterChanges.js");
/* harmony import */ var _uninstallFilter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./uninstallFilter.js */ "./node_modules/viem/_esm/actions/public/uninstallFilter.js");







/**
 * Watches and returns pending transaction hashes.
 *
 * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions
 * - JSON-RPC Methods:
 *   - When `poll: true`
 *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.
 *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.
 *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `"newPendingTransactions"` event.
 *
 * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).
 *
 * @param client - Client to use
 * @param parameters - {@link WatchPendingTransactionsParameters}
 * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { watchPendingTransactions } from 'viem/public'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const unwatch = await watchPendingTransactions(client, {
 *   onTransactions: (hashes) => console.log(hashes),
 * })
 */
function watchPendingTransactions(client, { batch = true, onError, onTransactions, poll: poll_, pollingInterval = client.pollingInterval, }) {
    const enablePolling = typeof poll_ !== 'undefined'
        ? poll_
        : client.transport.type !== 'webSocket' && client.transport.type !== 'ipc';
    const pollPendingTransactions = () => {
        const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_3__.stringify)([
            'watchPendingTransactions',
            client.uid,
            batch,
            pollingInterval,
        ]);
        return (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_1__.observe)(observerId, { onTransactions, onError }, (emit) => {
            let filter;
            const unwatch = (0,_utils_poll_js__WEBPACK_IMPORTED_MODULE_2__.poll)(async () => {
                try {
                    if (!filter) {
                        try {
                            filter = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _createPendingTransactionFilter_js__WEBPACK_IMPORTED_MODULE_4__.createPendingTransactionFilter, 'createPendingTransactionFilter')({});
                            return;
                        }
                        catch (err) {
                            unwatch();
                            throw err;
                        }
                    }
                    const hashes = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _getFilterChanges_js__WEBPACK_IMPORTED_MODULE_5__.getFilterChanges, 'getFilterChanges')({ filter });
                    if (hashes.length === 0)
                        return;
                    if (batch)
                        emit.onTransactions(hashes);
                    else
                        for (const hash of hashes)
                            emit.onTransactions([hash]);
                }
                catch (err) {
                    emit.onError?.(err);
                }
            }, {
                emitOnBegin: true,
                interval: pollingInterval,
            });
            return async () => {
                if (filter)
                    await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, _uninstallFilter_js__WEBPACK_IMPORTED_MODULE_6__.uninstallFilter, 'uninstallFilter')({ filter });
                unwatch();
            };
        });
    };
    const subscribePendingTransactions = () => {
        let active = true;
        let unsubscribe = () => (active = false);
        (async () => {
            try {
                const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({
                    params: ['newPendingTransactions'],
                    onData(data) {
                        if (!active)
                            return;
                        const transaction = data.result;
                        onTransactions([transaction]);
                    },
                    onError(error) {
                        onError?.(error);
                    },
                });
                unsubscribe = unsubscribe_;
                if (!active)
                    unsubscribe();
            }
            catch (err) {
                onError?.(err);
            }
        })();
        return () => unsubscribe();
    };
    return enablePolling
        ? pollPendingTransactions()
        : subscribePendingTransactions();
}
//# sourceMappingURL=watchPendingTransactions.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/siwe/verifySiweMessage.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/siwe/verifySiweMessage.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   verifySiweMessage: () => (/* binding */ verifySiweMessage)
/* harmony export */ });
/* harmony import */ var _utils_signature_hashMessage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/signature/hashMessage.js */ "./node_modules/viem/_esm/utils/signature/hashMessage.js");
/* harmony import */ var _utils_siwe_parseSiweMessage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/siwe/parseSiweMessage.js */ "./node_modules/viem/_esm/utils/siwe/parseSiweMessage.js");
/* harmony import */ var _utils_siwe_validateSiweMessage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/siwe/validateSiweMessage.js */ "./node_modules/viem/_esm/utils/siwe/validateSiweMessage.js");
/* harmony import */ var _public_verifyHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../public/verifyHash.js */ "./node_modules/viem/_esm/actions/public/verifyHash.js");




/**
 * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.
 *
 * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).
 *
 * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}
 *
 * @param client - Client to use.
 * @param parameters - {@link VerifySiweMessageParameters}
 * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}
 */
async function verifySiweMessage(client, parameters) {
    const { address, domain, message, nonce, scheme, signature, time = new Date(), ...callRequest } = parameters;
    const parsed = (0,_utils_siwe_parseSiweMessage_js__WEBPACK_IMPORTED_MODULE_1__.parseSiweMessage)(message);
    if (!parsed.address)
        return false;
    const isValid = (0,_utils_siwe_validateSiweMessage_js__WEBPACK_IMPORTED_MODULE_2__.validateSiweMessage)({
        address,
        domain,
        message: parsed,
        nonce,
        scheme,
        time,
    });
    if (!isValid)
        return false;
    const hash = (0,_utils_signature_hashMessage_js__WEBPACK_IMPORTED_MODULE_0__.hashMessage)(message);
    return (0,_public_verifyHash_js__WEBPACK_IMPORTED_MODULE_3__.verifyHash)(client, {
        address: parsed.address,
        hash,
        signature,
        ...callRequest,
    });
}
//# sourceMappingURL=verifySiweMessage.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/dropTransaction.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/dropTransaction.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   dropTransaction: () => (/* binding */ dropTransaction)
/* harmony export */ });
/**
 * Removes a transaction from the mempool.
 *
 * - Docs: https://viem.sh/docs/actions/test/dropTransaction
 *
 * @param client - Client to use
 * @param parameters - {@link DropTransactionParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { dropTransaction } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await dropTransaction(client, {
 *   hash: '0xe58dceb6b20b03965bb678e27d141e151d7d4efc2334c2d6a49b9fac523f7364'
 * })
 */
async function dropTransaction(client, { hash }) {
    await client.request({
        method: `${client.mode}_dropTransaction`,
        params: [hash],
    });
}
//# sourceMappingURL=dropTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/dumpState.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/dumpState.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   dumpState: () => (/* binding */ dumpState)
/* harmony export */ });
/**
 * Serializes the current state (including contracts code, contract's storage,
 * accounts properties, etc.) into a savable data blob.
 *
 * - Docs: https://viem.sh/docs/actions/test/dumpState
 *
 * @param client - Client to use
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { dumpState } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await dumpState(client)
 */
async function dumpState(client) {
    return client.request({
        method: `${client.mode}_dumpState`,
    });
}
//# sourceMappingURL=dumpState.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/getAutomine.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/getAutomine.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAutomine: () => (/* binding */ getAutomine)
/* harmony export */ });
/**
 * Returns the automatic mining status of the node.
 *
 * - Docs: https://viem.sh/docs/actions/test/getAutomine
 *
 * @param client - Client to use
 * @returns Whether or not the node is auto mining. {@link GetAutomineReturnType}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { getAutomine } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * const isAutomining = await getAutomine(client)
 */
async function getAutomine(client) {
    if (client.mode === 'ganache')
        return await client.request({
            method: 'eth_mining',
        });
    return await client.request({
        method: `${client.mode}_getAutomine`,
    });
}
//# sourceMappingURL=getAutomine.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/getTxpoolContent.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/getTxpoolContent.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTxpoolContent: () => (/* binding */ getTxpoolContent)
/* harmony export */ });
/**
 * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.
 *
 * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent
 *
 * @param client - Client to use
 * @returns Transaction pool content. {@link GetTxpoolContentReturnType}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { getTxpoolContent } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * const content = await getTxpoolContent(client)
 */
async function getTxpoolContent(client) {
    return await client.request({
        method: 'txpool_content',
    });
}
//# sourceMappingURL=getTxpoolContent.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/getTxpoolStatus.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/getTxpoolStatus.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTxpoolStatus: () => (/* binding */ getTxpoolStatus)
/* harmony export */ });
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");

/**
 * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.
 *
 * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus
 *
 * @param client - Client to use
 * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { getTxpoolStatus } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * const status = await getTxpoolStatus(client)
 */
async function getTxpoolStatus(client) {
    const { pending, queued } = await client.request({
        method: 'txpool_status',
    });
    return {
        pending: (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(pending),
        queued: (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(queued),
    };
}
//# sourceMappingURL=getTxpoolStatus.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/impersonateAccount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/impersonateAccount.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   impersonateAccount: () => (/* binding */ impersonateAccount)
/* harmony export */ });
/**
 * Impersonate an account or contract address. This lets you send transactions from that account even if you don't have access to its private key.
 *
 * - Docs: https://viem.sh/docs/actions/test/impersonateAccount
 *
 * @param client - Client to use
 * @param parameters - {@link ImpersonateAccountParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { impersonateAccount } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * const content = await impersonateAccount(client, {
 *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 * })
 */
async function impersonateAccount(client, { address }) {
    await client.request({
        method: `${client.mode}_impersonateAccount`,
        params: [address],
    });
}
//# sourceMappingURL=impersonateAccount.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/increaseTime.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/increaseTime.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   increaseTime: () => (/* binding */ increaseTime)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Jump forward in time by the given amount of time, in seconds.
 *
 * - Docs: https://viem.sh/docs/actions/test/increaseTime
 *
 * @param client - Client to use
 * @param parameters – {@link IncreaseTimeParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { increaseTime } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await increaseTime(client, {
 *   seconds: 420,
 * })
 */
async function increaseTime(client, { seconds }) {
    return await client.request({
        method: 'evm_increaseTime',
        params: [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(seconds)],
    });
}
//# sourceMappingURL=increaseTime.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/inspectTxpool.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/inspectTxpool.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   inspectTxpool: () => (/* binding */ inspectTxpool)
/* harmony export */ });
/**
 * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.
 *
 * - Docs: https://viem.sh/docs/actions/test/inspectTxpool
 *
 * @param client - Client to use
 * @returns Transaction pool inspection data. {@link InspectTxpoolReturnType}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { inspectTxpool } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * const data = await inspectTxpool(client)
 */
async function inspectTxpool(client) {
    return await client.request({
        method: 'txpool_inspect',
    });
}
//# sourceMappingURL=inspectTxpool.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/loadState.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/loadState.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   loadState: () => (/* binding */ loadState)
/* harmony export */ });
/**
 * Adds state previously dumped with `dumpState` to the current chain.
 *
 * - Docs: https://viem.sh/docs/actions/test/loadState
 *
 * @param client - Client to use
 * @param parameters - {@link LoadStateParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { loadState } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await loadState(client, { state: '0x...' })
 */
async function loadState(client, { state }) {
    await client.request({
        method: `${client.mode}_loadState`,
        params: [state],
    });
}
//# sourceMappingURL=loadState.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/mine.js":
/*!*****************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/mine.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   mine: () => (/* binding */ mine)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Mine a specified number of blocks.
 *
 * - Docs: https://viem.sh/docs/actions/test/mine
 *
 * @param client - Client to use
 * @param parameters – {@link MineParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { mine } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await mine(client, { blocks: 1 })
 */
async function mine(client, { blocks, interval }) {
    if (client.mode === 'ganache')
        await client.request({
            method: 'evm_mine',
            params: [{ blocks: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(blocks) }],
        });
    else
        await client.request({
            method: `${client.mode}_mine`,
            params: [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(blocks), (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(interval || 0)],
        });
}
//# sourceMappingURL=mine.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/removeBlockTimestampInterval.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/removeBlockTimestampInterval.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   removeBlockTimestampInterval: () => (/* binding */ removeBlockTimestampInterval)
/* harmony export */ });
/**
 * Removes [`setBlockTimestampInterval`](https://viem.sh/docs/actions/test/setBlockTimestampInterval) if it exists.
 *
 * - Docs: https://viem.sh/docs/actions/test/removeBlockTimestampInterval
 *
 * @param client - Client to use
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { removeBlockTimestampInterval } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await removeBlockTimestampInterval(client)
 */
async function removeBlockTimestampInterval(client) {
    await client.request({
        method: `${client.mode}_removeBlockTimestampInterval`,
    });
}
//# sourceMappingURL=removeBlockTimestampInterval.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/reset.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/reset.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   reset: () => (/* binding */ reset)
/* harmony export */ });
/**
 * Resets fork back to its original state.
 *
 * - Docs: https://viem.sh/docs/actions/test/reset
 *
 * @param client - Client to use
 * @param parameters – {@link ResetParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { reset } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await reset(client, { blockNumber: 69420n })
 */
async function reset(client, { blockNumber, jsonRpcUrl } = {}) {
    await client.request({
        method: `${client.mode}_reset`,
        params: [{ forking: { blockNumber: Number(blockNumber), jsonRpcUrl } }],
    });
}
//# sourceMappingURL=reset.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/revert.js":
/*!*******************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/revert.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   revert: () => (/* binding */ revert)
/* harmony export */ });
/**
 * Revert the state of the blockchain at the current block.
 *
 * - Docs: https://viem.sh/docs/actions/test/revert
 *
 * @param client - Client to use
 * @param parameters – {@link RevertParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { revert } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await revert(client, { id: '0x…' })
 */
async function revert(client, { id }) {
    await client.request({
        method: 'evm_revert',
        params: [id],
    });
}
//# sourceMappingURL=revert.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/sendUnsignedTransaction.js":
/*!************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/sendUnsignedTransaction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sendUnsignedTransaction: () => (/* binding */ sendUnsignedTransaction)
/* harmony export */ });
/* harmony import */ var _utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/formatters/extract.js */ "./node_modules/viem/_esm/utils/formatters/extract.js");
/* harmony import */ var _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/formatters/transactionRequest.js */ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js");


/**
 * Executes a transaction regardless of the signature.
 *
 * - Docs: https://viem.sh/docs/actions/test/sendUnsignedTransaction#sendunsignedtransaction
 *
 * @param client - Client to use
 * @param parameters – {@link SendUnsignedTransactionParameters}
 * @returns The transaction hash. {@link SendUnsignedTransactionReturnType}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { sendUnsignedTransaction } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * const hash = await sendUnsignedTransaction(client, {
 *   from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',
 *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *   value: 1000000000000000000n,
 * })
 */
async function sendUnsignedTransaction(client, args) {
    const { accessList, data, from, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, ...rest } = args;
    const chainFormat = client.chain?.formatters?.transactionRequest?.format;
    const format = chainFormat || _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_1__.formatTransactionRequest;
    const request = format({
        // Pick out extra data that might exist on the chain's transaction request type.
        ...(0,_utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_0__.extract)(rest, { format: chainFormat }),
        accessList,
        data,
        from,
        gas,
        gasPrice,
        maxFeePerGas,
        maxPriorityFeePerGas,
        nonce,
        to,
        value,
    });
    const hash = await client.request({
        method: 'eth_sendUnsignedTransaction',
        params: [request],
    });
    return hash;
}
//# sourceMappingURL=sendUnsignedTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setAutomine.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setAutomine.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setAutomine: () => (/* binding */ setAutomine)
/* harmony export */ });
/**
 * Enables or disables the automatic mining of new blocks with each new transaction submitted to the network.
 *
 * - Docs: https://viem.sh/docs/actions/test/setAutomine
 *
 * @param client - Client to use
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setAutomine } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setAutomine(client)
 */
async function setAutomine(client, enabled) {
    if (client.mode === 'ganache') {
        if (enabled)
            await client.request({ method: 'miner_start' });
        else
            await client.request({ method: 'miner_stop' });
    }
    else
        await client.request({
            method: 'evm_setAutomine',
            params: [enabled],
        });
}
//# sourceMappingURL=setAutomine.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setBalance.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setBalance.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setBalance: () => (/* binding */ setBalance)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Modifies the balance of an account.
 *
 * - Docs: https://viem.sh/docs/actions/test/setBalance
 *
 * @param client - Client to use
 * @param parameters – {@link SetBalanceParameters}
 *
 * @example
 * import { createTestClient, http, parseEther } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setBalance } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setBalance(client, {
 *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',
 *   value: parseEther('1'),
 * })
 */
async function setBalance(client, { address, value }) {
    if (client.mode === 'ganache')
        await client.request({
            method: 'evm_setAccountBalance',
            params: [address, (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(value)],
        });
    else
        await client.request({
            method: `${client.mode}_setBalance`,
            params: [address, (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(value)],
        });
}
//# sourceMappingURL=setBalance.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setBlockGasLimit.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setBlockGasLimit.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setBlockGasLimit: () => (/* binding */ setBlockGasLimit)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Sets the block's gas limit.
 *
 * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit
 *
 * @param client - Client to use
 * @param parameters – {@link SetBlockGasLimitParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setBlockGasLimit } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setBlockGasLimit(client, { gasLimit: 420_000n })
 */
async function setBlockGasLimit(client, { gasLimit }) {
    await client.request({
        method: 'evm_setBlockGasLimit',
        params: [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(gasLimit)],
    });
}
//# sourceMappingURL=setBlockGasLimit.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setBlockTimestampInterval.js":
/*!**************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setBlockTimestampInterval.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setBlockTimestampInterval: () => (/* binding */ setBlockTimestampInterval)
/* harmony export */ });
/**
 * Similar to [`increaseTime`](https://viem.sh/docs/actions/test/increaseTime), but sets a block timestamp `interval`. The timestamp of future blocks will be computed as `lastBlock_timestamp` + `interval`.
 *
 * - Docs: https://viem.sh/docs/actions/test/setBlockTimestampInterval
 *
 * @param client - Client to use
 * @param parameters – {@link SetBlockTimestampIntervalParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setBlockTimestampInterval } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setBlockTimestampInterval(client, { interval: 5 })
 */
async function setBlockTimestampInterval(client, { interval }) {
    const interval_ = (() => {
        if (client.mode === 'hardhat')
            return interval * 1000;
        return interval;
    })();
    await client.request({
        method: `${client.mode}_setBlockTimestampInterval`,
        params: [interval_],
    });
}
//# sourceMappingURL=setBlockTimestampInterval.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setCode.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setCode.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setCode: () => (/* binding */ setCode)
/* harmony export */ });
/**
 * Modifies the bytecode stored at an account's address.
 *
 * - Docs: https://viem.sh/docs/actions/test/setCode
 *
 * @param client - Client to use
 * @param parameters – {@link SetCodeParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setCode } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setCode(client, {
 *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',
 *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df…',
 * })
 */
async function setCode(client, { address, bytecode }) {
    if (client.mode === 'ganache')
        await client.request({
            method: 'evm_setAccountCode',
            params: [address, bytecode],
        });
    else
        await client.request({
            method: `${client.mode}_setCode`,
            params: [address, bytecode],
        });
}
//# sourceMappingURL=setCode.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setCoinbase.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setCoinbase.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setCoinbase: () => (/* binding */ setCoinbase)
/* harmony export */ });
/**
 * Sets the coinbase address to be used in new blocks.
 *
 * - Docs: https://viem.sh/docs/actions/test/setCoinbase
 *
 * @param client - Client to use
 * @param parameters – {@link SetCoinbaseParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setCoinbase } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setCoinbase(client, {
 *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',
 * })
 */
async function setCoinbase(client, { address }) {
    await client.request({
        method: `${client.mode}_setCoinbase`,
        params: [address],
    });
}
//# sourceMappingURL=setCoinbase.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setIntervalMining.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setIntervalMining.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setIntervalMining: () => (/* binding */ setIntervalMining)
/* harmony export */ });
/**
 * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.
 *
 * - Docs: https://viem.sh/docs/actions/test/setIntervalMining
 *
 * @param client - Client to use
 * @param parameters – {@link SetIntervalMiningParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setIntervalMining } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setIntervalMining(client, { interval: 5 })
 */
async function setIntervalMining(client, { interval }) {
    const interval_ = (() => {
        if (client.mode === 'hardhat')
            return interval * 1000;
        return interval;
    })();
    await client.request({
        method: 'evm_setIntervalMining',
        params: [interval_],
    });
}
//# sourceMappingURL=setIntervalMining.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setLoggingEnabled.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setLoggingEnabled.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setLoggingEnabled: () => (/* binding */ setLoggingEnabled)
/* harmony export */ });
/**
 * Enable or disable logging on the test node network.
 *
 * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled
 *
 * @param client - Client to use
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setLoggingEnabled } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setLoggingEnabled(client)
 */
async function setLoggingEnabled(client, enabled) {
    await client.request({
        method: `${client.mode}_setLoggingEnabled`,
        params: [enabled],
    });
}
//# sourceMappingURL=setLoggingEnabled.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setMinGasPrice.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setMinGasPrice.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setMinGasPrice: () => (/* binding */ setMinGasPrice)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Change the minimum gas price accepted by the network (in wei).
 *
 * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice
 *
 * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.
 *
 * @param client - Client to use
 * @param parameters – {@link SetBlockGasLimitParameters}
 *
 * @example
 * import { createTestClient, http, parseGwei } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setMinGasPrice } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setMinGasPrice(client, {
 *   gasPrice: parseGwei('20'),
 * })
 */
async function setMinGasPrice(client, { gasPrice }) {
    await client.request({
        method: `${client.mode}_setMinGasPrice`,
        params: [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(gasPrice)],
    });
}
//# sourceMappingURL=setMinGasPrice.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setNextBlockBaseFeePerGas.js":
/*!**************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setNextBlockBaseFeePerGas.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setNextBlockBaseFeePerGas: () => (/* binding */ setNextBlockBaseFeePerGas)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Sets the next block's base fee per gas.
 *
 * - Docs: https://viem.sh/docs/actions/test/setNextBlockBaseFeePerGas
 *
 * @param client - Client to use
 * @param parameters – {@link SetNextBlockBaseFeePerGasParameters}
 *
 * @example
 * import { createTestClient, http, parseGwei } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setNextBlockBaseFeePerGas } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setNextBlockBaseFeePerGas(client, {
 *   baseFeePerGas: parseGwei('20'),
 * })
 */
async function setNextBlockBaseFeePerGas(client, { baseFeePerGas }) {
    await client.request({
        method: `${client.mode}_setNextBlockBaseFeePerGas`,
        params: [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(baseFeePerGas)],
    });
}
//# sourceMappingURL=setNextBlockBaseFeePerGas.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setNextBlockTimestamp.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setNextBlockTimestamp.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setNextBlockTimestamp: () => (/* binding */ setNextBlockTimestamp)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Sets the next block's timestamp.
 *
 * - Docs: https://viem.sh/docs/actions/test/setNextBlockTimestamp
 *
 * @param client - Client to use
 * @param parameters – {@link SetNextBlockTimestampParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setNextBlockTimestamp } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setNextBlockTimestamp(client, { timestamp: 1671744314n })
 */
async function setNextBlockTimestamp(client, { timestamp }) {
    await client.request({
        method: 'evm_setNextBlockTimestamp',
        params: [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(timestamp)],
    });
}
//# sourceMappingURL=setNextBlockTimestamp.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setNonce.js":
/*!*********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setNonce.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setNonce: () => (/* binding */ setNonce)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Modifies (overrides) the nonce of an account.
 *
 * - Docs: https://viem.sh/docs/actions/test/setNonce
 *
 * @param client - Client to use
 * @param parameters – {@link SetNonceParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setNonce } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setNonce(client, {
 *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',
 *   nonce: 420,
 * })
 */
async function setNonce(client, { address, nonce }) {
    await client.request({
        method: `${client.mode}_setNonce`,
        params: [address, (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(nonce)],
    });
}
//# sourceMappingURL=setNonce.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setRpcUrl.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setRpcUrl.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setRpcUrl: () => (/* binding */ setRpcUrl)
/* harmony export */ });
/**
 * Sets the backend RPC URL.
 *
 * - Docs: https://viem.sh/docs/actions/test/setRpcUrl
 *
 * @param client - Client to use
 * @param jsonRpcUrl – RPC URL
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setRpcUrl } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setRpcUrl(client, 'https://eth-mainnet.g.alchemy.com/v2')
 */
async function setRpcUrl(client, jsonRpcUrl) {
    await client.request({
        method: `${client.mode}_setRpcUrl`,
        params: [jsonRpcUrl],
    });
}
//# sourceMappingURL=setRpcUrl.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/setStorageAt.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/setStorageAt.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setStorageAt: () => (/* binding */ setStorageAt)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Writes to a slot of an account's storage.
 *
 * - Docs: https://viem.sh/docs/actions/test/setStorageAt
 *
 * @param client - Client to use
 * @param parameters – {@link SetStorageAtParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { setStorageAt } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await setStorageAt(client, {
 *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',
 *   index: 2,
 *   value: '0x0000000000000000000000000000000000000000000000000000000000000069',
 * })
 */
async function setStorageAt(client, { address, index, value }) {
    await client.request({
        method: `${client.mode}_setStorageAt`,
        params: [
            address,
            typeof index === 'number' ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(index) : index,
            value,
        ],
    });
}
//# sourceMappingURL=setStorageAt.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/snapshot.js":
/*!*********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/snapshot.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   snapshot: () => (/* binding */ snapshot)
/* harmony export */ });
/**
 * Snapshot the state of the blockchain at the current block.
 *
 * - Docs: https://viem.sh/docs/actions/test/snapshot
 *
 * @param client - Client to use
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { snapshot } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await snapshot(client)
 */
async function snapshot(client) {
    return await client.request({
        method: 'evm_snapshot',
    });
}
//# sourceMappingURL=snapshot.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/test/stopImpersonatingAccount.js":
/*!*************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/test/stopImpersonatingAccount.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   stopImpersonatingAccount: () => (/* binding */ stopImpersonatingAccount)
/* harmony export */ });
/**
 * Stop impersonating an account after having previously used [`impersonateAccount`](https://viem.sh/docs/actions/test/impersonateAccount).
 *
 * - Docs: https://viem.sh/docs/actions/test/stopImpersonatingAccount
 *
 * @param client - Client to use
 * @param parameters – {@link StopImpersonatingAccountParameters}
 *
 * @example
 * import { createTestClient, http } from 'viem'
 * import { foundry } from 'viem/chains'
 * import { stopImpersonatingAccount } from 'viem/test'
 *
 * const client = createTestClient({
 *   mode: 'anvil',
 *   chain: 'foundry',
 *   transport: http(),
 * })
 * await stopImpersonatingAccount(client, {
 *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',
 * })
 */
async function stopImpersonatingAccount(client, { address }) {
    await client.request({
        method: `${client.mode}_stopImpersonatingAccount`,
        params: [address],
    });
}
//# sourceMappingURL=stopImpersonatingAccount.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/addChain.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/addChain.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addChain: () => (/* binding */ addChain)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Adds an EVM chain to the wallet.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/addChain
 * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)
 *
 * @param client - Client to use
 * @param parameters - {@link AddChainParameters}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { optimism } from 'viem/chains'
 * import { addChain } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   transport: custom(window.ethereum),
 * })
 * await addChain(client, { chain: optimism })
 */
async function addChain(client, { chain }) {
    const { id, name, nativeCurrency, rpcUrls, blockExplorers } = chain;
    await client.request({
        method: 'wallet_addEthereumChain',
        params: [
            {
                chainId: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(id),
                chainName: name,
                nativeCurrency,
                rpcUrls: rpcUrls.default.http,
                blockExplorerUrls: blockExplorers
                    ? Object.values(blockExplorers).map(({ url }) => url)
                    : undefined,
            },
        ],
    }, { dedupe: true, retryCount: 0 });
}
//# sourceMappingURL=addChain.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/deployContract.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/deployContract.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   deployContract: () => (/* binding */ deployContract)
/* harmony export */ });
/* harmony import */ var _utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/abi/encodeDeployData.js */ "./node_modules/viem/_esm/utils/abi/encodeDeployData.js");
/* harmony import */ var _sendTransaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sendTransaction.js */ "./node_modules/viem/_esm/actions/wallet/sendTransaction.js");


/**
 * Deploys a contract to the network, given bytecode and constructor arguments.
 *
 * - Docs: https://viem.sh/docs/contract/deployContract
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_deploying-contracts
 *
 * @param client - Client to use
 * @param parameters - {@link DeployContractParameters}
 * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link DeployContractReturnType}
 *
 * @example
 * import { createWalletClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { deployContract } from 'viem/contract'
 *
 * const client = createWalletClient({
 *   account: privateKeyToAccount('0x…'),
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const hash = await deployContract(client, {
 *   abi: [],
 *   account: '0x…,
 *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',
 * })
 */
function deployContract(walletClient, parameters) {
    const { abi, args, bytecode, ...request } = parameters;
    const calldata = (0,_utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_0__.encodeDeployData)({ abi, args, bytecode });
    return (0,_sendTransaction_js__WEBPACK_IMPORTED_MODULE_1__.sendTransaction)(walletClient, {
        ...request,
        ...(request.authorizationList ? { to: null } : {}),
        data: calldata,
    });
}
//# sourceMappingURL=deployContract.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/getAddresses.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/getAddresses.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAddresses: () => (/* binding */ getAddresses)
/* harmony export */ });
/* harmony import */ var _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");

/**
 * Returns a list of account addresses owned by the wallet or client.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/getAddresses
 * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)
 *
 * @param client - Client to use
 * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getAddresses } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const accounts = await getAddresses(client)
 */
async function getAddresses(client) {
    if (client.account?.type === 'local')
        return [client.account.address];
    const addresses = await client.request({ method: 'eth_accounts' }, { dedupe: true });
    return addresses.map((address) => (0,_utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.checksumAddress)(address));
}
//# sourceMappingURL=getAddresses.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/getCallsStatus.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/getCallsStatus.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getCallsStatus: () => (/* binding */ getCallsStatus)
/* harmony export */ });
/* harmony import */ var _utils_data_slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _utils_data_trim_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/data/trim.js */ "./node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/formatters/transactionReceipt.js */ "./node_modules/viem/_esm/utils/formatters/transactionReceipt.js");
/* harmony import */ var _sendCalls_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sendCalls.js */ "./node_modules/viem/_esm/actions/wallet/sendCalls.js");





/**
 * Returns the status of a call batch that was sent via `sendCalls`.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/getCallsStatus
 * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)
 *
 * @param client - Client to use
 * @returns Status of the calls. {@link GetCallsStatusReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getCallsStatus } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const { receipts, status } = await getCallsStatus(client, { id: '0xdeadbeef' })
 */
async function getCallsStatus(client, parameters) {
    async function getStatus(id) {
        const isTransactions = id.endsWith(_sendCalls_js__WEBPACK_IMPORTED_MODULE_4__.fallbackMagicIdentifier.slice(2));
        if (isTransactions) {
            const chainId = (0,_utils_data_trim_js__WEBPACK_IMPORTED_MODULE_1__.trim)((0,_utils_data_slice_js__WEBPACK_IMPORTED_MODULE_0__.sliceHex)(id, -64, -32));
            const hashes = (0,_utils_data_slice_js__WEBPACK_IMPORTED_MODULE_0__.sliceHex)(id, 0, -64)
                .slice(2)
                .match(/.{1,64}/g);
            const receipts = await Promise.all(hashes.map((hash) => _sendCalls_js__WEBPACK_IMPORTED_MODULE_4__.fallbackTransactionErrorMagicIdentifier.slice(2) !== hash
                ? client.request({
                    method: 'eth_getTransactionReceipt',
                    params: [`0x${hash}`],
                }, { dedupe: true })
                : undefined));
            const status = (() => {
                if (receipts.some((r) => r === null))
                    return 100; // pending
                if (receipts.every((r) => r?.status === '0x1'))
                    return 200; // success
                if (receipts.every((r) => r?.status === '0x0'))
                    return 500; // complete failure
                return 600; // partial failure
            })();
            return {
                atomic: false,
                chainId: (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(chainId),
                receipts: receipts.filter(Boolean),
                status,
                version: '2.0.0',
            };
        }
        return client.request({
            method: 'wallet_getCallsStatus',
            params: [id],
        });
    }
    const { atomic = false, chainId, receipts, version = '2.0.0', ...response } = await getStatus(parameters.id);
    const [status, statusCode] = (() => {
        const statusCode = response.status;
        if (statusCode >= 100 && statusCode < 200)
            return ['pending', statusCode];
        if (statusCode >= 200 && statusCode < 300)
            return ['success', statusCode];
        if (statusCode >= 300 && statusCode < 700)
            return ['failure', statusCode];
        // @ts-expect-error: for backwards compatibility
        if (statusCode === 'CONFIRMED')
            return ['success', 200];
        // @ts-expect-error: for backwards compatibility
        if (statusCode === 'PENDING')
            return ['pending', 100];
        return [undefined, statusCode];
    })();
    return {
        ...response,
        atomic,
        // @ts-expect-error: for backwards compatibility
        chainId: chainId ? (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(chainId) : undefined,
        receipts: receipts?.map((receipt) => ({
            ...receipt,
            blockNumber: (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(receipt.blockNumber),
            gasUsed: (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(receipt.gasUsed),
            status: _utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_3__.receiptStatuses[receipt.status],
        })) ?? [],
        statusCode,
        status,
        version,
    };
}
//# sourceMappingURL=getCallsStatus.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/getCapabilities.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/getCapabilities.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getCapabilities: () => (/* binding */ getCapabilities)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * Extract capabilities that a connected wallet supports (e.g. paymasters, session keys, etc).
 *
 * - Docs: https://viem.sh/docs/actions/wallet/getCapabilities
 * - JSON-RPC Methods: [`wallet_getCapabilities`](https://eips.ethereum.org/EIPS/eip-5792)
 *
 * @param client - Client to use
 * @returns The wallet's capabilities. {@link GetCapabilitiesReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getCapabilities } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const capabilities = await getCapabilities(client)
 */
async function getCapabilities(client, parameters = {}) {
    const { account = client.account, chainId } = parameters;
    const account_ = account ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account) : undefined;
    const params = chainId
        ? [account_?.address, [(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(chainId)]]
        : [account_?.address];
    const capabilities_raw = await client.request({
        method: 'wallet_getCapabilities',
        params,
    });
    const capabilities = {};
    for (const [chainId, capabilities_] of Object.entries(capabilities_raw)) {
        capabilities[Number(chainId)] = {};
        for (let [key, value] of Object.entries(capabilities_)) {
            if (key === 'addSubAccount')
                key = 'unstable_addSubAccount';
            capabilities[Number(chainId)][key] = value;
        }
    }
    return (typeof chainId === 'number' ? capabilities[chainId] : capabilities);
}
//# sourceMappingURL=getCapabilities.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/getPermissions.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/getPermissions.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getPermissions: () => (/* binding */ getPermissions)
/* harmony export */ });
/**
 * Gets the wallets current permissions.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/getPermissions
 * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)
 *
 * @param client - Client to use
 * @returns The wallet permissions. {@link GetPermissionsReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { getPermissions } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const permissions = await getPermissions(client)
 */
async function getPermissions(client) {
    const permissions = await client.request({ method: 'wallet_getPermissions' }, { dedupe: true });
    return permissions;
}
//# sourceMappingURL=getPermissions.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/prepareAuthorization.js":
/*!***********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/prepareAuthorization.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prepareAuthorization: () => (/* binding */ prepareAuthorization)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/account.js */ "./node_modules/viem/_esm/errors/account.js");
/* harmony import */ var _utils_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _public_getChainId_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../public/getChainId.js */ "./node_modules/viem/_esm/actions/public/getChainId.js");
/* harmony import */ var _public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../public/getTransactionCount.js */ "./node_modules/viem/_esm/actions/public/getTransactionCount.js");






/**
 * Prepares an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object for signing.
 * This Action will fill the required fields of the Authorization object if they are not provided (e.g. `nonce` and `chainId`).
 *
 * With the prepared Authorization object, you can use [`signAuthorization`](https://viem.sh/docs/eip7702/signAuthorization) to sign over the Authorization object.
 *
 * @param client - Client to use
 * @param parameters - {@link PrepareAuthorizationParameters}
 * @returns The prepared Authorization object. {@link PrepareAuthorizationReturnType}
 *
 * @example
 * import { createClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { prepareAuthorization } from 'viem/experimental'
 *
 * const client = createClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const authorization = await prepareAuthorization(client, {
 *   account: privateKeyToAccount('0x..'),
 *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 * })
 *
 * @example
 * // Account Hoisting
 * import { createClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { prepareAuthorization } from 'viem/experimental'
 *
 * const client = createClient({
 *   account: privateKeyToAccount('0x…'),
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const authorization = await prepareAuthorization(client, {
 *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 * })
 */
async function prepareAuthorization(client, parameters) {
    const { account: account_ = client.account, chainId, nonce } = parameters;
    if (!account_)
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountNotFoundError({
            docsPath: '/docs/eip7702/prepareAuthorization',
        });
    const account = (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_);
    const executor = (() => {
        if (!parameters.executor)
            return undefined;
        if (parameters.executor === 'self')
            return parameters.executor;
        return (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(parameters.executor);
    })();
    const authorization = {
        address: parameters.contractAddress ?? parameters.address,
        chainId,
        nonce,
    };
    if (typeof authorization.chainId === 'undefined')
        authorization.chainId =
            client.chain?.id ??
                (await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.getAction)(client, _public_getChainId_js__WEBPACK_IMPORTED_MODULE_4__.getChainId, 'getChainId')({}));
    if (typeof authorization.nonce === 'undefined') {
        authorization.nonce = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.getAction)(client, _public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionCount, 'getTransactionCount')({
            address: account.address,
            blockTag: 'pending',
        });
        if (executor === 'self' ||
            (executor?.address && (0,_utils_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_2__.isAddressEqual)(executor.address, account.address)))
            authorization.nonce += 1;
    }
    return authorization;
}
//# sourceMappingURL=prepareAuthorization.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js":
/*!****************************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaultParameters: () => (/* binding */ defaultParameters),
/* harmony export */   eip1559NetworkCache: () => (/* binding */ eip1559NetworkCache),
/* harmony export */   prepareTransactionRequest: () => (/* binding */ prepareTransactionRequest)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _actions_public_estimateFeesPerGas_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../actions/public/estimateFeesPerGas.js */ "./node_modules/viem/_esm/actions/public/estimateFeesPerGas.js");
/* harmony import */ var _actions_public_estimateGas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../actions/public/estimateGas.js */ "./node_modules/viem/_esm/actions/public/estimateGas.js");
/* harmony import */ var _actions_public_getBlock_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../actions/public/getBlock.js */ "./node_modules/viem/_esm/actions/public/getBlock.js");
/* harmony import */ var _actions_public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../actions/public/getTransactionCount.js */ "./node_modules/viem/_esm/actions/public/getTransactionCount.js");
/* harmony import */ var _errors_fee_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../errors/fee.js */ "./node_modules/viem/_esm/errors/fee.js");
/* harmony import */ var _utils_blob_blobsToCommitments_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/blob/blobsToCommitments.js */ "./node_modules/viem/_esm/utils/blob/blobsToCommitments.js");
/* harmony import */ var _utils_blob_blobsToProofs_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/blob/blobsToProofs.js */ "./node_modules/viem/_esm/utils/blob/blobsToProofs.js");
/* harmony import */ var _utils_blob_commitmentsToVersionedHashes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/blob/commitmentsToVersionedHashes.js */ "./node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js");
/* harmony import */ var _utils_blob_toBlobSidecars_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/blob/toBlobSidecars.js */ "./node_modules/viem/_esm/utils/blob/toBlobSidecars.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/transaction/assertRequest.js */ "./node_modules/viem/_esm/utils/transaction/assertRequest.js");
/* harmony import */ var _utils_transaction_getTransactionType_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/transaction/getTransactionType.js */ "./node_modules/viem/_esm/utils/transaction/getTransactionType.js");
/* harmony import */ var _public_getChainId_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../public/getChainId.js */ "./node_modules/viem/_esm/actions/public/getChainId.js");














const defaultParameters = [
    'blobVersionedHashes',
    'chainId',
    'fees',
    'gas',
    'nonce',
    'type',
];
/** @internal */
const eip1559NetworkCache = /*#__PURE__*/ new Map();
/**
 * Prepares a transaction request for signing.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest
 *
 * @param args - {@link PrepareTransactionRequestParameters}
 * @returns The transaction request. {@link PrepareTransactionRequestReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { prepareTransactionRequest } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const request = await prepareTransactionRequest(client, {
 *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 *   to: '0x0000000000000000000000000000000000000000',
 *   value: 1n,
 * })
 *
 * @example
 * // Account Hoisting
 * import { createWalletClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { prepareTransactionRequest } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   account: privateKeyToAccount('0x…'),
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const request = await prepareTransactionRequest(client, {
 *   to: '0x0000000000000000000000000000000000000000',
 *   value: 1n,
 * })
 */
async function prepareTransactionRequest(client, args) {
    const { account: account_ = client.account, blobs, chain, gas, kzg, nonce, nonceManager, parameters = defaultParameters, type, } = args;
    const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_) : account_;
    const request = { ...args, ...(account ? { from: account?.address } : {}) };
    let block;
    async function getBlock() {
        if (block)
            return block;
        block = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_10__.getAction)(client, _actions_public_getBlock_js__WEBPACK_IMPORTED_MODULE_3__.getBlock, 'getBlock')({ blockTag: 'latest' });
        return block;
    }
    let chainId;
    async function getChainId() {
        if (chainId)
            return chainId;
        if (chain)
            return chain.id;
        if (typeof args.chainId !== 'undefined')
            return args.chainId;
        const chainId_ = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_10__.getAction)(client, _public_getChainId_js__WEBPACK_IMPORTED_MODULE_13__.getChainId, 'getChainId')({});
        chainId = chainId_;
        return chainId;
    }
    if (parameters.includes('nonce') && typeof nonce === 'undefined' && account) {
        if (nonceManager) {
            const chainId = await getChainId();
            request.nonce = await nonceManager.consume({
                address: account.address,
                chainId,
                client,
            });
        }
        else {
            request.nonce = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_10__.getAction)(client, _actions_public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_4__.getTransactionCount, 'getTransactionCount')({
                address: account.address,
                blockTag: 'pending',
            });
        }
    }
    if ((parameters.includes('blobVersionedHashes') ||
        parameters.includes('sidecars')) &&
        blobs &&
        kzg) {
        const commitments = (0,_utils_blob_blobsToCommitments_js__WEBPACK_IMPORTED_MODULE_6__.blobsToCommitments)({ blobs, kzg });
        if (parameters.includes('blobVersionedHashes')) {
            const versionedHashes = (0,_utils_blob_commitmentsToVersionedHashes_js__WEBPACK_IMPORTED_MODULE_8__.commitmentsToVersionedHashes)({
                commitments,
                to: 'hex',
            });
            request.blobVersionedHashes = versionedHashes;
        }
        if (parameters.includes('sidecars')) {
            const proofs = (0,_utils_blob_blobsToProofs_js__WEBPACK_IMPORTED_MODULE_7__.blobsToProofs)({ blobs, commitments, kzg });
            const sidecars = (0,_utils_blob_toBlobSidecars_js__WEBPACK_IMPORTED_MODULE_9__.toBlobSidecars)({
                blobs,
                commitments,
                proofs,
                to: 'hex',
            });
            request.sidecars = sidecars;
        }
    }
    if (parameters.includes('chainId'))
        request.chainId = await getChainId();
    if ((parameters.includes('fees') || parameters.includes('type')) &&
        typeof type === 'undefined') {
        try {
            request.type = (0,_utils_transaction_getTransactionType_js__WEBPACK_IMPORTED_MODULE_12__.getTransactionType)(request);
        }
        catch {
            let isEip1559Network = eip1559NetworkCache.get(client.uid);
            if (typeof isEip1559Network === 'undefined') {
                const block = await getBlock();
                isEip1559Network = typeof block?.baseFeePerGas === 'bigint';
                eip1559NetworkCache.set(client.uid, isEip1559Network);
            }
            request.type = isEip1559Network ? 'eip1559' : 'legacy';
        }
    }
    if (parameters.includes('fees')) {
        // TODO(4844): derive blob base fees once https://github.com/ethereum/execution-apis/pull/486 is merged.
        if (request.type !== 'legacy' && request.type !== 'eip2930') {
            // EIP-1559 fees
            if (typeof request.maxFeePerGas === 'undefined' ||
                typeof request.maxPriorityFeePerGas === 'undefined') {
                const block = await getBlock();
                const { maxFeePerGas, maxPriorityFeePerGas } = await (0,_actions_public_estimateFeesPerGas_js__WEBPACK_IMPORTED_MODULE_1__.internal_estimateFeesPerGas)(client, {
                    block: block,
                    chain,
                    request: request,
                });
                if (typeof args.maxPriorityFeePerGas === 'undefined' &&
                    args.maxFeePerGas &&
                    args.maxFeePerGas < maxPriorityFeePerGas)
                    throw new _errors_fee_js__WEBPACK_IMPORTED_MODULE_5__.MaxFeePerGasTooLowError({
                        maxPriorityFeePerGas,
                    });
                request.maxPriorityFeePerGas = maxPriorityFeePerGas;
                request.maxFeePerGas = maxFeePerGas;
            }
        }
        else {
            // Legacy fees
            if (typeof args.maxFeePerGas !== 'undefined' ||
                typeof args.maxPriorityFeePerGas !== 'undefined')
                throw new _errors_fee_js__WEBPACK_IMPORTED_MODULE_5__.Eip1559FeesNotSupportedError();
            if (typeof args.gasPrice === 'undefined') {
                const block = await getBlock();
                const { gasPrice: gasPrice_ } = await (0,_actions_public_estimateFeesPerGas_js__WEBPACK_IMPORTED_MODULE_1__.internal_estimateFeesPerGas)(client, {
                    block: block,
                    chain,
                    request: request,
                    type: 'legacy',
                });
                request.gasPrice = gasPrice_;
            }
        }
    }
    if (parameters.includes('gas') && typeof gas === 'undefined')
        request.gas = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_10__.getAction)(client, _actions_public_estimateGas_js__WEBPACK_IMPORTED_MODULE_2__.estimateGas, 'estimateGas')({
            ...request,
            account: account
                ? { address: account.address, type: 'json-rpc' }
                : account,
        });
    (0,_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_11__.assertRequest)(request);
    delete request.parameters;
    return request;
}
//# sourceMappingURL=prepareTransactionRequest.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/requestAddresses.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/requestAddresses.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   requestAddresses: () => (/* binding */ requestAddresses)
/* harmony export */ });
/* harmony import */ var _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");

/**
 * Requests a list of accounts managed by a wallet.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses
 * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)
 *
 * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).
 *
 * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.
 *
 * @param client - Client to use
 * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { requestAddresses } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const accounts = await requestAddresses(client)
 */
async function requestAddresses(client) {
    const addresses = await client.request({ method: 'eth_requestAccounts' }, { dedupe: true, retryCount: 0 });
    return addresses.map((address) => (0,_utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.getAddress)(address));
}
//# sourceMappingURL=requestAddresses.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/requestPermissions.js":
/*!*********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/requestPermissions.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   requestPermissions: () => (/* binding */ requestPermissions)
/* harmony export */ });
/**
 * Requests permissions for a wallet.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions
 * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)
 *
 * @param client - Client to use
 * @param parameters - {@link RequestPermissionsParameters}
 * @returns The wallet permissions. {@link RequestPermissionsReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { requestPermissions } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const permissions = await requestPermissions(client, {
 *   eth_accounts: {}
 * })
 */
async function requestPermissions(client, permissions) {
    return client.request({
        method: 'wallet_requestPermissions',
        params: [permissions],
    }, { retryCount: 0 });
}
//# sourceMappingURL=requestPermissions.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/sendCalls.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/sendCalls.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fallbackMagicIdentifier: () => (/* binding */ fallbackMagicIdentifier),
/* harmony export */   fallbackTransactionErrorMagicIdentifier: () => (/* binding */ fallbackTransactionErrorMagicIdentifier),
/* harmony export */   sendCalls: () => (/* binding */ sendCalls)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/rpc.js */ "./node_modules/viem/_esm/errors/rpc.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_data_concat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_errors_getTransactionError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/errors/getTransactionError.js */ "./node_modules/viem/_esm/utils/errors/getTransactionError.js");
/* harmony import */ var _sendTransaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./sendTransaction.js */ "./node_modules/viem/_esm/actions/wallet/sendTransaction.js");









const fallbackMagicIdentifier = '0x5792579257925792579257925792579257925792579257925792579257925792';
const fallbackTransactionErrorMagicIdentifier = (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__.numberToHex)(0, {
    size: 32,
});
/**
 * Requests the connected wallet to send a batch of calls.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/sendCalls
 * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)
 *
 * @param client - Client to use
 * @returns Transaction identifier. {@link SendCallsReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { sendCalls } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const id = await sendCalls(client, {
 *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 *   calls: [
 *     {
 *       data: '0xdeadbeef',
 *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *     },
 *     {
 *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *       value: 69420n,
 *     },
 *   ],
 * })
 */
async function sendCalls(client, parameters) {
    const { account: account_ = client.account, capabilities, chain = client.chain, experimental_fallback, experimental_fallbackDelay = 32, forceAtomic = false, id, version = '2.0.0', } = parameters;
    const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_) : null;
    const calls = parameters.calls.map((call_) => {
        const call = call_;
        const data = call.abi
            ? (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_3__.encodeFunctionData)({
                abi: call.abi,
                functionName: call.functionName,
                args: call.args,
            })
            : call.data;
        return {
            data: call.dataSuffix && data ? (0,_utils_data_concat_js__WEBPACK_IMPORTED_MODULE_4__.concat)([data, call.dataSuffix]) : data,
            to: call.to,
            value: call.value ? (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__.numberToHex)(call.value) : undefined,
        };
    });
    try {
        const response = await client.request({
            method: 'wallet_sendCalls',
            params: [
                {
                    atomicRequired: forceAtomic,
                    calls,
                    capabilities,
                    chainId: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__.numberToHex)(chain.id),
                    from: account?.address,
                    id,
                    version,
                },
            ],
        }, { retryCount: 0 });
        if (typeof response === 'string')
            return { id: response };
        return response;
    }
    catch (err) {
        const error = err;
        // If the transport does not support EIP-5792, fall back to
        // `eth_sendTransaction`.
        if (experimental_fallback &&
            (error.name === 'MethodNotFoundRpcError' ||
                error.name === 'MethodNotSupportedRpcError' ||
                error.name === 'UnknownRpcError' ||
                error.details
                    .toLowerCase()
                    .includes('does not exist / is not available') ||
                error.details.toLowerCase().includes('missing or invalid. request()') ||
                error.details
                    .toLowerCase()
                    .includes('did not match any variant of untagged enum') ||
                error.details
                    .toLowerCase()
                    .includes('account upgraded to unsupported contract') ||
                error.details.toLowerCase().includes('eip-7702 not supported') ||
                error.details.toLowerCase().includes('unsupported wc_ method') ||
                error.details.toLowerCase().includes('feature toggled misconfigured'))) {
            if (capabilities) {
                const hasNonOptionalCapability = Object.values(capabilities).some((capability) => !capability.optional);
                if (hasNonOptionalCapability) {
                    const message = 'non-optional `capabilities` are not supported on fallback to `eth_sendTransaction`.';
                    throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnsupportedNonOptionalCapabilityError(new _errors_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError(message, {
                        details: message,
                    }));
                }
            }
            if (forceAtomic && calls.length > 1) {
                const message = '`forceAtomic` is not supported on fallback to `eth_sendTransaction`.';
                throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.AtomicityNotSupportedError(new _errors_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError(message, {
                    details: message,
                }));
            }
            const promises = [];
            for (const call of calls) {
                const promise = (0,_sendTransaction_js__WEBPACK_IMPORTED_MODULE_8__.sendTransaction)(client, {
                    account,
                    chain,
                    data: call.data,
                    to: call.to,
                    value: call.value ? (0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_5__.hexToBigInt)(call.value) : undefined,
                });
                promises.push(promise);
                // Note: some browser wallets require a small delay between transactions
                // to prevent duplicate JSON-RPC requests.
                if (experimental_fallbackDelay > 0)
                    await new Promise((resolve) => setTimeout(resolve, experimental_fallbackDelay));
            }
            const results = await Promise.allSettled(promises);
            if (results.every((r) => r.status === 'rejected'))
                throw results[0].reason;
            const hashes = results.map((result) => {
                if (result.status === 'fulfilled')
                    return result.value;
                return fallbackTransactionErrorMagicIdentifier;
            });
            return {
                id: (0,_utils_data_concat_js__WEBPACK_IMPORTED_MODULE_4__.concat)([
                    ...hashes,
                    (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__.numberToHex)(chain.id, { size: 32 }),
                    fallbackMagicIdentifier,
                ]),
            };
        }
        throw (0,_utils_errors_getTransactionError_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionError)(err, {
            ...parameters,
            account,
            chain: parameters.chain,
        });
    }
}
//# sourceMappingURL=sendCalls.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/sendRawTransaction.js":
/*!*********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/sendRawTransaction.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sendRawTransaction: () => (/* binding */ sendRawTransaction)
/* harmony export */ });
/**
 * Sends a **signed** transaction to the network
 *
 * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction
 * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)
 *
 * @param client - Client to use
 * @param parameters - {@link SendRawTransactionParameters}
 * @returns The transaction hash. {@link SendRawTransactionReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { sendRawTransaction } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 *
 * const hash = await sendRawTransaction(client, {
 *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'
 * })
 */
async function sendRawTransaction(client, { serializedTransaction }) {
    return client.request({
        method: 'eth_sendRawTransaction',
        params: [serializedTransaction],
    }, { retryCount: 0 });
}
//# sourceMappingURL=sendRawTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/sendTransaction.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/sendTransaction.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/account.js */ "./node_modules/viem/_esm/errors/account.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _utils_authorization_recoverAuthorizationAddress_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/authorization/recoverAuthorizationAddress.js */ "./node_modules/viem/_esm/utils/authorization/recoverAuthorizationAddress.js");
/* harmony import */ var _utils_chain_assertCurrentChain_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/chain/assertCurrentChain.js */ "./node_modules/viem/_esm/utils/chain/assertCurrentChain.js");
/* harmony import */ var _utils_errors_getTransactionError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/errors/getTransactionError.js */ "./node_modules/viem/_esm/utils/errors/getTransactionError.js");
/* harmony import */ var _utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/formatters/extract.js */ "./node_modules/viem/_esm/utils/formatters/extract.js");
/* harmony import */ var _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/formatters/transactionRequest.js */ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_lru_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/lru.js */ "./node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/transaction/assertRequest.js */ "./node_modules/viem/_esm/utils/transaction/assertRequest.js");
/* harmony import */ var _public_getChainId_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../public/getChainId.js */ "./node_modules/viem/_esm/actions/public/getChainId.js");
/* harmony import */ var _prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./prepareTransactionRequest.js */ "./node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js");
/* harmony import */ var _sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sendRawTransaction.js */ "./node_modules/viem/_esm/actions/wallet/sendRawTransaction.js");














const supportsWalletNamespace = new _utils_lru_js__WEBPACK_IMPORTED_MODULE_9__.LruMap(128);
/**
 * Creates, signs, and sends a new transaction to the network.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions
 * - JSON-RPC Methods:
 *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)
 *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)
 *
 * @param client - Client to use
 * @param parameters - {@link SendTransactionParameters}
 * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { sendTransaction } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const hash = await sendTransaction(client, {
 *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *   value: 1000000000000000000n,
 * })
 *
 * @example
 * // Account Hoisting
 * import { createWalletClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { sendTransaction } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   account: privateKeyToAccount('0x…'),
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const hash = await sendTransaction(client, {
 *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',
 *   value: 1000000000000000000n,
 * })
 */
async function sendTransaction(client, parameters) {
    const { account: account_ = client.account, chain = client.chain, accessList, authorizationList, blobs, data, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, nonce, type, value, ...rest } = parameters;
    if (typeof account_ === 'undefined')
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountNotFoundError({
            docsPath: '/docs/actions/wallet/sendTransaction',
        });
    const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_) : null;
    try {
        (0,_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_10__.assertRequest)(parameters);
        const to = await (async () => {
            // If `to` exists on the parameters, use that.
            if (parameters.to)
                return parameters.to;
            // If `to` is null, we are sending a deployment transaction.
            if (parameters.to === null)
                return undefined;
            // If no `to` exists, and we are sending a EIP-7702 transaction, use the
            // address of the first authorization in the list.
            if (authorizationList && authorizationList.length > 0)
                return await (0,_utils_authorization_recoverAuthorizationAddress_js__WEBPACK_IMPORTED_MODULE_3__.recoverAuthorizationAddress)({
                    authorization: authorizationList[0],
                }).catch(() => {
                    throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError('`to` is required. Could not infer from `authorizationList`.');
                });
            // Otherwise, we are sending a deployment transaction.
            return undefined;
        })();
        if (account?.type === 'json-rpc' || account === null) {
            let chainId;
            if (chain !== null) {
                chainId = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _public_getChainId_js__WEBPACK_IMPORTED_MODULE_11__.getChainId, 'getChainId')({});
                (0,_utils_chain_assertCurrentChain_js__WEBPACK_IMPORTED_MODULE_4__.assertCurrentChain)({
                    currentChainId: chainId,
                    chain,
                });
            }
            const chainFormat = client.chain?.formatters?.transactionRequest?.format;
            const format = chainFormat || _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_7__.formatTransactionRequest;
            const request = format({
                // Pick out extra data that might exist on the chain's transaction request type.
                ...(0,_utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_6__.extract)(rest, { format: chainFormat }),
                accessList,
                authorizationList,
                blobs,
                chainId,
                data,
                from: account?.address,
                gas,
                gasPrice,
                maxFeePerBlobGas,
                maxFeePerGas,
                maxPriorityFeePerGas,
                nonce,
                to,
                type,
                value,
            });
            const isWalletNamespaceSupported = supportsWalletNamespace.get(client.uid);
            const method = isWalletNamespaceSupported
                ? 'wallet_sendTransaction'
                : 'eth_sendTransaction';
            try {
                return await client.request({
                    method,
                    params: [request],
                }, { retryCount: 0 });
            }
            catch (e) {
                if (isWalletNamespaceSupported === false)
                    throw e;
                const error = e;
                // If the transport does not support the method or input, attempt to use the
                // `wallet_sendTransaction` method.
                if (error.name === 'InvalidInputRpcError' ||
                    error.name === 'InvalidParamsRpcError' ||
                    error.name === 'MethodNotFoundRpcError' ||
                    error.name === 'MethodNotSupportedRpcError') {
                    return await client
                        .request({
                        method: 'wallet_sendTransaction',
                        params: [request],
                    }, { retryCount: 0 })
                        .then((hash) => {
                        supportsWalletNamespace.set(client.uid, true);
                        return hash;
                    })
                        .catch((e) => {
                        const walletNamespaceError = e;
                        if (walletNamespaceError.name === 'MethodNotFoundRpcError' ||
                            walletNamespaceError.name === 'MethodNotSupportedRpcError') {
                            supportsWalletNamespace.set(client.uid, false);
                            throw error;
                        }
                        throw walletNamespaceError;
                    });
                }
                throw error;
            }
        }
        if (account?.type === 'local') {
            // Prepare the request for signing (assign appropriate fees, etc.)
            const request = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_12__.prepareTransactionRequest, 'prepareTransactionRequest')({
                account,
                accessList,
                authorizationList,
                blobs,
                chain,
                data,
                gas,
                gasPrice,
                maxFeePerBlobGas,
                maxFeePerGas,
                maxPriorityFeePerGas,
                nonce,
                nonceManager: account.nonceManager,
                parameters: [..._prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_12__.defaultParameters, 'sidecars'],
                type,
                value,
                ...rest,
                to,
            });
            const serializer = chain?.serializers?.transaction;
            const serializedTransaction = (await account.signTransaction(request, {
                serializer,
            }));
            return await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.getAction)(client, _sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_13__.sendRawTransaction, 'sendRawTransaction')({
                serializedTransaction,
            });
        }
        if (account?.type === 'smart')
            throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountTypeNotSupportedError({
                metaMessages: [
                    'Consider using the `sendUserOperation` Action instead.',
                ],
                docsPath: '/docs/actions/bundler/sendUserOperation',
                type: 'smart',
            });
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountTypeNotSupportedError({
            docsPath: '/docs/actions/wallet/sendTransaction',
            type: account?.type,
        });
    }
    catch (err) {
        if (err instanceof _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountTypeNotSupportedError)
            throw err;
        throw (0,_utils_errors_getTransactionError_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionError)(err, {
            ...parameters,
            account,
            chain: parameters.chain || undefined,
        });
    }
}
//# sourceMappingURL=sendTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/showCallsStatus.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/showCallsStatus.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   showCallsStatus: () => (/* binding */ showCallsStatus)
/* harmony export */ });
/**
 * Requests for the wallet to show information about a call batch
 * that was sent via `sendCalls`.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/showCallsStatus
 * - JSON-RPC Methods: [`wallet_showCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)
 *
 * @param client - Client to use
 * @returns Status of the calls. {@link ShowCallsStatusReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { showCallsStatus } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * await showCallsStatus(client, { id: '0xdeadbeef' })
 */
async function showCallsStatus(client, parameters) {
    const { id } = parameters;
    await client.request({
        method: 'wallet_showCallsStatus',
        params: [id],
    });
    return;
}
//# sourceMappingURL=showCallsStatus.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/signAuthorization.js":
/*!********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/signAuthorization.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   signAuthorization: () => (/* binding */ signAuthorization)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/account.js */ "./node_modules/viem/_esm/errors/account.js");
/* harmony import */ var _prepareAuthorization_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prepareAuthorization.js */ "./node_modules/viem/_esm/actions/wallet/prepareAuthorization.js");



/**
 * Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.
 *
 * With the calculated signature, you can:
 * - use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,
 * - use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.
 *
 * @param client - Client to use
 * @param parameters - {@link SignAuthorizationParameters}
 * @returns The signed Authorization object. {@link SignAuthorizationReturnType}
 *
 * @example
 * import { createClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { signAuthorization } from 'viem/experimental'
 *
 * const client = createClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const signature = await signAuthorization(client, {
 *   account: privateKeyToAccount('0x..'),
 *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 * })
 *
 * @example
 * // Account Hoisting
 * import { createClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { signAuthorization } from 'viem/experimental'
 *
 * const client = createClient({
 *   account: privateKeyToAccount('0x…'),
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const signature = await signAuthorization(client, {
 *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 * })
 */
async function signAuthorization(client, parameters) {
    const { account: account_ = client.account } = parameters;
    if (!account_)
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountNotFoundError({
            docsPath: '/docs/eip7702/signAuthorization',
        });
    const account = (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_);
    if (!account.signAuthorization)
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountTypeNotSupportedError({
            docsPath: '/docs/eip7702/signAuthorization',
            metaMessages: [
                'The `signAuthorization` Action does not support JSON-RPC Accounts.',
            ],
            type: account.type,
        });
    const authorization = await (0,_prepareAuthorization_js__WEBPACK_IMPORTED_MODULE_2__.prepareAuthorization)(client, parameters);
    return account.signAuthorization(authorization);
}
//# sourceMappingURL=signAuthorization.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/signMessage.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/signMessage.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   signMessage: () => (/* binding */ signMessage)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/account.js */ "./node_modules/viem/_esm/errors/account.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");



/**
 * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256("\x19Ethereum Signed Message:\n" + len(message) + message))`.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/signMessage
 * - JSON-RPC Methods:
 *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data#personal-sign)
 *   - Local Accounts: Signs locally. No JSON-RPC request.
 *
 * With the calculated signature, you can:
 * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage) to verify the signature,
 * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.
 *
 * @param client - Client to use
 * @param parameters - {@link SignMessageParameters}
 * @returns The signed message. {@link SignMessageReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { signMessage } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const signature = await signMessage(client, {
 *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 *   message: 'hello world',
 * })
 *
 * @example
 * // Account Hoisting
 * import { createWalletClient, custom } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { signMessage } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   account: privateKeyToAccount('0x…'),
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const signature = await signMessage(client, {
 *   message: 'hello world',
 * })
 */
async function signMessage(client, { account: account_ = client.account, message, }) {
    if (!account_)
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountNotFoundError({
            docsPath: '/docs/actions/wallet/signMessage',
        });
    const account = (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_);
    if (account.signMessage)
        return account.signMessage({ message });
    const message_ = (() => {
        if (typeof message === 'string')
            return (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.stringToHex)(message);
        if (message.raw instanceof Uint8Array)
            return (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(message.raw);
        return message.raw;
    })();
    return client.request({
        method: 'personal_sign',
        params: [message_, account.address],
    }, { retryCount: 0 });
}
//# sourceMappingURL=signMessage.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/signTransaction.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/signTransaction.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   signTransaction: () => (/* binding */ signTransaction)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/account.js */ "./node_modules/viem/_esm/errors/account.js");
/* harmony import */ var _utils_chain_assertCurrentChain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/chain/assertCurrentChain.js */ "./node_modules/viem/_esm/utils/chain/assertCurrentChain.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/formatters/transactionRequest.js */ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/transaction/assertRequest.js */ "./node_modules/viem/_esm/utils/transaction/assertRequest.js");
/* harmony import */ var _public_getChainId_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../public/getChainId.js */ "./node_modules/viem/_esm/actions/public/getChainId.js");








/**
 * Signs a transaction.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/signTransaction
 * - JSON-RPC Methods:
 *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)
 *   - Local Accounts: Signs locally. No JSON-RPC request.
 *
 * @param args - {@link SignTransactionParameters}
 * @returns The signed serialized transaction. {@link SignTransactionReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { signTransaction } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const signature = await signTransaction(client, {
 *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 *   to: '0x0000000000000000000000000000000000000000',
 *   value: 1n,
 * })
 *
 * @example
 * // Account Hoisting
 * import { createWalletClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { signTransaction } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   account: privateKeyToAccount('0x…'),
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const signature = await signTransaction(client, {
 *   to: '0x0000000000000000000000000000000000000000',
 *   value: 1n,
 * })
 */
async function signTransaction(client, parameters) {
    const { account: account_ = client.account, chain = client.chain, ...transaction } = parameters;
    if (!account_)
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountNotFoundError({
            docsPath: '/docs/actions/wallet/signTransaction',
        });
    const account = (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_);
    (0,_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_6__.assertRequest)({
        account,
        ...parameters,
    });
    const chainId = await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_5__.getAction)(client, _public_getChainId_js__WEBPACK_IMPORTED_MODULE_7__.getChainId, 'getChainId')({});
    if (chain !== null)
        (0,_utils_chain_assertCurrentChain_js__WEBPACK_IMPORTED_MODULE_2__.assertCurrentChain)({
            currentChainId: chainId,
            chain,
        });
    const formatters = chain?.formatters || client.chain?.formatters;
    const format = formatters?.transactionRequest?.format || _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_4__.formatTransactionRequest;
    if (account.signTransaction)
        return account.signTransaction({
            ...transaction,
            chainId,
        }, { serializer: client.chain?.serializers?.transaction });
    return await client.request({
        method: 'eth_signTransaction',
        params: [
            {
                ...format(transaction),
                chainId: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(chainId),
                from: account.address,
            },
        ],
    }, { retryCount: 0 });
}
//# sourceMappingURL=signTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/signTypedData.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/signTypedData.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   signTypedData: () => (/* binding */ signTypedData)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/account.js */ "./node_modules/viem/_esm/errors/account.js");
/* harmony import */ var _utils_typedData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/typedData.js */ "./node_modules/viem/_esm/utils/typedData.js");



/**
 * Signs typed data and calculates an Ethereum-specific signature in [https://eips.ethereum.org/EIPS/eip-712](https://eips.ethereum.org/EIPS/eip-712): `sign(keccak256("\x19\x01" ‖ domainSeparator ‖ hashStruct(message)))`
 *
 * - Docs: https://viem.sh/docs/actions/wallet/signTypedData
 * - JSON-RPC Methods:
 *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)
 *   - Local Accounts: Signs locally. No JSON-RPC request.
 *
 * @param client - Client to use
 * @param parameters - {@link SignTypedDataParameters}
 * @returns The signed data. {@link SignTypedDataReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { signTypedData } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const signature = await signTypedData(client, {
 *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',
 *   domain: {
 *     name: 'Ether Mail',
 *     version: '1',
 *     chainId: 1,
 *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',
 *   },
 *   types: {
 *     Person: [
 *       { name: 'name', type: 'string' },
 *       { name: 'wallet', type: 'address' },
 *     ],
 *     Mail: [
 *       { name: 'from', type: 'Person' },
 *       { name: 'to', type: 'Person' },
 *       { name: 'contents', type: 'string' },
 *     ],
 *   },
 *   primaryType: 'Mail',
 *   message: {
 *     from: {
 *       name: 'Cow',
 *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',
 *     },
 *     to: {
 *       name: 'Bob',
 *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',
 *     },
 *     contents: 'Hello, Bob!',
 *   },
 * })
 *
 * @example
 * // Account Hoisting
 * import { createWalletClient, http } from 'viem'
 * import { privateKeyToAccount } from 'viem/accounts'
 * import { mainnet } from 'viem/chains'
 * import { signTypedData } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   account: privateKeyToAccount('0x…'),
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const signature = await signTypedData(client, {
 *   domain: {
 *     name: 'Ether Mail',
 *     version: '1',
 *     chainId: 1,
 *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',
 *   },
 *   types: {
 *     Person: [
 *       { name: 'name', type: 'string' },
 *       { name: 'wallet', type: 'address' },
 *     ],
 *     Mail: [
 *       { name: 'from', type: 'Person' },
 *       { name: 'to', type: 'Person' },
 *       { name: 'contents', type: 'string' },
 *     ],
 *   },
 *   primaryType: 'Mail',
 *   message: {
 *     from: {
 *       name: 'Cow',
 *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',
 *     },
 *     to: {
 *       name: 'Bob',
 *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',
 *     },
 *     contents: 'Hello, Bob!',
 *   },
 * })
 */
async function signTypedData(client, parameters) {
    const { account: account_ = client.account, domain, message, primaryType, } = parameters;
    if (!account_)
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountNotFoundError({
            docsPath: '/docs/actions/wallet/signTypedData',
        });
    const account = (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_);
    const types = {
        EIP712Domain: (0,_utils_typedData_js__WEBPACK_IMPORTED_MODULE_2__.getTypesForEIP712Domain)({ domain }),
        ...parameters.types,
    };
    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc
    // as we can't statically check this with TypeScript.
    (0,_utils_typedData_js__WEBPACK_IMPORTED_MODULE_2__.validateTypedData)({ domain, message, primaryType, types });
    if (account.signTypedData)
        return account.signTypedData({ domain, message, primaryType, types });
    const typedData = (0,_utils_typedData_js__WEBPACK_IMPORTED_MODULE_2__.serializeTypedData)({ domain, message, primaryType, types });
    return client.request({
        method: 'eth_signTypedData_v4',
        params: [account.address, typedData],
    }, { retryCount: 0 });
}
//# sourceMappingURL=signTypedData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/switchChain.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/switchChain.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   switchChain: () => (/* binding */ switchChain)
/* harmony export */ });
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");

/**
 * Switch the target chain in a wallet.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/switchChain
 * - JSON-RPC Methods: [`wallet_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)
 *
 * @param client - Client to use
 * @param parameters - {@link SwitchChainParameters}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet, optimism } from 'viem/chains'
 * import { switchChain } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * await switchChain(client, { id: optimism.id })
 */
async function switchChain(client, { id }) {
    await client.request({
        method: 'wallet_switchEthereumChain',
        params: [
            {
                chainId: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(id),
            },
        ],
    }, { retryCount: 0 });
}
//# sourceMappingURL=switchChain.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/waitForCallsStatus.js":
/*!*********************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/waitForCallsStatus.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WaitForCallsStatusTimeoutError: () => (/* binding */ WaitForCallsStatusTimeoutError),
/* harmony export */   waitForCallsStatus: () => (/* binding */ waitForCallsStatus)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_calls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/calls.js */ "./node_modules/viem/_esm/errors/calls.js");
/* harmony import */ var _utils_observe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/observe.js */ "./node_modules/viem/_esm/utils/observe.js");
/* harmony import */ var _utils_poll_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/poll.js */ "./node_modules/viem/_esm/utils/poll.js");
/* harmony import */ var _utils_promise_withResolvers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/promise/withResolvers.js */ "./node_modules/viem/_esm/utils/promise/withResolvers.js");
/* harmony import */ var _utils_promise_withRetry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/promise/withRetry.js */ "./node_modules/viem/_esm/utils/promise/withRetry.js");
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _getCallsStatus_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getCallsStatus.js */ "./node_modules/viem/_esm/actions/wallet/getCallsStatus.js");








/**
 * Waits for the status & receipts of a call bundle that was sent via `sendCalls`.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/waitForCallsStatus
 * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)
 *
 * @param client - Client to use
 * @param parameters - {@link WaitForCallsStatusParameters}
 * @returns Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { waitForCallsStatus } from 'viem/actions'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 *
 * const { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })
 */
async function waitForCallsStatus(client, parameters) {
    const { id, pollingInterval = client.pollingInterval, status = ({ statusCode }) => statusCode === 200 || statusCode >= 300, retryCount = 4, retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff
    timeout = 60_000, throwOnFailure = false, } = parameters;
    const observerId = (0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_6__.stringify)(['waitForCallsStatus', client.uid, id]);
    const { promise, resolve, reject } = (0,_utils_promise_withResolvers_js__WEBPACK_IMPORTED_MODULE_4__.withResolvers)();
    let timer = undefined;
    const unobserve = (0,_utils_observe_js__WEBPACK_IMPORTED_MODULE_2__.observe)(observerId, { resolve, reject }, (emit) => {
        const unpoll = (0,_utils_poll_js__WEBPACK_IMPORTED_MODULE_3__.poll)(async () => {
            const done = (fn) => {
                clearTimeout(timer);
                unpoll();
                fn();
                unobserve();
            };
            try {
                const result = await (0,_utils_promise_withRetry_js__WEBPACK_IMPORTED_MODULE_5__.withRetry)(async () => {
                    const result = await (0,_getCallsStatus_js__WEBPACK_IMPORTED_MODULE_7__.getCallsStatus)(client, { id });
                    if (throwOnFailure && result.status === 'failure')
                        throw new _errors_calls_js__WEBPACK_IMPORTED_MODULE_1__.BundleFailedError(result);
                    return result;
                }, {
                    retryCount,
                    delay: retryDelay,
                });
                if (!status(result))
                    return;
                done(() => emit.resolve(result));
            }
            catch (error) {
                done(() => emit.reject(error));
            }
        }, {
            interval: pollingInterval,
            emitOnBegin: true,
        });
        return unpoll;
    });
    timer = timeout
        ? setTimeout(() => {
            unobserve();
            clearTimeout(timer);
            reject(new WaitForCallsStatusTimeoutError({ id }));
        }, timeout)
        : undefined;
    return await promise;
}
class WaitForCallsStatusTimeoutError extends _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ id }) {
        super(`Timed out while waiting for call bundle with id "${id}" to be confirmed.`, { name: 'WaitForCallsStatusTimeoutError' });
    }
}
//# sourceMappingURL=waitForCallsStatus.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/watchAsset.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/watchAsset.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchAsset: () => (/* binding */ watchAsset)
/* harmony export */ });
/**
 * Adds an EVM chain to the wallet.
 *
 * - Docs: https://viem.sh/docs/actions/wallet/watchAsset
 * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)
 *
 * @param client - Client to use
 * @param parameters - {@link WatchAssetParameters}
 * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}
 *
 * @example
 * import { createWalletClient, custom } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { watchAsset } from 'viem/wallet'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const success = await watchAsset(client, {
 *   type: 'ERC20',
 *   options: {
 *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
 *     decimals: 18,
 *     symbol: 'WETH',
 *   },
 * })
 */
async function watchAsset(client, params) {
    const added = await client.request({
        method: 'wallet_watchAsset',
        params,
    }, { retryCount: 0 });
    return added;
}
//# sourceMappingURL=watchAsset.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/actions/wallet/writeContract.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/actions/wallet/writeContract.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   writeContract: () => (/* binding */ writeContract)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _errors_account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/account.js */ "./node_modules/viem/_esm/errors/account.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/errors/getContractError.js */ "./node_modules/viem/_esm/utils/errors/getContractError.js");
/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/getAction.js */ "./node_modules/viem/_esm/utils/getAction.js");
/* harmony import */ var _sendTransaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sendTransaction.js */ "./node_modules/viem/_esm/actions/wallet/sendTransaction.js");






/**
 * Executes a write function on a contract.
 *
 * - Docs: https://viem.sh/docs/contract/writeContract
 * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts
 *
 * A "write" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.
 *
 * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).
 *
 * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__
 *
 * @param client - Client to use
 * @param parameters - {@link WriteContractParameters}
 * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}
 *
 * @example
 * import { createWalletClient, custom, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { writeContract } from 'viem/contract'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: custom(window.ethereum),
 * })
 * const hash = await writeContract(client, {
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),
 *   functionName: 'mint',
 *   args: [69420],
 * })
 *
 * @example
 * // With Validation
 * import { createWalletClient, http, parseAbi } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { simulateContract, writeContract } from 'viem/contract'
 *
 * const client = createWalletClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 * const { request } = await simulateContract(client, {
 *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',
 *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),
 *   functionName: 'mint',
 *   args: [69420],
 * }
 * const hash = await writeContract(client, request)
 */
async function writeContract(client, parameters) {
    const { abi, account: account_ = client.account, address, args, dataSuffix, functionName, ...request } = parameters;
    if (typeof account_ === 'undefined')
        throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.AccountNotFoundError({
            docsPath: '/docs/contract/writeContract',
        });
    const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_) : null;
    const data = (0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionData)({
        abi,
        args,
        functionName,
    });
    try {
        return await (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_4__.getAction)(client, _sendTransaction_js__WEBPACK_IMPORTED_MODULE_5__.sendTransaction, 'sendTransaction')({
            data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,
            to: address,
            account,
            ...request,
        });
    }
    catch (error) {
        throw (0,_utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_3__.getContractError)(error, {
            abi,
            address,
            args,
            docsPath: '/docs/contract/writeContract',
            functionName,
            sender: account?.address,
        });
    }
}
//# sourceMappingURL=writeContract.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/createClient.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/clients/createClient.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createClient: () => (/* binding */ createClient),
/* harmony export */   rpcSchema: () => (/* binding */ rpcSchema)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _utils_uid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/uid.js */ "./node_modules/viem/_esm/utils/uid.js");


function createClient(parameters) {
    const { batch, chain, ccipRead, key = 'base', name = 'Base Client', type = 'base', } = parameters;
    const experimental_blockTag = parameters.experimental_blockTag ??
        (typeof chain?.experimental_preconfirmationTime === 'number'
            ? 'pending'
            : undefined);
    const blockTime = chain?.blockTime ?? 12_000;
    const defaultPollingInterval = Math.min(Math.max(Math.floor(blockTime / 2), 500), 4_000);
    const pollingInterval = parameters.pollingInterval ?? defaultPollingInterval;
    const cacheTime = parameters.cacheTime ?? pollingInterval;
    const account = parameters.account
        ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(parameters.account)
        : undefined;
    const { config, request, value } = parameters.transport({
        chain,
        pollingInterval,
    });
    const transport = { ...config, ...value };
    const client = {
        account,
        batch,
        cacheTime,
        ccipRead,
        chain,
        key,
        name,
        pollingInterval,
        request,
        transport,
        type,
        uid: (0,_utils_uid_js__WEBPACK_IMPORTED_MODULE_1__.uid)(),
        ...(experimental_blockTag ? { experimental_blockTag } : {}),
    };
    function extend(base) {
        return (extendFn) => {
            const extended = extendFn(base);
            for (const key in client)
                delete extended[key];
            const combined = { ...base, ...extended };
            return Object.assign(combined, { extend: extend(combined) });
        };
    }
    return Object.assign(client, { extend: extend(client) });
}
/**
 * Defines a typed JSON-RPC schema for the client.
 * Note: This is a runtime noop function.
 */
function rpcSchema() {
    return null;
}
//# sourceMappingURL=createClient.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/createPublicClient.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/createPublicClient.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createPublicClient: () => (/* binding */ createPublicClient)
/* harmony export */ });
/* harmony import */ var _createClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createClient.js */ "./node_modules/viem/_esm/clients/createClient.js");
/* harmony import */ var _decorators_public_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decorators/public.js */ "./node_modules/viem/_esm/clients/decorators/public.js");


/**
 * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).
 *
 * - Docs: https://viem.sh/docs/clients/public
 *
 * A Public Client is an interface to "public" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).
 *
 * @param config - {@link PublicClientConfig}
 * @returns A Public Client. {@link PublicClient}
 *
 * @example
 * import { createPublicClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 *
 * const client = createPublicClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 */
function createPublicClient(parameters) {
    const { key = 'public', name = 'Public Client' } = parameters;
    const client = (0,_createClient_js__WEBPACK_IMPORTED_MODULE_0__.createClient)({
        ...parameters,
        key,
        name,
        type: 'publicClient',
    });
    return client.extend(_decorators_public_js__WEBPACK_IMPORTED_MODULE_1__.publicActions);
}
//# sourceMappingURL=createPublicClient.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/createTestClient.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/createTestClient.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createTestClient: () => (/* binding */ createTestClient)
/* harmony export */ });
/* harmony import */ var _createClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createClient.js */ "./node_modules/viem/_esm/clients/createClient.js");
/* harmony import */ var _decorators_test_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decorators/test.js */ "./node_modules/viem/_esm/clients/decorators/test.js");


function createTestClient(parameters) {
    const { key = 'test', name = 'Test Client', mode } = parameters;
    const client = (0,_createClient_js__WEBPACK_IMPORTED_MODULE_0__.createClient)({
        ...parameters,
        key,
        name,
        type: 'testClient',
    });
    return client.extend((config) => ({
        mode,
        ...(0,_decorators_test_js__WEBPACK_IMPORTED_MODULE_1__.testActions)({ mode })(config),
    }));
}
//# sourceMappingURL=createTestClient.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/createWalletClient.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/createWalletClient.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createWalletClient: () => (/* binding */ createWalletClient)
/* harmony export */ });
/* harmony import */ var _createClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createClient.js */ "./node_modules/viem/_esm/clients/createClient.js");
/* harmony import */ var _decorators_wallet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decorators/wallet.js */ "./node_modules/viem/_esm/clients/decorators/wallet.js");


function createWalletClient(parameters) {
    const { key = 'wallet', name = 'Wallet Client', transport } = parameters;
    const client = (0,_createClient_js__WEBPACK_IMPORTED_MODULE_0__.createClient)({
        ...parameters,
        key,
        name,
        transport,
        type: 'walletClient',
    });
    return client.extend(_decorators_wallet_js__WEBPACK_IMPORTED_MODULE_1__.walletActions);
}
//# sourceMappingURL=createWalletClient.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/decorators/public.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/decorators/public.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   publicActions: () => (/* binding */ publicActions)
/* harmony export */ });
/* harmony import */ var _actions_ens_getEnsAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../actions/ens/getEnsAddress.js */ "./node_modules/viem/_esm/actions/ens/getEnsAddress.js");
/* harmony import */ var _actions_ens_getEnsAvatar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../actions/ens/getEnsAvatar.js */ "./node_modules/viem/_esm/actions/ens/getEnsAvatar.js");
/* harmony import */ var _actions_ens_getEnsName_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../actions/ens/getEnsName.js */ "./node_modules/viem/_esm/actions/ens/getEnsName.js");
/* harmony import */ var _actions_ens_getEnsResolver_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../actions/ens/getEnsResolver.js */ "./node_modules/viem/_esm/actions/ens/getEnsResolver.js");
/* harmony import */ var _actions_ens_getEnsText_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../actions/ens/getEnsText.js */ "./node_modules/viem/_esm/actions/ens/getEnsText.js");
/* harmony import */ var _actions_public_call_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../actions/public/call.js */ "./node_modules/viem/_esm/actions/public/call.js");
/* harmony import */ var _actions_public_createAccessList_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../actions/public/createAccessList.js */ "./node_modules/viem/_esm/actions/public/createAccessList.js");
/* harmony import */ var _actions_public_createBlockFilter_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../actions/public/createBlockFilter.js */ "./node_modules/viem/_esm/actions/public/createBlockFilter.js");
/* harmony import */ var _actions_public_createContractEventFilter_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../actions/public/createContractEventFilter.js */ "./node_modules/viem/_esm/actions/public/createContractEventFilter.js");
/* harmony import */ var _actions_public_createEventFilter_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../actions/public/createEventFilter.js */ "./node_modules/viem/_esm/actions/public/createEventFilter.js");
/* harmony import */ var _actions_public_createPendingTransactionFilter_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../actions/public/createPendingTransactionFilter.js */ "./node_modules/viem/_esm/actions/public/createPendingTransactionFilter.js");
/* harmony import */ var _actions_public_estimateContractGas_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../actions/public/estimateContractGas.js */ "./node_modules/viem/_esm/actions/public/estimateContractGas.js");
/* harmony import */ var _actions_public_estimateFeesPerGas_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../actions/public/estimateFeesPerGas.js */ "./node_modules/viem/_esm/actions/public/estimateFeesPerGas.js");
/* harmony import */ var _actions_public_estimateGas_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../actions/public/estimateGas.js */ "./node_modules/viem/_esm/actions/public/estimateGas.js");
/* harmony import */ var _actions_public_estimateMaxPriorityFeePerGas_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../actions/public/estimateMaxPriorityFeePerGas.js */ "./node_modules/viem/_esm/actions/public/estimateMaxPriorityFeePerGas.js");
/* harmony import */ var _actions_public_getBalance_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../actions/public/getBalance.js */ "./node_modules/viem/_esm/actions/public/getBalance.js");
/* harmony import */ var _actions_public_getBlobBaseFee_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../actions/public/getBlobBaseFee.js */ "./node_modules/viem/_esm/actions/public/getBlobBaseFee.js");
/* harmony import */ var _actions_public_getBlock_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../actions/public/getBlock.js */ "./node_modules/viem/_esm/actions/public/getBlock.js");
/* harmony import */ var _actions_public_getBlockNumber_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../actions/public/getBlockNumber.js */ "./node_modules/viem/_esm/actions/public/getBlockNumber.js");
/* harmony import */ var _actions_public_getBlockTransactionCount_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../actions/public/getBlockTransactionCount.js */ "./node_modules/viem/_esm/actions/public/getBlockTransactionCount.js");
/* harmony import */ var _actions_public_getChainId_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../actions/public/getChainId.js */ "./node_modules/viem/_esm/actions/public/getChainId.js");
/* harmony import */ var _actions_public_getCode_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../actions/public/getCode.js */ "./node_modules/viem/_esm/actions/public/getCode.js");
/* harmony import */ var _actions_public_getContractEvents_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../actions/public/getContractEvents.js */ "./node_modules/viem/_esm/actions/public/getContractEvents.js");
/* harmony import */ var _actions_public_getEip712Domain_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../actions/public/getEip712Domain.js */ "./node_modules/viem/_esm/actions/public/getEip712Domain.js");
/* harmony import */ var _actions_public_getFeeHistory_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../actions/public/getFeeHistory.js */ "./node_modules/viem/_esm/actions/public/getFeeHistory.js");
/* harmony import */ var _actions_public_getFilterChanges_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../actions/public/getFilterChanges.js */ "./node_modules/viem/_esm/actions/public/getFilterChanges.js");
/* harmony import */ var _actions_public_getFilterLogs_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../actions/public/getFilterLogs.js */ "./node_modules/viem/_esm/actions/public/getFilterLogs.js");
/* harmony import */ var _actions_public_getGasPrice_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../actions/public/getGasPrice.js */ "./node_modules/viem/_esm/actions/public/getGasPrice.js");
/* harmony import */ var _actions_public_getLogs_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../actions/public/getLogs.js */ "./node_modules/viem/_esm/actions/public/getLogs.js");
/* harmony import */ var _actions_public_getProof_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../actions/public/getProof.js */ "./node_modules/viem/_esm/actions/public/getProof.js");
/* harmony import */ var _actions_public_getStorageAt_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../../actions/public/getStorageAt.js */ "./node_modules/viem/_esm/actions/public/getStorageAt.js");
/* harmony import */ var _actions_public_getTransaction_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../actions/public/getTransaction.js */ "./node_modules/viem/_esm/actions/public/getTransaction.js");
/* harmony import */ var _actions_public_getTransactionConfirmations_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../actions/public/getTransactionConfirmations.js */ "./node_modules/viem/_esm/actions/public/getTransactionConfirmations.js");
/* harmony import */ var _actions_public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../../actions/public/getTransactionCount.js */ "./node_modules/viem/_esm/actions/public/getTransactionCount.js");
/* harmony import */ var _actions_public_getTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../../actions/public/getTransactionReceipt.js */ "./node_modules/viem/_esm/actions/public/getTransactionReceipt.js");
/* harmony import */ var _actions_public_multicall_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../../actions/public/multicall.js */ "./node_modules/viem/_esm/actions/public/multicall.js");
/* harmony import */ var _actions_public_readContract_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../../actions/public/readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");
/* harmony import */ var _actions_public_simulateBlocks_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../../actions/public/simulateBlocks.js */ "./node_modules/viem/_esm/actions/public/simulateBlocks.js");
/* harmony import */ var _actions_public_simulateCalls_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../../actions/public/simulateCalls.js */ "./node_modules/viem/_esm/actions/public/simulateCalls.js");
/* harmony import */ var _actions_public_simulateContract_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../../actions/public/simulateContract.js */ "./node_modules/viem/_esm/actions/public/simulateContract.js");
/* harmony import */ var _actions_public_uninstallFilter_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../../actions/public/uninstallFilter.js */ "./node_modules/viem/_esm/actions/public/uninstallFilter.js");
/* harmony import */ var _actions_public_verifyMessage_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../../actions/public/verifyMessage.js */ "./node_modules/viem/_esm/actions/public/verifyMessage.js");
/* harmony import */ var _actions_public_verifyTypedData_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../../actions/public/verifyTypedData.js */ "./node_modules/viem/_esm/actions/public/verifyTypedData.js");
/* harmony import */ var _actions_public_waitForTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../../actions/public/waitForTransactionReceipt.js */ "./node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js");
/* harmony import */ var _actions_public_watchBlockNumber_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../../actions/public/watchBlockNumber.js */ "./node_modules/viem/_esm/actions/public/watchBlockNumber.js");
/* harmony import */ var _actions_public_watchBlocks_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../../actions/public/watchBlocks.js */ "./node_modules/viem/_esm/actions/public/watchBlocks.js");
/* harmony import */ var _actions_public_watchContractEvent_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../../actions/public/watchContractEvent.js */ "./node_modules/viem/_esm/actions/public/watchContractEvent.js");
/* harmony import */ var _actions_public_watchEvent_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../../actions/public/watchEvent.js */ "./node_modules/viem/_esm/actions/public/watchEvent.js");
/* harmony import */ var _actions_public_watchPendingTransactions_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../../actions/public/watchPendingTransactions.js */ "./node_modules/viem/_esm/actions/public/watchPendingTransactions.js");
/* harmony import */ var _actions_siwe_verifySiweMessage_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../../actions/siwe/verifySiweMessage.js */ "./node_modules/viem/_esm/actions/siwe/verifySiweMessage.js");
/* harmony import */ var _actions_wallet_prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../../actions/wallet/prepareTransactionRequest.js */ "./node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js");
/* harmony import */ var _actions_wallet_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../../actions/wallet/sendRawTransaction.js */ "./node_modules/viem/_esm/actions/wallet/sendRawTransaction.js");




















































function publicActions(client) {
    return {
        call: (args) => (0,_actions_public_call_js__WEBPACK_IMPORTED_MODULE_5__.call)(client, args),
        createAccessList: (args) => (0,_actions_public_createAccessList_js__WEBPACK_IMPORTED_MODULE_6__.createAccessList)(client, args),
        createBlockFilter: () => (0,_actions_public_createBlockFilter_js__WEBPACK_IMPORTED_MODULE_7__.createBlockFilter)(client),
        createContractEventFilter: (args) => (0,_actions_public_createContractEventFilter_js__WEBPACK_IMPORTED_MODULE_8__.createContractEventFilter)(client, args),
        createEventFilter: (args) => (0,_actions_public_createEventFilter_js__WEBPACK_IMPORTED_MODULE_9__.createEventFilter)(client, args),
        createPendingTransactionFilter: () => (0,_actions_public_createPendingTransactionFilter_js__WEBPACK_IMPORTED_MODULE_10__.createPendingTransactionFilter)(client),
        estimateContractGas: (args) => (0,_actions_public_estimateContractGas_js__WEBPACK_IMPORTED_MODULE_11__.estimateContractGas)(client, args),
        estimateGas: (args) => (0,_actions_public_estimateGas_js__WEBPACK_IMPORTED_MODULE_13__.estimateGas)(client, args),
        getBalance: (args) => (0,_actions_public_getBalance_js__WEBPACK_IMPORTED_MODULE_15__.getBalance)(client, args),
        getBlobBaseFee: () => (0,_actions_public_getBlobBaseFee_js__WEBPACK_IMPORTED_MODULE_16__.getBlobBaseFee)(client),
        getBlock: (args) => (0,_actions_public_getBlock_js__WEBPACK_IMPORTED_MODULE_17__.getBlock)(client, args),
        getBlockNumber: (args) => (0,_actions_public_getBlockNumber_js__WEBPACK_IMPORTED_MODULE_18__.getBlockNumber)(client, args),
        getBlockTransactionCount: (args) => (0,_actions_public_getBlockTransactionCount_js__WEBPACK_IMPORTED_MODULE_19__.getBlockTransactionCount)(client, args),
        getBytecode: (args) => (0,_actions_public_getCode_js__WEBPACK_IMPORTED_MODULE_21__.getCode)(client, args),
        getChainId: () => (0,_actions_public_getChainId_js__WEBPACK_IMPORTED_MODULE_20__.getChainId)(client),
        getCode: (args) => (0,_actions_public_getCode_js__WEBPACK_IMPORTED_MODULE_21__.getCode)(client, args),
        getContractEvents: (args) => (0,_actions_public_getContractEvents_js__WEBPACK_IMPORTED_MODULE_22__.getContractEvents)(client, args),
        getEip712Domain: (args) => (0,_actions_public_getEip712Domain_js__WEBPACK_IMPORTED_MODULE_23__.getEip712Domain)(client, args),
        getEnsAddress: (args) => (0,_actions_ens_getEnsAddress_js__WEBPACK_IMPORTED_MODULE_0__.getEnsAddress)(client, args),
        getEnsAvatar: (args) => (0,_actions_ens_getEnsAvatar_js__WEBPACK_IMPORTED_MODULE_1__.getEnsAvatar)(client, args),
        getEnsName: (args) => (0,_actions_ens_getEnsName_js__WEBPACK_IMPORTED_MODULE_2__.getEnsName)(client, args),
        getEnsResolver: (args) => (0,_actions_ens_getEnsResolver_js__WEBPACK_IMPORTED_MODULE_3__.getEnsResolver)(client, args),
        getEnsText: (args) => (0,_actions_ens_getEnsText_js__WEBPACK_IMPORTED_MODULE_4__.getEnsText)(client, args),
        getFeeHistory: (args) => (0,_actions_public_getFeeHistory_js__WEBPACK_IMPORTED_MODULE_24__.getFeeHistory)(client, args),
        estimateFeesPerGas: (args) => (0,_actions_public_estimateFeesPerGas_js__WEBPACK_IMPORTED_MODULE_12__.estimateFeesPerGas)(client, args),
        getFilterChanges: (args) => (0,_actions_public_getFilterChanges_js__WEBPACK_IMPORTED_MODULE_25__.getFilterChanges)(client, args),
        getFilterLogs: (args) => (0,_actions_public_getFilterLogs_js__WEBPACK_IMPORTED_MODULE_26__.getFilterLogs)(client, args),
        getGasPrice: () => (0,_actions_public_getGasPrice_js__WEBPACK_IMPORTED_MODULE_27__.getGasPrice)(client),
        getLogs: (args) => (0,_actions_public_getLogs_js__WEBPACK_IMPORTED_MODULE_28__.getLogs)(client, args),
        getProof: (args) => (0,_actions_public_getProof_js__WEBPACK_IMPORTED_MODULE_29__.getProof)(client, args),
        estimateMaxPriorityFeePerGas: (args) => (0,_actions_public_estimateMaxPriorityFeePerGas_js__WEBPACK_IMPORTED_MODULE_14__.estimateMaxPriorityFeePerGas)(client, args),
        getStorageAt: (args) => (0,_actions_public_getStorageAt_js__WEBPACK_IMPORTED_MODULE_30__.getStorageAt)(client, args),
        getTransaction: (args) => (0,_actions_public_getTransaction_js__WEBPACK_IMPORTED_MODULE_31__.getTransaction)(client, args),
        getTransactionConfirmations: (args) => (0,_actions_public_getTransactionConfirmations_js__WEBPACK_IMPORTED_MODULE_32__.getTransactionConfirmations)(client, args),
        getTransactionCount: (args) => (0,_actions_public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_33__.getTransactionCount)(client, args),
        getTransactionReceipt: (args) => (0,_actions_public_getTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_34__.getTransactionReceipt)(client, args),
        multicall: (args) => (0,_actions_public_multicall_js__WEBPACK_IMPORTED_MODULE_35__.multicall)(client, args),
        prepareTransactionRequest: (args) => (0,_actions_wallet_prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_50__.prepareTransactionRequest)(client, args),
        readContract: (args) => (0,_actions_public_readContract_js__WEBPACK_IMPORTED_MODULE_36__.readContract)(client, args),
        sendRawTransaction: (args) => (0,_actions_wallet_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_51__.sendRawTransaction)(client, args),
        simulate: (args) => (0,_actions_public_simulateBlocks_js__WEBPACK_IMPORTED_MODULE_37__.simulateBlocks)(client, args),
        simulateBlocks: (args) => (0,_actions_public_simulateBlocks_js__WEBPACK_IMPORTED_MODULE_37__.simulateBlocks)(client, args),
        simulateCalls: (args) => (0,_actions_public_simulateCalls_js__WEBPACK_IMPORTED_MODULE_38__.simulateCalls)(client, args),
        simulateContract: (args) => (0,_actions_public_simulateContract_js__WEBPACK_IMPORTED_MODULE_39__.simulateContract)(client, args),
        verifyMessage: (args) => (0,_actions_public_verifyMessage_js__WEBPACK_IMPORTED_MODULE_41__.verifyMessage)(client, args),
        verifySiweMessage: (args) => (0,_actions_siwe_verifySiweMessage_js__WEBPACK_IMPORTED_MODULE_49__.verifySiweMessage)(client, args),
        verifyTypedData: (args) => (0,_actions_public_verifyTypedData_js__WEBPACK_IMPORTED_MODULE_42__.verifyTypedData)(client, args),
        uninstallFilter: (args) => (0,_actions_public_uninstallFilter_js__WEBPACK_IMPORTED_MODULE_40__.uninstallFilter)(client, args),
        waitForTransactionReceipt: (args) => (0,_actions_public_waitForTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_43__.waitForTransactionReceipt)(client, args),
        watchBlocks: (args) => (0,_actions_public_watchBlocks_js__WEBPACK_IMPORTED_MODULE_45__.watchBlocks)(client, args),
        watchBlockNumber: (args) => (0,_actions_public_watchBlockNumber_js__WEBPACK_IMPORTED_MODULE_44__.watchBlockNumber)(client, args),
        watchContractEvent: (args) => (0,_actions_public_watchContractEvent_js__WEBPACK_IMPORTED_MODULE_46__.watchContractEvent)(client, args),
        watchEvent: (args) => (0,_actions_public_watchEvent_js__WEBPACK_IMPORTED_MODULE_47__.watchEvent)(client, args),
        watchPendingTransactions: (args) => (0,_actions_public_watchPendingTransactions_js__WEBPACK_IMPORTED_MODULE_48__.watchPendingTransactions)(client, args),
    };
}
//# sourceMappingURL=public.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/decorators/test.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/clients/decorators/test.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   testActions: () => (/* binding */ testActions)
/* harmony export */ });
/* harmony import */ var _actions_test_dropTransaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../actions/test/dropTransaction.js */ "./node_modules/viem/_esm/actions/test/dropTransaction.js");
/* harmony import */ var _actions_test_dumpState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../actions/test/dumpState.js */ "./node_modules/viem/_esm/actions/test/dumpState.js");
/* harmony import */ var _actions_test_getAutomine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../actions/test/getAutomine.js */ "./node_modules/viem/_esm/actions/test/getAutomine.js");
/* harmony import */ var _actions_test_getTxpoolContent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../actions/test/getTxpoolContent.js */ "./node_modules/viem/_esm/actions/test/getTxpoolContent.js");
/* harmony import */ var _actions_test_getTxpoolStatus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../actions/test/getTxpoolStatus.js */ "./node_modules/viem/_esm/actions/test/getTxpoolStatus.js");
/* harmony import */ var _actions_test_impersonateAccount_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../actions/test/impersonateAccount.js */ "./node_modules/viem/_esm/actions/test/impersonateAccount.js");
/* harmony import */ var _actions_test_increaseTime_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../actions/test/increaseTime.js */ "./node_modules/viem/_esm/actions/test/increaseTime.js");
/* harmony import */ var _actions_test_inspectTxpool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../actions/test/inspectTxpool.js */ "./node_modules/viem/_esm/actions/test/inspectTxpool.js");
/* harmony import */ var _actions_test_loadState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../actions/test/loadState.js */ "./node_modules/viem/_esm/actions/test/loadState.js");
/* harmony import */ var _actions_test_mine_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../actions/test/mine.js */ "./node_modules/viem/_esm/actions/test/mine.js");
/* harmony import */ var _actions_test_removeBlockTimestampInterval_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../actions/test/removeBlockTimestampInterval.js */ "./node_modules/viem/_esm/actions/test/removeBlockTimestampInterval.js");
/* harmony import */ var _actions_test_reset_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../actions/test/reset.js */ "./node_modules/viem/_esm/actions/test/reset.js");
/* harmony import */ var _actions_test_revert_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../actions/test/revert.js */ "./node_modules/viem/_esm/actions/test/revert.js");
/* harmony import */ var _actions_test_sendUnsignedTransaction_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../actions/test/sendUnsignedTransaction.js */ "./node_modules/viem/_esm/actions/test/sendUnsignedTransaction.js");
/* harmony import */ var _actions_test_setAutomine_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../actions/test/setAutomine.js */ "./node_modules/viem/_esm/actions/test/setAutomine.js");
/* harmony import */ var _actions_test_setBalance_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../actions/test/setBalance.js */ "./node_modules/viem/_esm/actions/test/setBalance.js");
/* harmony import */ var _actions_test_setBlockGasLimit_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../actions/test/setBlockGasLimit.js */ "./node_modules/viem/_esm/actions/test/setBlockGasLimit.js");
/* harmony import */ var _actions_test_setBlockTimestampInterval_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../actions/test/setBlockTimestampInterval.js */ "./node_modules/viem/_esm/actions/test/setBlockTimestampInterval.js");
/* harmony import */ var _actions_test_setCode_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../actions/test/setCode.js */ "./node_modules/viem/_esm/actions/test/setCode.js");
/* harmony import */ var _actions_test_setCoinbase_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../actions/test/setCoinbase.js */ "./node_modules/viem/_esm/actions/test/setCoinbase.js");
/* harmony import */ var _actions_test_setIntervalMining_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../actions/test/setIntervalMining.js */ "./node_modules/viem/_esm/actions/test/setIntervalMining.js");
/* harmony import */ var _actions_test_setLoggingEnabled_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../actions/test/setLoggingEnabled.js */ "./node_modules/viem/_esm/actions/test/setLoggingEnabled.js");
/* harmony import */ var _actions_test_setMinGasPrice_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../actions/test/setMinGasPrice.js */ "./node_modules/viem/_esm/actions/test/setMinGasPrice.js");
/* harmony import */ var _actions_test_setNextBlockBaseFeePerGas_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../actions/test/setNextBlockBaseFeePerGas.js */ "./node_modules/viem/_esm/actions/test/setNextBlockBaseFeePerGas.js");
/* harmony import */ var _actions_test_setNextBlockTimestamp_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../actions/test/setNextBlockTimestamp.js */ "./node_modules/viem/_esm/actions/test/setNextBlockTimestamp.js");
/* harmony import */ var _actions_test_setNonce_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../actions/test/setNonce.js */ "./node_modules/viem/_esm/actions/test/setNonce.js");
/* harmony import */ var _actions_test_setRpcUrl_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../actions/test/setRpcUrl.js */ "./node_modules/viem/_esm/actions/test/setRpcUrl.js");
/* harmony import */ var _actions_test_setStorageAt_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../actions/test/setStorageAt.js */ "./node_modules/viem/_esm/actions/test/setStorageAt.js");
/* harmony import */ var _actions_test_snapshot_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../actions/test/snapshot.js */ "./node_modules/viem/_esm/actions/test/snapshot.js");
/* harmony import */ var _actions_test_stopImpersonatingAccount_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../actions/test/stopImpersonatingAccount.js */ "./node_modules/viem/_esm/actions/test/stopImpersonatingAccount.js");






























function testActions({ mode, }) {
    return (client_) => {
        const client = client_.extend(() => ({
            mode,
        }));
        return {
            dropTransaction: (args) => (0,_actions_test_dropTransaction_js__WEBPACK_IMPORTED_MODULE_0__.dropTransaction)(client, args),
            dumpState: () => (0,_actions_test_dumpState_js__WEBPACK_IMPORTED_MODULE_1__.dumpState)(client),
            getAutomine: () => (0,_actions_test_getAutomine_js__WEBPACK_IMPORTED_MODULE_2__.getAutomine)(client),
            getTxpoolContent: () => (0,_actions_test_getTxpoolContent_js__WEBPACK_IMPORTED_MODULE_3__.getTxpoolContent)(client),
            getTxpoolStatus: () => (0,_actions_test_getTxpoolStatus_js__WEBPACK_IMPORTED_MODULE_4__.getTxpoolStatus)(client),
            impersonateAccount: (args) => (0,_actions_test_impersonateAccount_js__WEBPACK_IMPORTED_MODULE_5__.impersonateAccount)(client, args),
            increaseTime: (args) => (0,_actions_test_increaseTime_js__WEBPACK_IMPORTED_MODULE_6__.increaseTime)(client, args),
            inspectTxpool: () => (0,_actions_test_inspectTxpool_js__WEBPACK_IMPORTED_MODULE_7__.inspectTxpool)(client),
            loadState: (args) => (0,_actions_test_loadState_js__WEBPACK_IMPORTED_MODULE_8__.loadState)(client, args),
            mine: (args) => (0,_actions_test_mine_js__WEBPACK_IMPORTED_MODULE_9__.mine)(client, args),
            removeBlockTimestampInterval: () => (0,_actions_test_removeBlockTimestampInterval_js__WEBPACK_IMPORTED_MODULE_10__.removeBlockTimestampInterval)(client),
            reset: (args) => (0,_actions_test_reset_js__WEBPACK_IMPORTED_MODULE_11__.reset)(client, args),
            revert: (args) => (0,_actions_test_revert_js__WEBPACK_IMPORTED_MODULE_12__.revert)(client, args),
            sendUnsignedTransaction: (args) => (0,_actions_test_sendUnsignedTransaction_js__WEBPACK_IMPORTED_MODULE_13__.sendUnsignedTransaction)(client, args),
            setAutomine: (args) => (0,_actions_test_setAutomine_js__WEBPACK_IMPORTED_MODULE_14__.setAutomine)(client, args),
            setBalance: (args) => (0,_actions_test_setBalance_js__WEBPACK_IMPORTED_MODULE_15__.setBalance)(client, args),
            setBlockGasLimit: (args) => (0,_actions_test_setBlockGasLimit_js__WEBPACK_IMPORTED_MODULE_16__.setBlockGasLimit)(client, args),
            setBlockTimestampInterval: (args) => (0,_actions_test_setBlockTimestampInterval_js__WEBPACK_IMPORTED_MODULE_17__.setBlockTimestampInterval)(client, args),
            setCode: (args) => (0,_actions_test_setCode_js__WEBPACK_IMPORTED_MODULE_18__.setCode)(client, args),
            setCoinbase: (args) => (0,_actions_test_setCoinbase_js__WEBPACK_IMPORTED_MODULE_19__.setCoinbase)(client, args),
            setIntervalMining: (args) => (0,_actions_test_setIntervalMining_js__WEBPACK_IMPORTED_MODULE_20__.setIntervalMining)(client, args),
            setLoggingEnabled: (args) => (0,_actions_test_setLoggingEnabled_js__WEBPACK_IMPORTED_MODULE_21__.setLoggingEnabled)(client, args),
            setMinGasPrice: (args) => (0,_actions_test_setMinGasPrice_js__WEBPACK_IMPORTED_MODULE_22__.setMinGasPrice)(client, args),
            setNextBlockBaseFeePerGas: (args) => (0,_actions_test_setNextBlockBaseFeePerGas_js__WEBPACK_IMPORTED_MODULE_23__.setNextBlockBaseFeePerGas)(client, args),
            setNextBlockTimestamp: (args) => (0,_actions_test_setNextBlockTimestamp_js__WEBPACK_IMPORTED_MODULE_24__.setNextBlockTimestamp)(client, args),
            setNonce: (args) => (0,_actions_test_setNonce_js__WEBPACK_IMPORTED_MODULE_25__.setNonce)(client, args),
            setRpcUrl: (args) => (0,_actions_test_setRpcUrl_js__WEBPACK_IMPORTED_MODULE_26__.setRpcUrl)(client, args),
            setStorageAt: (args) => (0,_actions_test_setStorageAt_js__WEBPACK_IMPORTED_MODULE_27__.setStorageAt)(client, args),
            snapshot: () => (0,_actions_test_snapshot_js__WEBPACK_IMPORTED_MODULE_28__.snapshot)(client),
            stopImpersonatingAccount: (args) => (0,_actions_test_stopImpersonatingAccount_js__WEBPACK_IMPORTED_MODULE_29__.stopImpersonatingAccount)(client, args),
        };
    };
}
//# sourceMappingURL=test.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/decorators/wallet.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/decorators/wallet.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   walletActions: () => (/* binding */ walletActions)
/* harmony export */ });
/* harmony import */ var _actions_public_getChainId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../actions/public/getChainId.js */ "./node_modules/viem/_esm/actions/public/getChainId.js");
/* harmony import */ var _actions_wallet_addChain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../actions/wallet/addChain.js */ "./node_modules/viem/_esm/actions/wallet/addChain.js");
/* harmony import */ var _actions_wallet_deployContract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../actions/wallet/deployContract.js */ "./node_modules/viem/_esm/actions/wallet/deployContract.js");
/* harmony import */ var _actions_wallet_getAddresses_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../actions/wallet/getAddresses.js */ "./node_modules/viem/_esm/actions/wallet/getAddresses.js");
/* harmony import */ var _actions_wallet_getCallsStatus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../actions/wallet/getCallsStatus.js */ "./node_modules/viem/_esm/actions/wallet/getCallsStatus.js");
/* harmony import */ var _actions_wallet_getCapabilities_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../actions/wallet/getCapabilities.js */ "./node_modules/viem/_esm/actions/wallet/getCapabilities.js");
/* harmony import */ var _actions_wallet_getPermissions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../actions/wallet/getPermissions.js */ "./node_modules/viem/_esm/actions/wallet/getPermissions.js");
/* harmony import */ var _actions_wallet_prepareAuthorization_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../actions/wallet/prepareAuthorization.js */ "./node_modules/viem/_esm/actions/wallet/prepareAuthorization.js");
/* harmony import */ var _actions_wallet_prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../actions/wallet/prepareTransactionRequest.js */ "./node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js");
/* harmony import */ var _actions_wallet_requestAddresses_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../actions/wallet/requestAddresses.js */ "./node_modules/viem/_esm/actions/wallet/requestAddresses.js");
/* harmony import */ var _actions_wallet_requestPermissions_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../actions/wallet/requestPermissions.js */ "./node_modules/viem/_esm/actions/wallet/requestPermissions.js");
/* harmony import */ var _actions_wallet_sendCalls_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../actions/wallet/sendCalls.js */ "./node_modules/viem/_esm/actions/wallet/sendCalls.js");
/* harmony import */ var _actions_wallet_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../actions/wallet/sendRawTransaction.js */ "./node_modules/viem/_esm/actions/wallet/sendRawTransaction.js");
/* harmony import */ var _actions_wallet_sendTransaction_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../actions/wallet/sendTransaction.js */ "./node_modules/viem/_esm/actions/wallet/sendTransaction.js");
/* harmony import */ var _actions_wallet_showCallsStatus_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../actions/wallet/showCallsStatus.js */ "./node_modules/viem/_esm/actions/wallet/showCallsStatus.js");
/* harmony import */ var _actions_wallet_signAuthorization_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../actions/wallet/signAuthorization.js */ "./node_modules/viem/_esm/actions/wallet/signAuthorization.js");
/* harmony import */ var _actions_wallet_signMessage_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../actions/wallet/signMessage.js */ "./node_modules/viem/_esm/actions/wallet/signMessage.js");
/* harmony import */ var _actions_wallet_signTransaction_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../actions/wallet/signTransaction.js */ "./node_modules/viem/_esm/actions/wallet/signTransaction.js");
/* harmony import */ var _actions_wallet_signTypedData_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../actions/wallet/signTypedData.js */ "./node_modules/viem/_esm/actions/wallet/signTypedData.js");
/* harmony import */ var _actions_wallet_switchChain_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../actions/wallet/switchChain.js */ "./node_modules/viem/_esm/actions/wallet/switchChain.js");
/* harmony import */ var _actions_wallet_waitForCallsStatus_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../actions/wallet/waitForCallsStatus.js */ "./node_modules/viem/_esm/actions/wallet/waitForCallsStatus.js");
/* harmony import */ var _actions_wallet_watchAsset_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../actions/wallet/watchAsset.js */ "./node_modules/viem/_esm/actions/wallet/watchAsset.js");
/* harmony import */ var _actions_wallet_writeContract_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../actions/wallet/writeContract.js */ "./node_modules/viem/_esm/actions/wallet/writeContract.js");























function walletActions(client) {
    return {
        addChain: (args) => (0,_actions_wallet_addChain_js__WEBPACK_IMPORTED_MODULE_1__.addChain)(client, args),
        deployContract: (args) => (0,_actions_wallet_deployContract_js__WEBPACK_IMPORTED_MODULE_2__.deployContract)(client, args),
        getAddresses: () => (0,_actions_wallet_getAddresses_js__WEBPACK_IMPORTED_MODULE_3__.getAddresses)(client),
        getCallsStatus: (args) => (0,_actions_wallet_getCallsStatus_js__WEBPACK_IMPORTED_MODULE_4__.getCallsStatus)(client, args),
        getCapabilities: (args) => (0,_actions_wallet_getCapabilities_js__WEBPACK_IMPORTED_MODULE_5__.getCapabilities)(client, args),
        getChainId: () => (0,_actions_public_getChainId_js__WEBPACK_IMPORTED_MODULE_0__.getChainId)(client),
        getPermissions: () => (0,_actions_wallet_getPermissions_js__WEBPACK_IMPORTED_MODULE_6__.getPermissions)(client),
        prepareAuthorization: (args) => (0,_actions_wallet_prepareAuthorization_js__WEBPACK_IMPORTED_MODULE_7__.prepareAuthorization)(client, args),
        prepareTransactionRequest: (args) => (0,_actions_wallet_prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_8__.prepareTransactionRequest)(client, args),
        requestAddresses: () => (0,_actions_wallet_requestAddresses_js__WEBPACK_IMPORTED_MODULE_9__.requestAddresses)(client),
        requestPermissions: (args) => (0,_actions_wallet_requestPermissions_js__WEBPACK_IMPORTED_MODULE_10__.requestPermissions)(client, args),
        sendCalls: (args) => (0,_actions_wallet_sendCalls_js__WEBPACK_IMPORTED_MODULE_11__.sendCalls)(client, args),
        sendRawTransaction: (args) => (0,_actions_wallet_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_12__.sendRawTransaction)(client, args),
        sendTransaction: (args) => (0,_actions_wallet_sendTransaction_js__WEBPACK_IMPORTED_MODULE_13__.sendTransaction)(client, args),
        showCallsStatus: (args) => (0,_actions_wallet_showCallsStatus_js__WEBPACK_IMPORTED_MODULE_14__.showCallsStatus)(client, args),
        signAuthorization: (args) => (0,_actions_wallet_signAuthorization_js__WEBPACK_IMPORTED_MODULE_15__.signAuthorization)(client, args),
        signMessage: (args) => (0,_actions_wallet_signMessage_js__WEBPACK_IMPORTED_MODULE_16__.signMessage)(client, args),
        signTransaction: (args) => (0,_actions_wallet_signTransaction_js__WEBPACK_IMPORTED_MODULE_17__.signTransaction)(client, args),
        signTypedData: (args) => (0,_actions_wallet_signTypedData_js__WEBPACK_IMPORTED_MODULE_18__.signTypedData)(client, args),
        switchChain: (args) => (0,_actions_wallet_switchChain_js__WEBPACK_IMPORTED_MODULE_19__.switchChain)(client, args),
        waitForCallsStatus: (args) => (0,_actions_wallet_waitForCallsStatus_js__WEBPACK_IMPORTED_MODULE_20__.waitForCallsStatus)(client, args),
        watchAsset: (args) => (0,_actions_wallet_watchAsset_js__WEBPACK_IMPORTED_MODULE_21__.watchAsset)(client, args),
        writeContract: (args) => (0,_actions_wallet_writeContract_js__WEBPACK_IMPORTED_MODULE_22__.writeContract)(client, args),
    };
}
//# sourceMappingURL=wallet.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/transports/createTransport.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/transports/createTransport.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createTransport: () => (/* binding */ createTransport)
/* harmony export */ });
/* harmony import */ var _utils_buildRequest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/buildRequest.js */ "./node_modules/viem/_esm/utils/buildRequest.js");
/* harmony import */ var _utils_uid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/uid.js */ "./node_modules/viem/_esm/utils/uid.js");


/**
 * @description Creates an transport intended to be used with a client.
 */
function createTransport({ key, methods, name, request, retryCount = 3, retryDelay = 150, timeout, type, }, value) {
    const uid = (0,_utils_uid_js__WEBPACK_IMPORTED_MODULE_1__.uid)();
    return {
        config: {
            key,
            methods,
            name,
            request,
            retryCount,
            retryDelay,
            timeout,
            type,
        },
        request: (0,_utils_buildRequest_js__WEBPACK_IMPORTED_MODULE_0__.buildRequest)(request, { methods, retryCount, retryDelay, uid }),
        value,
    };
}
//# sourceMappingURL=createTransport.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/transports/custom.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/transports/custom.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   custom: () => (/* binding */ custom)
/* harmony export */ });
/* harmony import */ var _createTransport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createTransport.js */ "./node_modules/viem/_esm/clients/transports/createTransport.js");

/**
 * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.
 */
function custom(provider, config = {}) {
    const { key = 'custom', methods, name = 'Custom Provider', retryDelay, } = config;
    return ({ retryCount: defaultRetryCount }) => (0,_createTransport_js__WEBPACK_IMPORTED_MODULE_0__.createTransport)({
        key,
        methods,
        name,
        request: provider.request.bind(provider),
        retryCount: config.retryCount ?? defaultRetryCount,
        retryDelay,
        type: 'custom',
    });
}
//# sourceMappingURL=custom.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/transports/fallback.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/transports/fallback.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fallback: () => (/* binding */ fallback),
/* harmony export */   rankTransports: () => (/* binding */ rankTransports),
/* harmony export */   shouldThrow: () => (/* binding */ shouldThrow)
/* harmony export */ });
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _errors_rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/rpc.js */ "./node_modules/viem/_esm/errors/rpc.js");
/* harmony import */ var _utils_wait_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/wait.js */ "./node_modules/viem/_esm/utils/wait.js");
/* harmony import */ var _createTransport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createTransport.js */ "./node_modules/viem/_esm/clients/transports/createTransport.js");




function fallback(transports_, config = {}) {
    const { key = 'fallback', name = 'Fallback', rank = false, shouldThrow: shouldThrow_ = shouldThrow, retryCount, retryDelay, } = config;
    return (({ chain, pollingInterval = 4_000, timeout, ...rest }) => {
        let transports = transports_;
        let onResponse = () => { };
        const transport = (0,_createTransport_js__WEBPACK_IMPORTED_MODULE_3__.createTransport)({
            key,
            name,
            async request({ method, params }) {
                let includes;
                const fetch = async (i = 0) => {
                    const transport = transports[i]({
                        ...rest,
                        chain,
                        retryCount: 0,
                        timeout,
                    });
                    try {
                        const response = await transport.request({
                            method,
                            params,
                        });
                        onResponse({
                            method,
                            params: params,
                            response,
                            transport,
                            status: 'success',
                        });
                        return response;
                    }
                    catch (err) {
                        onResponse({
                            error: err,
                            method,
                            params: params,
                            transport,
                            status: 'error',
                        });
                        if (shouldThrow_(err))
                            throw err;
                        // If we've reached the end of the fallbacks, throw the error.
                        if (i === transports.length - 1)
                            throw err;
                        // Check if at least one other transport includes the method
                        includes ??= transports.slice(i + 1).some((transport) => {
                            const { include, exclude } = transport({ chain }).config.methods || {};
                            if (include)
                                return include.includes(method);
                            if (exclude)
                                return !exclude.includes(method);
                            return true;
                        });
                        if (!includes)
                            throw err;
                        // Otherwise, try the next fallback.
                        return fetch(i + 1);
                    }
                };
                return fetch();
            },
            retryCount,
            retryDelay,
            type: 'fallback',
        }, {
            onResponse: (fn) => (onResponse = fn),
            transports: transports.map((fn) => fn({ chain, retryCount: 0 })),
        });
        if (rank) {
            const rankOptions = (typeof rank === 'object' ? rank : {});
            rankTransports({
                chain,
                interval: rankOptions.interval ?? pollingInterval,
                onTransports: (transports_) => (transports = transports_),
                ping: rankOptions.ping,
                sampleCount: rankOptions.sampleCount,
                timeout: rankOptions.timeout,
                transports,
                weights: rankOptions.weights,
            });
        }
        return transport;
    });
}
function shouldThrow(error) {
    if ('code' in error && typeof error.code === 'number') {
        if (error.code === _errors_rpc_js__WEBPACK_IMPORTED_MODULE_1__.TransactionRejectedRpcError.code ||
            error.code === _errors_rpc_js__WEBPACK_IMPORTED_MODULE_1__.UserRejectedRequestError.code ||
            _errors_node_js__WEBPACK_IMPORTED_MODULE_0__.ExecutionRevertedError.nodeMessage.test(error.message) ||
            error.code === 5000 // CAIP UserRejectedRequestError
        )
            return true;
    }
    return false;
}
/** @internal */
function rankTransports({ chain, interval = 4_000, onTransports, ping, sampleCount = 10, timeout = 1_000, transports, weights = {}, }) {
    const { stability: stabilityWeight = 0.7, latency: latencyWeight = 0.3 } = weights;
    const samples = [];
    const rankTransports_ = async () => {
        // 1. Take a sample from each Transport.
        const sample = await Promise.all(transports.map(async (transport) => {
            const transport_ = transport({ chain, retryCount: 0, timeout });
            const start = Date.now();
            let end;
            let success;
            try {
                await (ping
                    ? ping({ transport: transport_ })
                    : transport_.request({ method: 'net_listening' }));
                success = 1;
            }
            catch {
                success = 0;
            }
            finally {
                end = Date.now();
            }
            const latency = end - start;
            return { latency, success };
        }));
        // 2. Store the sample. If we have more than `sampleCount` samples, remove
        // the oldest sample.
        samples.push(sample);
        if (samples.length > sampleCount)
            samples.shift();
        // 3. Calculate the max latency from samples.
        const maxLatency = Math.max(...samples.map((sample) => Math.max(...sample.map(({ latency }) => latency))));
        // 4. Calculate the score for each Transport.
        const scores = transports
            .map((_, i) => {
            const latencies = samples.map((sample) => sample[i].latency);
            const meanLatency = latencies.reduce((acc, latency) => acc + latency, 0) /
                latencies.length;
            const latencyScore = 1 - meanLatency / maxLatency;
            const successes = samples.map((sample) => sample[i].success);
            const stabilityScore = successes.reduce((acc, success) => acc + success, 0) /
                successes.length;
            if (stabilityScore === 0)
                return [0, i];
            return [
                latencyWeight * latencyScore + stabilityWeight * stabilityScore,
                i,
            ];
        })
            .sort((a, b) => b[0] - a[0]);
        // 5. Sort the Transports by score.
        onTransports(scores.map(([, i]) => transports[i]));
        // 6. Wait, and then rank again.
        await (0,_utils_wait_js__WEBPACK_IMPORTED_MODULE_2__.wait)(interval);
        rankTransports_();
    };
    rankTransports_();
}
//# sourceMappingURL=fallback.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/transports/http.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/clients/transports/http.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   http: () => (/* binding */ http)
/* harmony export */ });
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _errors_transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/transport.js */ "./node_modules/viem/_esm/errors/transport.js");
/* harmony import */ var _utils_promise_createBatchScheduler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/promise/createBatchScheduler.js */ "./node_modules/viem/_esm/utils/promise/createBatchScheduler.js");
/* harmony import */ var _utils_rpc_http_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/rpc/http.js */ "./node_modules/viem/_esm/utils/rpc/http.js");
/* harmony import */ var _createTransport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createTransport.js */ "./node_modules/viem/_esm/clients/transports/createTransport.js");





/**
 * @description Creates a HTTP transport that connects to a JSON-RPC API.
 */
function http(
/** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */
url, config = {}) {
    const { batch, fetchOptions, key = 'http', methods, name = 'HTTP JSON-RPC', onFetchRequest, onFetchResponse, retryDelay, raw, } = config;
    return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {
        const { batchSize = 1000, wait = 0 } = typeof batch === 'object' ? batch : {};
        const retryCount = config.retryCount ?? retryCount_;
        const timeout = timeout_ ?? config.timeout ?? 10_000;
        const url_ = url || chain?.rpcUrls.default.http[0];
        if (!url_)
            throw new _errors_transport_js__WEBPACK_IMPORTED_MODULE_1__.UrlRequiredError();
        const rpcClient = (0,_utils_rpc_http_js__WEBPACK_IMPORTED_MODULE_3__.getHttpRpcClient)(url_, {
            fetchOptions,
            onRequest: onFetchRequest,
            onResponse: onFetchResponse,
            timeout,
        });
        return (0,_createTransport_js__WEBPACK_IMPORTED_MODULE_4__.createTransport)({
            key,
            methods,
            name,
            async request({ method, params }) {
                const body = { method, params };
                const { schedule } = (0,_utils_promise_createBatchScheduler_js__WEBPACK_IMPORTED_MODULE_2__.createBatchScheduler)({
                    id: url_,
                    wait,
                    shouldSplitBatch(requests) {
                        return requests.length > batchSize;
                    },
                    fn: (body) => rpcClient.request({
                        body,
                    }),
                    sort: (a, b) => a.id - b.id,
                });
                const fn = async (body) => batch
                    ? schedule(body)
                    : [
                        await rpcClient.request({
                            body,
                        }),
                    ];
                const [{ error, result }] = await fn(body);
                if (raw)
                    return { error, result };
                if (error)
                    throw new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.RpcRequestError({
                        body,
                        error,
                        url: url_,
                    });
                return result;
            },
            retryCount,
            retryDelay,
            timeout,
            type: 'http',
        }, {
            fetchOptions,
            url: url_,
        });
    };
}
//# sourceMappingURL=http.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/clients/transports/webSocket.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/clients/transports/webSocket.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   webSocket: () => (/* binding */ webSocket)
/* harmony export */ });
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _errors_transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/transport.js */ "./node_modules/viem/_esm/errors/transport.js");
/* harmony import */ var _utils_rpc_compat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/rpc/compat.js */ "./node_modules/viem/_esm/utils/rpc/compat.js");
/* harmony import */ var _utils_rpc_webSocket_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/rpc/webSocket.js */ "./node_modules/viem/_esm/utils/rpc/webSocket.js");
/* harmony import */ var _createTransport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createTransport.js */ "./node_modules/viem/_esm/clients/transports/createTransport.js");





/**
 * @description Creates a WebSocket transport that connects to a JSON-RPC API.
 */
function webSocket(
/** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */
url, config = {}) {
    const { keepAlive, key = 'webSocket', methods, name = 'WebSocket JSON-RPC', reconnect, retryDelay, } = config;
    return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {
        const retryCount = config.retryCount ?? retryCount_;
        const timeout = timeout_ ?? config.timeout ?? 10_000;
        const url_ = url || chain?.rpcUrls.default.webSocket?.[0];
        const wsRpcClientOpts = { keepAlive, reconnect };
        if (!url_)
            throw new _errors_transport_js__WEBPACK_IMPORTED_MODULE_1__.UrlRequiredError();
        return (0,_createTransport_js__WEBPACK_IMPORTED_MODULE_4__.createTransport)({
            key,
            methods,
            name,
            async request({ method, params }) {
                const body = { method, params };
                const rpcClient = await (0,_utils_rpc_webSocket_js__WEBPACK_IMPORTED_MODULE_3__.getWebSocketRpcClient)(url_, wsRpcClientOpts);
                const { error, result } = await rpcClient.requestAsync({
                    body,
                    timeout,
                });
                if (error)
                    throw new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.RpcRequestError({
                        body,
                        error,
                        url: url_,
                    });
                return result;
            },
            retryCount,
            retryDelay,
            timeout,
            type: 'webSocket',
        }, {
            getSocket() {
                return (0,_utils_rpc_compat_js__WEBPACK_IMPORTED_MODULE_2__.getSocket)(url_);
            },
            getRpcClient() {
                return (0,_utils_rpc_webSocket_js__WEBPACK_IMPORTED_MODULE_3__.getWebSocketRpcClient)(url_, wsRpcClientOpts);
            },
            async subscribe({ params, onData, onError }) {
                const rpcClient = await (0,_utils_rpc_webSocket_js__WEBPACK_IMPORTED_MODULE_3__.getWebSocketRpcClient)(url_, wsRpcClientOpts);
                const { result: subscriptionId } = await new Promise((resolve, reject) => rpcClient.request({
                    body: {
                        method: 'eth_subscribe',
                        params,
                    },
                    onError(error) {
                        reject(error);
                        onError?.(error);
                        return;
                    },
                    onResponse(response) {
                        if (response.error) {
                            reject(response.error);
                            onError?.(response.error);
                            return;
                        }
                        if (typeof response.id === 'number') {
                            resolve(response);
                            return;
                        }
                        if (response.method !== 'eth_subscription')
                            return;
                        onData(response.params);
                    },
                }));
                return {
                    subscriptionId,
                    async unsubscribe() {
                        return new Promise((resolve) => rpcClient.request({
                            body: {
                                method: 'eth_unsubscribe',
                                params: [subscriptionId],
                            },
                            onResponse: resolve,
                        }));
                    },
                };
            },
        });
    };
}
//# sourceMappingURL=webSocket.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/abis.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/constants/abis.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addressResolverAbi: () => (/* binding */ addressResolverAbi),
/* harmony export */   batchGatewayAbi: () => (/* binding */ batchGatewayAbi),
/* harmony export */   erc1155Abi: () => (/* binding */ erc1155Abi),
/* harmony export */   erc20Abi: () => (/* binding */ erc20Abi),
/* harmony export */   erc20Abi_bytes32: () => (/* binding */ erc20Abi_bytes32),
/* harmony export */   erc4626Abi: () => (/* binding */ erc4626Abi),
/* harmony export */   erc721Abi: () => (/* binding */ erc721Abi),
/* harmony export */   multicall3Abi: () => (/* binding */ multicall3Abi),
/* harmony export */   smartAccountAbi: () => (/* binding */ smartAccountAbi),
/* harmony export */   textResolverAbi: () => (/* binding */ textResolverAbi),
/* harmony export */   universalResolverResolveAbi: () => (/* binding */ universalResolverResolveAbi),
/* harmony export */   universalResolverReverseAbi: () => (/* binding */ universalResolverReverseAbi),
/* harmony export */   universalSignatureValidatorAbi: () => (/* binding */ universalSignatureValidatorAbi)
/* harmony export */ });
/* [Multicall3](https://github.com/mds1/multicall) */
const multicall3Abi = [
    {
        inputs: [
            {
                components: [
                    {
                        name: 'target',
                        type: 'address',
                    },
                    {
                        name: 'allowFailure',
                        type: 'bool',
                    },
                    {
                        name: 'callData',
                        type: 'bytes',
                    },
                ],
                name: 'calls',
                type: 'tuple[]',
            },
        ],
        name: 'aggregate3',
        outputs: [
            {
                components: [
                    {
                        name: 'success',
                        type: 'bool',
                    },
                    {
                        name: 'returnData',
                        type: 'bytes',
                    },
                ],
                name: 'returnData',
                type: 'tuple[]',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
const batchGatewayAbi = [
    {
        name: 'query',
        type: 'function',
        stateMutability: 'view',
        inputs: [
            {
                type: 'tuple[]',
                name: 'queries',
                components: [
                    {
                        type: 'address',
                        name: 'sender',
                    },
                    {
                        type: 'string[]',
                        name: 'urls',
                    },
                    {
                        type: 'bytes',
                        name: 'data',
                    },
                ],
            },
        ],
        outputs: [
            {
                type: 'bool[]',
                name: 'failures',
            },
            {
                type: 'bytes[]',
                name: 'responses',
            },
        ],
    },
    {
        name: 'HttpError',
        type: 'error',
        inputs: [
            {
                type: 'uint16',
                name: 'status',
            },
            {
                type: 'string',
                name: 'message',
            },
        ],
    },
];
const universalResolverErrors = [
    {
        inputs: [],
        name: 'ResolverNotFound',
        type: 'error',
    },
    {
        inputs: [],
        name: 'ResolverWildcardNotSupported',
        type: 'error',
    },
    {
        inputs: [],
        name: 'ResolverNotContract',
        type: 'error',
    },
    {
        inputs: [
            {
                name: 'returnData',
                type: 'bytes',
            },
        ],
        name: 'ResolverError',
        type: 'error',
    },
    {
        inputs: [
            {
                components: [
                    {
                        name: 'status',
                        type: 'uint16',
                    },
                    {
                        name: 'message',
                        type: 'string',
                    },
                ],
                name: 'errors',
                type: 'tuple[]',
            },
        ],
        name: 'HttpError',
        type: 'error',
    },
];
const universalResolverResolveAbi = [
    ...universalResolverErrors,
    {
        name: 'resolve',
        type: 'function',
        stateMutability: 'view',
        inputs: [
            { name: 'name', type: 'bytes' },
            { name: 'data', type: 'bytes' },
        ],
        outputs: [
            { name: '', type: 'bytes' },
            { name: 'address', type: 'address' },
        ],
    },
    {
        name: 'resolve',
        type: 'function',
        stateMutability: 'view',
        inputs: [
            { name: 'name', type: 'bytes' },
            { name: 'data', type: 'bytes' },
            { name: 'gateways', type: 'string[]' },
        ],
        outputs: [
            { name: '', type: 'bytes' },
            { name: 'address', type: 'address' },
        ],
    },
];
const universalResolverReverseAbi = [
    ...universalResolverErrors,
    {
        name: 'reverse',
        type: 'function',
        stateMutability: 'view',
        inputs: [{ type: 'bytes', name: 'reverseName' }],
        outputs: [
            { type: 'string', name: 'resolvedName' },
            { type: 'address', name: 'resolvedAddress' },
            { type: 'address', name: 'reverseResolver' },
            { type: 'address', name: 'resolver' },
        ],
    },
    {
        name: 'reverse',
        type: 'function',
        stateMutability: 'view',
        inputs: [
            { type: 'bytes', name: 'reverseName' },
            { type: 'string[]', name: 'gateways' },
        ],
        outputs: [
            { type: 'string', name: 'resolvedName' },
            { type: 'address', name: 'resolvedAddress' },
            { type: 'address', name: 'reverseResolver' },
            { type: 'address', name: 'resolver' },
        ],
    },
];
const textResolverAbi = [
    {
        name: 'text',
        type: 'function',
        stateMutability: 'view',
        inputs: [
            { name: 'name', type: 'bytes32' },
            { name: 'key', type: 'string' },
        ],
        outputs: [{ name: '', type: 'string' }],
    },
];
const addressResolverAbi = [
    {
        name: 'addr',
        type: 'function',
        stateMutability: 'view',
        inputs: [{ name: 'name', type: 'bytes32' }],
        outputs: [{ name: '', type: 'address' }],
    },
    {
        name: 'addr',
        type: 'function',
        stateMutability: 'view',
        inputs: [
            { name: 'name', type: 'bytes32' },
            { name: 'coinType', type: 'uint256' },
        ],
        outputs: [{ name: '', type: 'bytes' }],
    },
];
// ERC-1271
// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue
/** @internal */
const smartAccountAbi = [
    {
        name: 'isValidSignature',
        type: 'function',
        stateMutability: 'view',
        inputs: [
            { name: 'hash', type: 'bytes32' },
            { name: 'signature', type: 'bytes' },
        ],
        outputs: [{ name: '', type: 'bytes4' }],
    },
];
// ERC-6492 - universal deployless signature validator contract
// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue
// returnValue is either 0x1 (valid) or 0x0 (invalid)
const universalSignatureValidatorAbi = [
    {
        inputs: [
            {
                name: '_signer',
                type: 'address',
            },
            {
                name: '_hash',
                type: 'bytes32',
            },
            {
                name: '_signature',
                type: 'bytes',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                name: '_signer',
                type: 'address',
            },
            {
                name: '_hash',
                type: 'bytes32',
            },
            {
                name: '_signature',
                type: 'bytes',
            },
        ],
        outputs: [
            {
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
        name: 'isValidSig',
    },
];
/** [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20) */
const erc20Abi = [
    {
        type: 'event',
        name: 'Approval',
        inputs: [
            {
                indexed: true,
                name: 'owner',
                type: 'address',
            },
            {
                indexed: true,
                name: 'spender',
                type: 'address',
            },
            {
                indexed: false,
                name: 'value',
                type: 'uint256',
            },
        ],
    },
    {
        type: 'event',
        name: 'Transfer',
        inputs: [
            {
                indexed: true,
                name: 'from',
                type: 'address',
            },
            {
                indexed: true,
                name: 'to',
                type: 'address',
            },
            {
                indexed: false,
                name: 'value',
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'allowance',
        stateMutability: 'view',
        inputs: [
            {
                name: 'owner',
                type: 'address',
            },
            {
                name: 'spender',
                type: 'address',
            },
        ],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'approve',
        stateMutability: 'nonpayable',
        inputs: [
            {
                name: 'spender',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'bool',
            },
        ],
    },
    {
        type: 'function',
        name: 'balanceOf',
        stateMutability: 'view',
        inputs: [
            {
                name: 'account',
                type: 'address',
            },
        ],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'decimals',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'uint8',
            },
        ],
    },
    {
        type: 'function',
        name: 'name',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'string',
            },
        ],
    },
    {
        type: 'function',
        name: 'symbol',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'string',
            },
        ],
    },
    {
        type: 'function',
        name: 'totalSupply',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'transfer',
        stateMutability: 'nonpayable',
        inputs: [
            {
                name: 'recipient',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'bool',
            },
        ],
    },
    {
        type: 'function',
        name: 'transferFrom',
        stateMutability: 'nonpayable',
        inputs: [
            {
                name: 'sender',
                type: 'address',
            },
            {
                name: 'recipient',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'bool',
            },
        ],
    },
];
/**
 * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)
 * for tokens (ie. Maker) that use bytes32 instead of string.
 */
const erc20Abi_bytes32 = [
    {
        type: 'event',
        name: 'Approval',
        inputs: [
            {
                indexed: true,
                name: 'owner',
                type: 'address',
            },
            {
                indexed: true,
                name: 'spender',
                type: 'address',
            },
            {
                indexed: false,
                name: 'value',
                type: 'uint256',
            },
        ],
    },
    {
        type: 'event',
        name: 'Transfer',
        inputs: [
            {
                indexed: true,
                name: 'from',
                type: 'address',
            },
            {
                indexed: true,
                name: 'to',
                type: 'address',
            },
            {
                indexed: false,
                name: 'value',
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'allowance',
        stateMutability: 'view',
        inputs: [
            {
                name: 'owner',
                type: 'address',
            },
            {
                name: 'spender',
                type: 'address',
            },
        ],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'approve',
        stateMutability: 'nonpayable',
        inputs: [
            {
                name: 'spender',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'bool',
            },
        ],
    },
    {
        type: 'function',
        name: 'balanceOf',
        stateMutability: 'view',
        inputs: [
            {
                name: 'account',
                type: 'address',
            },
        ],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'decimals',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'uint8',
            },
        ],
    },
    {
        type: 'function',
        name: 'name',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'bytes32',
            },
        ],
    },
    {
        type: 'function',
        name: 'symbol',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'bytes32',
            },
        ],
    },
    {
        type: 'function',
        name: 'totalSupply',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'transfer',
        stateMutability: 'nonpayable',
        inputs: [
            {
                name: 'recipient',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'bool',
            },
        ],
    },
    {
        type: 'function',
        name: 'transferFrom',
        stateMutability: 'nonpayable',
        inputs: [
            {
                name: 'sender',
                type: 'address',
            },
            {
                name: 'recipient',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'bool',
            },
        ],
    },
];
/** [ERC-1155 Multi Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-1155) */
const erc1155Abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'sender',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'needed',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        name: 'ERC1155InsufficientBalance',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'approver',
                type: 'address',
            },
        ],
        name: 'ERC1155InvalidApprover',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'idsLength',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'valuesLength',
                type: 'uint256',
            },
        ],
        name: 'ERC1155InvalidArrayLength',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
        ],
        name: 'ERC1155InvalidOperator',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'receiver',
                type: 'address',
            },
        ],
        name: 'ERC1155InvalidReceiver',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'sender',
                type: 'address',
            },
        ],
        name: 'ERC1155InvalidSender',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'ERC1155MissingApprovalForAll',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'bool',
                name: 'approved',
                type: 'bool',
            },
        ],
        name: 'ApprovalForAll',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256[]',
                name: 'ids',
                type: 'uint256[]',
            },
            {
                indexed: false,
                internalType: 'uint256[]',
                name: 'values',
                type: 'uint256[]',
            },
        ],
        name: 'TransferBatch',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'id',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
        ],
        name: 'TransferSingle',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'string',
                name: 'value',
                type: 'string',
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'id',
                type: 'uint256',
            },
        ],
        name: 'URI',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'id',
                type: 'uint256',
            },
        ],
        name: 'balanceOf',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address[]',
                name: 'accounts',
                type: 'address[]',
            },
            {
                internalType: 'uint256[]',
                name: 'ids',
                type: 'uint256[]',
            },
        ],
        name: 'balanceOfBatch',
        outputs: [
            {
                internalType: 'uint256[]',
                name: '',
                type: 'uint256[]',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
        ],
        name: 'isApprovedForAll',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                internalType: 'uint256[]',
                name: 'ids',
                type: 'uint256[]',
            },
            {
                internalType: 'uint256[]',
                name: 'values',
                type: 'uint256[]',
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
            },
        ],
        name: 'safeBatchTransferFrom',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'id',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
            },
        ],
        name: 'safeTransferFrom',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
            {
                internalType: 'bool',
                name: 'approved',
                type: 'bool',
            },
        ],
        name: 'setApprovalForAll',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes4',
                name: 'interfaceId',
                type: 'bytes4',
            },
        ],
        name: 'supportsInterface',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        name: 'uri',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
/** [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721) */
const erc721Abi = [
    {
        type: 'event',
        name: 'Approval',
        inputs: [
            {
                indexed: true,
                name: 'owner',
                type: 'address',
            },
            {
                indexed: true,
                name: 'spender',
                type: 'address',
            },
            {
                indexed: true,
                name: 'tokenId',
                type: 'uint256',
            },
        ],
    },
    {
        type: 'event',
        name: 'ApprovalForAll',
        inputs: [
            {
                indexed: true,
                name: 'owner',
                type: 'address',
            },
            {
                indexed: true,
                name: 'operator',
                type: 'address',
            },
            {
                indexed: false,
                name: 'approved',
                type: 'bool',
            },
        ],
    },
    {
        type: 'event',
        name: 'Transfer',
        inputs: [
            {
                indexed: true,
                name: 'from',
                type: 'address',
            },
            {
                indexed: true,
                name: 'to',
                type: 'address',
            },
            {
                indexed: true,
                name: 'tokenId',
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'approve',
        stateMutability: 'payable',
        inputs: [
            {
                name: 'spender',
                type: 'address',
            },
            {
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        outputs: [],
    },
    {
        type: 'function',
        name: 'balanceOf',
        stateMutability: 'view',
        inputs: [
            {
                name: 'account',
                type: 'address',
            },
        ],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'getApproved',
        stateMutability: 'view',
        inputs: [
            {
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'address',
            },
        ],
    },
    {
        type: 'function',
        name: 'isApprovedForAll',
        stateMutability: 'view',
        inputs: [
            {
                name: 'owner',
                type: 'address',
            },
            {
                name: 'operator',
                type: 'address',
            },
        ],
        outputs: [
            {
                type: 'bool',
            },
        ],
    },
    {
        type: 'function',
        name: 'name',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'string',
            },
        ],
    },
    {
        type: 'function',
        name: 'ownerOf',
        stateMutability: 'view',
        inputs: [
            {
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                name: 'owner',
                type: 'address',
            },
        ],
    },
    {
        type: 'function',
        name: 'safeTransferFrom',
        stateMutability: 'payable',
        inputs: [
            {
                name: 'from',
                type: 'address',
            },
            {
                name: 'to',
                type: 'address',
            },
            {
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        outputs: [],
    },
    {
        type: 'function',
        name: 'safeTransferFrom',
        stateMutability: 'nonpayable',
        inputs: [
            {
                name: 'from',
                type: 'address',
            },
            {
                name: 'to',
                type: 'address',
            },
            {
                name: 'id',
                type: 'uint256',
            },
            {
                name: 'data',
                type: 'bytes',
            },
        ],
        outputs: [],
    },
    {
        type: 'function',
        name: 'setApprovalForAll',
        stateMutability: 'nonpayable',
        inputs: [
            {
                name: 'operator',
                type: 'address',
            },
            {
                name: 'approved',
                type: 'bool',
            },
        ],
        outputs: [],
    },
    {
        type: 'function',
        name: 'symbol',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'string',
            },
        ],
    },
    {
        type: 'function',
        name: 'tokenByIndex',
        stateMutability: 'view',
        inputs: [
            {
                name: 'index',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'tokenByIndex',
        stateMutability: 'view',
        inputs: [
            {
                name: 'owner',
                type: 'address',
            },
            {
                name: 'index',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                name: 'tokenId',
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'tokenURI',
        stateMutability: 'view',
        inputs: [
            {
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        outputs: [
            {
                type: 'string',
            },
        ],
    },
    {
        type: 'function',
        name: 'totalSupply',
        stateMutability: 'view',
        inputs: [],
        outputs: [
            {
                type: 'uint256',
            },
        ],
    },
    {
        type: 'function',
        name: 'transferFrom',
        stateMutability: 'payable',
        inputs: [
            {
                name: 'sender',
                type: 'address',
            },
            {
                name: 'recipient',
                type: 'address',
            },
            {
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        outputs: [],
    },
];
/** [ERC-4626 Tokenized Vaults Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-4626) */
const erc4626Abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: 'owner',
                type: 'address',
            },
            {
                indexed: true,
                name: 'spender',
                type: 'address',
            },
            {
                indexed: false,
                name: 'value',
                type: 'uint256',
            },
        ],
        name: 'Approval',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: 'sender',
                type: 'address',
            },
            {
                indexed: true,
                name: 'receiver',
                type: 'address',
            },
            {
                indexed: false,
                name: 'assets',
                type: 'uint256',
            },
            {
                indexed: false,
                name: 'shares',
                type: 'uint256',
            },
        ],
        name: 'Deposit',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: 'from',
                type: 'address',
            },
            {
                indexed: true,
                name: 'to',
                type: 'address',
            },
            {
                indexed: false,
                name: 'value',
                type: 'uint256',
            },
        ],
        name: 'Transfer',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: 'sender',
                type: 'address',
            },
            {
                indexed: true,
                name: 'receiver',
                type: 'address',
            },
            {
                indexed: true,
                name: 'owner',
                type: 'address',
            },
            {
                indexed: false,
                name: 'assets',
                type: 'uint256',
            },
            {
                indexed: false,
                name: 'shares',
                type: 'uint256',
            },
        ],
        name: 'Withdraw',
        type: 'event',
    },
    {
        inputs: [
            {
                name: 'owner',
                type: 'address',
            },
            {
                name: 'spender',
                type: 'address',
            },
        ],
        name: 'allowance',
        outputs: [
            {
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'spender',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'approve',
        outputs: [
            {
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'asset',
        outputs: [
            {
                name: 'assetTokenAddress',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'account',
                type: 'address',
            },
        ],
        name: 'balanceOf',
        outputs: [
            {
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
        ],
        name: 'convertToAssets',
        outputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
        ],
        name: 'convertToShares',
        outputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
            {
                name: 'receiver',
                type: 'address',
            },
        ],
        name: 'deposit',
        outputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'caller',
                type: 'address',
            },
        ],
        name: 'maxDeposit',
        outputs: [
            {
                name: 'maxAssets',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'caller',
                type: 'address',
            },
        ],
        name: 'maxMint',
        outputs: [
            {
                name: 'maxShares',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'maxRedeem',
        outputs: [
            {
                name: 'maxShares',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'maxWithdraw',
        outputs: [
            {
                name: 'maxAssets',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
            {
                name: 'receiver',
                type: 'address',
            },
        ],
        name: 'mint',
        outputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
        ],
        name: 'previewDeposit',
        outputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
        ],
        name: 'previewMint',
        outputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
        ],
        name: 'previewRedeem',
        outputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
        ],
        name: 'previewWithdraw',
        outputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
            {
                name: 'receiver',
                type: 'address',
            },
            {
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'redeem',
        outputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'totalAssets',
        outputs: [
            {
                name: 'totalManagedAssets',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'totalSupply',
        outputs: [
            {
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'to',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transfer',
        outputs: [
            {
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'from',
                type: 'address',
            },
            {
                name: 'to',
                type: 'address',
            },
            {
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transferFrom',
        outputs: [
            {
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                name: 'assets',
                type: 'uint256',
            },
            {
                name: 'receiver',
                type: 'address',
            },
            {
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'withdraw',
        outputs: [
            {
                name: 'shares',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
//# sourceMappingURL=abis.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/address.js":
/*!*****************************************************!*\
  !*** ./node_modules/viem/_esm/constants/address.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   entryPoint06Address: () => (/* binding */ entryPoint06Address),
/* harmony export */   entryPoint07Address: () => (/* binding */ entryPoint07Address),
/* harmony export */   entryPoint08Address: () => (/* binding */ entryPoint08Address),
/* harmony export */   ethAddress: () => (/* binding */ ethAddress),
/* harmony export */   zeroAddress: () => (/* binding */ zeroAddress)
/* harmony export */ });
const entryPoint06Address = '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789';
const entryPoint07Address = '0x0000000071727De22E5E9d8BAf0edAc6f37da032';
const entryPoint08Address = '0x4337084D9E255Ff0702461CF8895CE9E3b5Ff108';
const ethAddress = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee';
const zeroAddress = '0x0000000000000000000000000000000000000000';
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/blob.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/constants/blob.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bytesPerBlob: () => (/* binding */ bytesPerBlob),
/* harmony export */   bytesPerFieldElement: () => (/* binding */ bytesPerFieldElement),
/* harmony export */   fieldElementsPerBlob: () => (/* binding */ fieldElementsPerBlob),
/* harmony export */   maxBytesPerTransaction: () => (/* binding */ maxBytesPerTransaction)
/* harmony export */ });
// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters
/** Blob limit per transaction. */
const blobsPerTransaction = 6;
/** The number of bytes in a BLS scalar field element. */
const bytesPerFieldElement = 32;
/** The number of field elements in a blob. */
const fieldElementsPerBlob = 4096;
/** The number of bytes in a blob. */
const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;
/** Blob bytes limit per transaction. */
const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -
    // terminator byte (0x80).
    1 -
    // zero byte (0x00) appended to each field element.
    1 * fieldElementsPerBlob * blobsPerTransaction;
//# sourceMappingURL=blob.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/bytes.js":
/*!***************************************************!*\
  !*** ./node_modules/viem/_esm/constants/bytes.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   erc6492MagicBytes: () => (/* binding */ erc6492MagicBytes),
/* harmony export */   zeroHash: () => (/* binding */ zeroHash)
/* harmony export */ });
const erc6492MagicBytes = '0x6492649264926492649264926492649264926492649264926492649264926492';
const zeroHash = '0x0000000000000000000000000000000000000000000000000000000000000000';
//# sourceMappingURL=bytes.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/contract.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/constants/contract.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   aggregate3Signature: () => (/* binding */ aggregate3Signature)
/* harmony export */ });
const aggregate3Signature = '0x82ad56cb';
//# sourceMappingURL=contract.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/contracts.js":
/*!*******************************************************!*\
  !*** ./node_modules/viem/_esm/constants/contracts.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   deploylessCallViaBytecodeBytecode: () => (/* binding */ deploylessCallViaBytecodeBytecode),
/* harmony export */   deploylessCallViaFactoryBytecode: () => (/* binding */ deploylessCallViaFactoryBytecode),
/* harmony export */   universalSignatureValidatorByteCode: () => (/* binding */ universalSignatureValidatorByteCode)
/* harmony export */ });
const deploylessCallViaBytecodeBytecode = '0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe';
const deploylessCallViaFactoryBytecode = '0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe';
const universalSignatureValidatorByteCode = '0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572';
//# sourceMappingURL=contracts.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/kzg.js":
/*!*************************************************!*\
  !*** ./node_modules/viem/_esm/constants/kzg.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   versionedHashVersionKzg: () => (/* binding */ versionedHashVersionKzg)
/* harmony export */ });
// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters
const versionedHashVersionKzg = 1;
//# sourceMappingURL=kzg.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/number.js":
/*!****************************************************!*\
  !*** ./node_modules/viem/_esm/constants/number.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   maxInt104: () => (/* binding */ maxInt104),
/* harmony export */   maxInt112: () => (/* binding */ maxInt112),
/* harmony export */   maxInt120: () => (/* binding */ maxInt120),
/* harmony export */   maxInt128: () => (/* binding */ maxInt128),
/* harmony export */   maxInt136: () => (/* binding */ maxInt136),
/* harmony export */   maxInt144: () => (/* binding */ maxInt144),
/* harmony export */   maxInt152: () => (/* binding */ maxInt152),
/* harmony export */   maxInt16: () => (/* binding */ maxInt16),
/* harmony export */   maxInt160: () => (/* binding */ maxInt160),
/* harmony export */   maxInt168: () => (/* binding */ maxInt168),
/* harmony export */   maxInt176: () => (/* binding */ maxInt176),
/* harmony export */   maxInt184: () => (/* binding */ maxInt184),
/* harmony export */   maxInt192: () => (/* binding */ maxInt192),
/* harmony export */   maxInt200: () => (/* binding */ maxInt200),
/* harmony export */   maxInt208: () => (/* binding */ maxInt208),
/* harmony export */   maxInt216: () => (/* binding */ maxInt216),
/* harmony export */   maxInt224: () => (/* binding */ maxInt224),
/* harmony export */   maxInt232: () => (/* binding */ maxInt232),
/* harmony export */   maxInt24: () => (/* binding */ maxInt24),
/* harmony export */   maxInt240: () => (/* binding */ maxInt240),
/* harmony export */   maxInt248: () => (/* binding */ maxInt248),
/* harmony export */   maxInt256: () => (/* binding */ maxInt256),
/* harmony export */   maxInt32: () => (/* binding */ maxInt32),
/* harmony export */   maxInt40: () => (/* binding */ maxInt40),
/* harmony export */   maxInt48: () => (/* binding */ maxInt48),
/* harmony export */   maxInt56: () => (/* binding */ maxInt56),
/* harmony export */   maxInt64: () => (/* binding */ maxInt64),
/* harmony export */   maxInt72: () => (/* binding */ maxInt72),
/* harmony export */   maxInt8: () => (/* binding */ maxInt8),
/* harmony export */   maxInt80: () => (/* binding */ maxInt80),
/* harmony export */   maxInt88: () => (/* binding */ maxInt88),
/* harmony export */   maxInt96: () => (/* binding */ maxInt96),
/* harmony export */   maxUint104: () => (/* binding */ maxUint104),
/* harmony export */   maxUint112: () => (/* binding */ maxUint112),
/* harmony export */   maxUint120: () => (/* binding */ maxUint120),
/* harmony export */   maxUint128: () => (/* binding */ maxUint128),
/* harmony export */   maxUint136: () => (/* binding */ maxUint136),
/* harmony export */   maxUint144: () => (/* binding */ maxUint144),
/* harmony export */   maxUint152: () => (/* binding */ maxUint152),
/* harmony export */   maxUint16: () => (/* binding */ maxUint16),
/* harmony export */   maxUint160: () => (/* binding */ maxUint160),
/* harmony export */   maxUint168: () => (/* binding */ maxUint168),
/* harmony export */   maxUint176: () => (/* binding */ maxUint176),
/* harmony export */   maxUint184: () => (/* binding */ maxUint184),
/* harmony export */   maxUint192: () => (/* binding */ maxUint192),
/* harmony export */   maxUint200: () => (/* binding */ maxUint200),
/* harmony export */   maxUint208: () => (/* binding */ maxUint208),
/* harmony export */   maxUint216: () => (/* binding */ maxUint216),
/* harmony export */   maxUint224: () => (/* binding */ maxUint224),
/* harmony export */   maxUint232: () => (/* binding */ maxUint232),
/* harmony export */   maxUint24: () => (/* binding */ maxUint24),
/* harmony export */   maxUint240: () => (/* binding */ maxUint240),
/* harmony export */   maxUint248: () => (/* binding */ maxUint248),
/* harmony export */   maxUint256: () => (/* binding */ maxUint256),
/* harmony export */   maxUint32: () => (/* binding */ maxUint32),
/* harmony export */   maxUint40: () => (/* binding */ maxUint40),
/* harmony export */   maxUint48: () => (/* binding */ maxUint48),
/* harmony export */   maxUint56: () => (/* binding */ maxUint56),
/* harmony export */   maxUint64: () => (/* binding */ maxUint64),
/* harmony export */   maxUint72: () => (/* binding */ maxUint72),
/* harmony export */   maxUint8: () => (/* binding */ maxUint8),
/* harmony export */   maxUint80: () => (/* binding */ maxUint80),
/* harmony export */   maxUint88: () => (/* binding */ maxUint88),
/* harmony export */   maxUint96: () => (/* binding */ maxUint96),
/* harmony export */   minInt104: () => (/* binding */ minInt104),
/* harmony export */   minInt112: () => (/* binding */ minInt112),
/* harmony export */   minInt120: () => (/* binding */ minInt120),
/* harmony export */   minInt128: () => (/* binding */ minInt128),
/* harmony export */   minInt136: () => (/* binding */ minInt136),
/* harmony export */   minInt144: () => (/* binding */ minInt144),
/* harmony export */   minInt152: () => (/* binding */ minInt152),
/* harmony export */   minInt16: () => (/* binding */ minInt16),
/* harmony export */   minInt160: () => (/* binding */ minInt160),
/* harmony export */   minInt168: () => (/* binding */ minInt168),
/* harmony export */   minInt176: () => (/* binding */ minInt176),
/* harmony export */   minInt184: () => (/* binding */ minInt184),
/* harmony export */   minInt192: () => (/* binding */ minInt192),
/* harmony export */   minInt200: () => (/* binding */ minInt200),
/* harmony export */   minInt208: () => (/* binding */ minInt208),
/* harmony export */   minInt216: () => (/* binding */ minInt216),
/* harmony export */   minInt224: () => (/* binding */ minInt224),
/* harmony export */   minInt232: () => (/* binding */ minInt232),
/* harmony export */   minInt24: () => (/* binding */ minInt24),
/* harmony export */   minInt240: () => (/* binding */ minInt240),
/* harmony export */   minInt248: () => (/* binding */ minInt248),
/* harmony export */   minInt256: () => (/* binding */ minInt256),
/* harmony export */   minInt32: () => (/* binding */ minInt32),
/* harmony export */   minInt40: () => (/* binding */ minInt40),
/* harmony export */   minInt48: () => (/* binding */ minInt48),
/* harmony export */   minInt56: () => (/* binding */ minInt56),
/* harmony export */   minInt64: () => (/* binding */ minInt64),
/* harmony export */   minInt72: () => (/* binding */ minInt72),
/* harmony export */   minInt8: () => (/* binding */ minInt8),
/* harmony export */   minInt80: () => (/* binding */ minInt80),
/* harmony export */   minInt88: () => (/* binding */ minInt88),
/* harmony export */   minInt96: () => (/* binding */ minInt96)
/* harmony export */ });
const maxInt8 = 2n ** (8n - 1n) - 1n;
const maxInt16 = 2n ** (16n - 1n) - 1n;
const maxInt24 = 2n ** (24n - 1n) - 1n;
const maxInt32 = 2n ** (32n - 1n) - 1n;
const maxInt40 = 2n ** (40n - 1n) - 1n;
const maxInt48 = 2n ** (48n - 1n) - 1n;
const maxInt56 = 2n ** (56n - 1n) - 1n;
const maxInt64 = 2n ** (64n - 1n) - 1n;
const maxInt72 = 2n ** (72n - 1n) - 1n;
const maxInt80 = 2n ** (80n - 1n) - 1n;
const maxInt88 = 2n ** (88n - 1n) - 1n;
const maxInt96 = 2n ** (96n - 1n) - 1n;
const maxInt104 = 2n ** (104n - 1n) - 1n;
const maxInt112 = 2n ** (112n - 1n) - 1n;
const maxInt120 = 2n ** (120n - 1n) - 1n;
const maxInt128 = 2n ** (128n - 1n) - 1n;
const maxInt136 = 2n ** (136n - 1n) - 1n;
const maxInt144 = 2n ** (144n - 1n) - 1n;
const maxInt152 = 2n ** (152n - 1n) - 1n;
const maxInt160 = 2n ** (160n - 1n) - 1n;
const maxInt168 = 2n ** (168n - 1n) - 1n;
const maxInt176 = 2n ** (176n - 1n) - 1n;
const maxInt184 = 2n ** (184n - 1n) - 1n;
const maxInt192 = 2n ** (192n - 1n) - 1n;
const maxInt200 = 2n ** (200n - 1n) - 1n;
const maxInt208 = 2n ** (208n - 1n) - 1n;
const maxInt216 = 2n ** (216n - 1n) - 1n;
const maxInt224 = 2n ** (224n - 1n) - 1n;
const maxInt232 = 2n ** (232n - 1n) - 1n;
const maxInt240 = 2n ** (240n - 1n) - 1n;
const maxInt248 = 2n ** (248n - 1n) - 1n;
const maxInt256 = 2n ** (256n - 1n) - 1n;
const minInt8 = -(2n ** (8n - 1n));
const minInt16 = -(2n ** (16n - 1n));
const minInt24 = -(2n ** (24n - 1n));
const minInt32 = -(2n ** (32n - 1n));
const minInt40 = -(2n ** (40n - 1n));
const minInt48 = -(2n ** (48n - 1n));
const minInt56 = -(2n ** (56n - 1n));
const minInt64 = -(2n ** (64n - 1n));
const minInt72 = -(2n ** (72n - 1n));
const minInt80 = -(2n ** (80n - 1n));
const minInt88 = -(2n ** (88n - 1n));
const minInt96 = -(2n ** (96n - 1n));
const minInt104 = -(2n ** (104n - 1n));
const minInt112 = -(2n ** (112n - 1n));
const minInt120 = -(2n ** (120n - 1n));
const minInt128 = -(2n ** (128n - 1n));
const minInt136 = -(2n ** (136n - 1n));
const minInt144 = -(2n ** (144n - 1n));
const minInt152 = -(2n ** (152n - 1n));
const minInt160 = -(2n ** (160n - 1n));
const minInt168 = -(2n ** (168n - 1n));
const minInt176 = -(2n ** (176n - 1n));
const minInt184 = -(2n ** (184n - 1n));
const minInt192 = -(2n ** (192n - 1n));
const minInt200 = -(2n ** (200n - 1n));
const minInt208 = -(2n ** (208n - 1n));
const minInt216 = -(2n ** (216n - 1n));
const minInt224 = -(2n ** (224n - 1n));
const minInt232 = -(2n ** (232n - 1n));
const minInt240 = -(2n ** (240n - 1n));
const minInt248 = -(2n ** (248n - 1n));
const minInt256 = -(2n ** (256n - 1n));
const maxUint8 = 2n ** 8n - 1n;
const maxUint16 = 2n ** 16n - 1n;
const maxUint24 = 2n ** 24n - 1n;
const maxUint32 = 2n ** 32n - 1n;
const maxUint40 = 2n ** 40n - 1n;
const maxUint48 = 2n ** 48n - 1n;
const maxUint56 = 2n ** 56n - 1n;
const maxUint64 = 2n ** 64n - 1n;
const maxUint72 = 2n ** 72n - 1n;
const maxUint80 = 2n ** 80n - 1n;
const maxUint88 = 2n ** 88n - 1n;
const maxUint96 = 2n ** 96n - 1n;
const maxUint104 = 2n ** 104n - 1n;
const maxUint112 = 2n ** 112n - 1n;
const maxUint120 = 2n ** 120n - 1n;
const maxUint128 = 2n ** 128n - 1n;
const maxUint136 = 2n ** 136n - 1n;
const maxUint144 = 2n ** 144n - 1n;
const maxUint152 = 2n ** 152n - 1n;
const maxUint160 = 2n ** 160n - 1n;
const maxUint168 = 2n ** 168n - 1n;
const maxUint176 = 2n ** 176n - 1n;
const maxUint184 = 2n ** 184n - 1n;
const maxUint192 = 2n ** 192n - 1n;
const maxUint200 = 2n ** 200n - 1n;
const maxUint208 = 2n ** 208n - 1n;
const maxUint216 = 2n ** 216n - 1n;
const maxUint224 = 2n ** 224n - 1n;
const maxUint232 = 2n ** 232n - 1n;
const maxUint240 = 2n ** 240n - 1n;
const maxUint248 = 2n ** 248n - 1n;
const maxUint256 = 2n ** 256n - 1n;
//# sourceMappingURL=number.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/solidity.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/constants/solidity.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   panicReasons: () => (/* binding */ panicReasons),
/* harmony export */   solidityError: () => (/* binding */ solidityError),
/* harmony export */   solidityPanic: () => (/* binding */ solidityPanic)
/* harmony export */ });
// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require
const panicReasons = {
    1: 'An `assert` condition failed.',
    17: 'Arithmetic operation resulted in underflow or overflow.',
    18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',
    33: 'Attempted to convert to an invalid type.',
    34: 'Attempted to access a storage byte array that is incorrectly encoded.',
    49: 'Performed `.pop()` on an empty array',
    50: 'Array index is out of bounds.',
    65: 'Allocated too much memory or created an array which is too large.',
    81: 'Attempted to call a zero-initialized variable of internal function type.',
};
const solidityError = {
    inputs: [
        {
            name: 'message',
            type: 'string',
        },
    ],
    name: 'Error',
    type: 'error',
};
const solidityPanic = {
    inputs: [
        {
            name: 'reason',
            type: 'uint256',
        },
    ],
    name: 'Panic',
    type: 'error',
};
//# sourceMappingURL=solidity.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/constants/unit.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/constants/unit.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   etherUnits: () => (/* binding */ etherUnits),
/* harmony export */   gweiUnits: () => (/* binding */ gweiUnits),
/* harmony export */   weiUnits: () => (/* binding */ weiUnits)
/* harmony export */ });
const etherUnits = {
    gwei: 9,
    wei: 18,
};
const gweiUnits = {
    ether: -9,
    wei: 9,
};
const weiUnits = {
    ether: -18,
    gwei: -9,
};
//# sourceMappingURL=unit.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/abi.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/errors/abi.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbiConstructorNotFoundError: () => (/* binding */ AbiConstructorNotFoundError),
/* harmony export */   AbiConstructorParamsNotFoundError: () => (/* binding */ AbiConstructorParamsNotFoundError),
/* harmony export */   AbiDecodingDataSizeInvalidError: () => (/* binding */ AbiDecodingDataSizeInvalidError),
/* harmony export */   AbiDecodingDataSizeTooSmallError: () => (/* binding */ AbiDecodingDataSizeTooSmallError),
/* harmony export */   AbiDecodingZeroDataError: () => (/* binding */ AbiDecodingZeroDataError),
/* harmony export */   AbiEncodingArrayLengthMismatchError: () => (/* binding */ AbiEncodingArrayLengthMismatchError),
/* harmony export */   AbiEncodingBytesSizeMismatchError: () => (/* binding */ AbiEncodingBytesSizeMismatchError),
/* harmony export */   AbiEncodingLengthMismatchError: () => (/* binding */ AbiEncodingLengthMismatchError),
/* harmony export */   AbiErrorInputsNotFoundError: () => (/* binding */ AbiErrorInputsNotFoundError),
/* harmony export */   AbiErrorNotFoundError: () => (/* binding */ AbiErrorNotFoundError),
/* harmony export */   AbiErrorSignatureNotFoundError: () => (/* binding */ AbiErrorSignatureNotFoundError),
/* harmony export */   AbiEventNotFoundError: () => (/* binding */ AbiEventNotFoundError),
/* harmony export */   AbiEventSignatureEmptyTopicsError: () => (/* binding */ AbiEventSignatureEmptyTopicsError),
/* harmony export */   AbiEventSignatureNotFoundError: () => (/* binding */ AbiEventSignatureNotFoundError),
/* harmony export */   AbiFunctionNotFoundError: () => (/* binding */ AbiFunctionNotFoundError),
/* harmony export */   AbiFunctionOutputsNotFoundError: () => (/* binding */ AbiFunctionOutputsNotFoundError),
/* harmony export */   AbiFunctionSignatureNotFoundError: () => (/* binding */ AbiFunctionSignatureNotFoundError),
/* harmony export */   AbiItemAmbiguityError: () => (/* binding */ AbiItemAmbiguityError),
/* harmony export */   BytesSizeMismatchError: () => (/* binding */ BytesSizeMismatchError),
/* harmony export */   DecodeLogDataMismatch: () => (/* binding */ DecodeLogDataMismatch),
/* harmony export */   DecodeLogTopicsMismatch: () => (/* binding */ DecodeLogTopicsMismatch),
/* harmony export */   InvalidAbiDecodingTypeError: () => (/* binding */ InvalidAbiDecodingTypeError),
/* harmony export */   InvalidAbiEncodingTypeError: () => (/* binding */ InvalidAbiEncodingTypeError),
/* harmony export */   InvalidArrayError: () => (/* binding */ InvalidArrayError),
/* harmony export */   InvalidDefinitionTypeError: () => (/* binding */ InvalidDefinitionTypeError),
/* harmony export */   UnsupportedPackedAbiType: () => (/* binding */ UnsupportedPackedAbiType)
/* harmony export */ });
/* harmony import */ var _utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/abi/formatAbiItem.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js");
/* harmony import */ var _utils_data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");



class AbiConstructorNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ docsPath }) {
        super([
            'A constructor was not found on the ABI.',
            'Make sure you are using the correct ABI and that the constructor exists on it.',
        ].join('\n'), {
            docsPath,
            name: 'AbiConstructorNotFoundError',
        });
    }
}
class AbiConstructorParamsNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ docsPath }) {
        super([
            'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',
            'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',
        ].join('\n'), {
            docsPath,
            name: 'AbiConstructorParamsNotFoundError',
        });
    }
}
class AbiDecodingDataSizeInvalidError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ data, size }) {
        super([
            `Data size of ${size} bytes is invalid.`,
            'Size must be in increments of 32 bytes (size % 32 === 0).',
        ].join('\n'), {
            metaMessages: [`Data: ${data} (${size} bytes)`],
            name: 'AbiDecodingDataSizeInvalidError',
        });
    }
}
class AbiDecodingDataSizeTooSmallError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ data, params, size, }) {
        super([`Data size of ${size} bytes is too small for given parameters.`].join('\n'), {
            metaMessages: [
                `Params: (${(0,_utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiParams)(params, { includeName: true })})`,
                `Data:   ${data} (${size} bytes)`,
            ],
            name: 'AbiDecodingDataSizeTooSmallError',
        });
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "size", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.data = data;
        this.params = params;
        this.size = size;
    }
}
class AbiDecodingZeroDataError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor() {
        super('Cannot decode zero data ("0x") with ABI parameters.', {
            name: 'AbiDecodingZeroDataError',
        });
    }
}
class AbiEncodingArrayLengthMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ expectedLength, givenLength, type, }) {
        super([
            `ABI encoding array length mismatch for type ${type}.`,
            `Expected length: ${expectedLength}`,
            `Given length: ${givenLength}`,
        ].join('\n'), { name: 'AbiEncodingArrayLengthMismatchError' });
    }
}
class AbiEncodingBytesSizeMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ expectedSize, value }) {
        super(`Size of bytes "${value}" (bytes${(0,_utils_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(value)}) does not match expected size (bytes${expectedSize}).`, { name: 'AbiEncodingBytesSizeMismatchError' });
    }
}
class AbiEncodingLengthMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ expectedLength, givenLength, }) {
        super([
            'ABI encoding params/values length mismatch.',
            `Expected length (params): ${expectedLength}`,
            `Given length (values): ${givenLength}`,
        ].join('\n'), { name: 'AbiEncodingLengthMismatchError' });
    }
}
class AbiErrorInputsNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(errorName, { docsPath }) {
        super([
            `Arguments (\`args\`) were provided to "${errorName}", but "${errorName}" on the ABI does not contain any parameters (\`inputs\`).`,
            'Cannot encode error result without knowing what the parameter types are.',
            'Make sure you are using the correct ABI and that the inputs exist on it.',
        ].join('\n'), {
            docsPath,
            name: 'AbiErrorInputsNotFoundError',
        });
    }
}
class AbiErrorNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(errorName, { docsPath } = {}) {
        super([
            `Error ${errorName ? `"${errorName}" ` : ''}not found on ABI.`,
            'Make sure you are using the correct ABI and that the error exists on it.',
        ].join('\n'), {
            docsPath,
            name: 'AbiErrorNotFoundError',
        });
    }
}
class AbiErrorSignatureNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(signature, { docsPath }) {
        super([
            `Encoded error signature "${signature}" not found on ABI.`,
            'Make sure you are using the correct ABI and that the error exists on it.',
            `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,
        ].join('\n'), {
            docsPath,
            name: 'AbiErrorSignatureNotFoundError',
        });
        Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.signature = signature;
    }
}
class AbiEventSignatureEmptyTopicsError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ docsPath }) {
        super('Cannot extract event signature from empty topics.', {
            docsPath,
            name: 'AbiEventSignatureEmptyTopicsError',
        });
    }
}
class AbiEventSignatureNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(signature, { docsPath }) {
        super([
            `Encoded event signature "${signature}" not found on ABI.`,
            'Make sure you are using the correct ABI and that the event exists on it.',
            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,
        ].join('\n'), {
            docsPath,
            name: 'AbiEventSignatureNotFoundError',
        });
    }
}
class AbiEventNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(eventName, { docsPath } = {}) {
        super([
            `Event ${eventName ? `"${eventName}" ` : ''}not found on ABI.`,
            'Make sure you are using the correct ABI and that the event exists on it.',
        ].join('\n'), {
            docsPath,
            name: 'AbiEventNotFoundError',
        });
    }
}
class AbiFunctionNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(functionName, { docsPath } = {}) {
        super([
            `Function ${functionName ? `"${functionName}" ` : ''}not found on ABI.`,
            'Make sure you are using the correct ABI and that the function exists on it.',
        ].join('\n'), {
            docsPath,
            name: 'AbiFunctionNotFoundError',
        });
    }
}
class AbiFunctionOutputsNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(functionName, { docsPath }) {
        super([
            `Function "${functionName}" does not contain any \`outputs\` on ABI.`,
            'Cannot decode function result without knowing what the parameter types are.',
            'Make sure you are using the correct ABI and that the function exists on it.',
        ].join('\n'), {
            docsPath,
            name: 'AbiFunctionOutputsNotFoundError',
        });
    }
}
class AbiFunctionSignatureNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(signature, { docsPath }) {
        super([
            `Encoded function signature "${signature}" not found on ABI.`,
            'Make sure you are using the correct ABI and that the function exists on it.',
            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,
        ].join('\n'), {
            docsPath,
            name: 'AbiFunctionSignatureNotFoundError',
        });
    }
}
class AbiItemAmbiguityError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(x, y) {
        super('Found ambiguous types in overloaded ABI items.', {
            metaMessages: [
                `\`${x.type}\` in \`${(0,_utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem)(x.abiItem)}\`, and`,
                `\`${y.type}\` in \`${(0,_utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem)(y.abiItem)}\``,
                '',
                'These types encode differently and cannot be distinguished at runtime.',
                'Remove one of the ambiguous items in the ABI.',
            ],
            name: 'AbiItemAmbiguityError',
        });
    }
}
class BytesSizeMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ expectedSize, givenSize, }) {
        super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {
            name: 'BytesSizeMismatchError',
        });
    }
}
class DecodeLogDataMismatch extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ abiItem, data, params, size, }) {
        super([
            `Data size of ${size} bytes is too small for non-indexed event parameters.`,
        ].join('\n'), {
            metaMessages: [
                `Params: (${(0,_utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiParams)(params, { includeName: true })})`,
                `Data:   ${data} (${size} bytes)`,
            ],
            name: 'DecodeLogDataMismatch',
        });
        Object.defineProperty(this, "abiItem", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "size", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.abiItem = abiItem;
        this.data = data;
        this.params = params;
        this.size = size;
    }
}
class DecodeLogTopicsMismatch extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ abiItem, param, }) {
        super([
            `Expected a topic for indexed event parameter${param.name ? ` "${param.name}"` : ''} on event "${(0,_utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem)(abiItem, { includeName: true })}".`,
        ].join('\n'), { name: 'DecodeLogTopicsMismatch' });
        Object.defineProperty(this, "abiItem", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.abiItem = abiItem;
    }
}
class InvalidAbiEncodingTypeError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(type, { docsPath }) {
        super([
            `Type "${type}" is not a valid encoding type.`,
            'Please provide a valid ABI type.',
        ].join('\n'), { docsPath, name: 'InvalidAbiEncodingType' });
    }
}
class InvalidAbiDecodingTypeError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(type, { docsPath }) {
        super([
            `Type "${type}" is not a valid decoding type.`,
            'Please provide a valid ABI type.',
        ].join('\n'), { docsPath, name: 'InvalidAbiDecodingType' });
    }
}
class InvalidArrayError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(value) {
        super([`Value "${value}" is not a valid array.`].join('\n'), {
            name: 'InvalidArrayError',
        });
    }
}
class InvalidDefinitionTypeError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(type) {
        super([
            `"${type}" is not a valid definition type.`,
            'Valid types: "function", "event", "error"',
        ].join('\n'), { name: 'InvalidDefinitionTypeError' });
    }
}
class UnsupportedPackedAbiType extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(type) {
        super(`Type "${type}" is not supported for packed encoding.`, {
            name: 'UnsupportedPackedAbiType',
        });
    }
}
//# sourceMappingURL=abi.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/account.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/errors/account.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AccountNotFoundError: () => (/* binding */ AccountNotFoundError),
/* harmony export */   AccountTypeNotSupportedError: () => (/* binding */ AccountTypeNotSupportedError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class AccountNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ docsPath } = {}) {
        super([
            'Could not find an Account to execute with this Action.',
            'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',
        ].join('\n'), {
            docsPath,
            docsSlug: 'account',
            name: 'AccountNotFoundError',
        });
    }
}
class AccountTypeNotSupportedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ docsPath, metaMessages, type, }) {
        super(`Account type "${type}" is not supported.`, {
            docsPath,
            metaMessages,
            name: 'AccountTypeNotSupportedError',
        });
    }
}
//# sourceMappingURL=account.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/address.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/errors/address.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidAddressError: () => (/* binding */ InvalidAddressError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class InvalidAddressError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ address }) {
        super(`Address "${address}" is invalid.`, {
            metaMessages: [
                '- Address must be a hex value of 20 bytes (40 hex characters).',
                '- Address must match its checksum counterpart.',
            ],
            name: 'InvalidAddressError',
        });
    }
}
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/blob.js":
/*!***********************************************!*\
  !*** ./node_modules/viem/_esm/errors/blob.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BlobSizeTooLargeError: () => (/* binding */ BlobSizeTooLargeError),
/* harmony export */   EmptyBlobError: () => (/* binding */ EmptyBlobError),
/* harmony export */   InvalidVersionedHashSizeError: () => (/* binding */ InvalidVersionedHashSizeError),
/* harmony export */   InvalidVersionedHashVersionError: () => (/* binding */ InvalidVersionedHashVersionError)
/* harmony export */ });
/* harmony import */ var _constants_kzg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/kzg.js */ "./node_modules/viem/_esm/constants/kzg.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");


class BlobSizeTooLargeError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ maxSize, size }) {
        super('Blob size is too large.', {
            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],
            name: 'BlobSizeTooLargeError',
        });
    }
}
class EmptyBlobError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor() {
        super('Blob data must not be empty.', { name: 'EmptyBlobError' });
    }
}
class InvalidVersionedHashSizeError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ hash, size, }) {
        super(`Versioned hash "${hash}" size is invalid.`, {
            metaMessages: ['Expected: 32', `Received: ${size}`],
            name: 'InvalidVersionedHashSizeError',
        });
    }
}
class InvalidVersionedHashVersionError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ hash, version, }) {
        super(`Versioned hash "${hash}" version is invalid.`, {
            metaMessages: [
                `Expected: ${_constants_kzg_js__WEBPACK_IMPORTED_MODULE_0__.versionedHashVersionKzg}`,
                `Received: ${version}`,
            ],
            name: 'InvalidVersionedHashVersionError',
        });
    }
}
//# sourceMappingURL=blob.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/block.js":
/*!************************************************!*\
  !*** ./node_modules/viem/_esm/errors/block.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BlockNotFoundError: () => (/* binding */ BlockNotFoundError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class BlockNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ blockHash, blockNumber, }) {
        let identifier = 'Block';
        if (blockHash)
            identifier = `Block at hash "${blockHash}"`;
        if (blockNumber)
            identifier = `Block at number "${blockNumber}"`;
        super(`${identifier} could not be found.`, { name: 'BlockNotFoundError' });
    }
}
//# sourceMappingURL=block.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/calls.js":
/*!************************************************!*\
  !*** ./node_modules/viem/_esm/errors/calls.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BundleFailedError: () => (/* binding */ BundleFailedError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class BundleFailedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(result) {
        super(`Call bundle failed with status: ${result.statusCode}`, {
            name: 'BundleFailedError',
        });
        Object.defineProperty(this, "result", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.result = result;
    }
}
//# sourceMappingURL=calls.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/ccip.js":
/*!***********************************************!*\
  !*** ./node_modules/viem/_esm/errors/ccip.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OffchainLookupError: () => (/* binding */ OffchainLookupError),
/* harmony export */   OffchainLookupResponseMalformedError: () => (/* binding */ OffchainLookupResponseMalformedError),
/* harmony export */   OffchainLookupSenderMismatchError: () => (/* binding */ OffchainLookupSenderMismatchError)
/* harmony export */ });
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/viem/_esm/errors/utils.js");



class OffchainLookupError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ callbackSelector, cause, data, extraData, sender, urls, }) {
        super(cause.shortMessage ||
            'An error occurred while fetching for an offchain result.', {
            cause,
            metaMessages: [
                ...(cause.metaMessages || []),
                cause.metaMessages?.length ? '' : [],
                'Offchain Gateway Call:',
                urls && [
                    '  Gateway URL(s):',
                    ...urls.map((url) => `    ${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(url)}`),
                ],
                `  Sender: ${sender}`,
                `  Data: ${data}`,
                `  Callback selector: ${callbackSelector}`,
                `  Extra data: ${extraData}`,
            ].flat(),
            name: 'OffchainLookupError',
        });
    }
}
class OffchainLookupResponseMalformedError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ result, url }) {
        super('Offchain gateway response is malformed. Response data must be a hex value.', {
            metaMessages: [
                `Gateway URL: ${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(url)}`,
                `Response: ${(0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(result)}`,
            ],
            name: 'OffchainLookupResponseMalformedError',
        });
    }
}
class OffchainLookupSenderMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ sender, to }) {
        super('Reverted sender address does not match target contract address (`to`).', {
            metaMessages: [
                `Contract address: ${to}`,
                `OffchainLookup sender address: ${sender}`,
            ],
            name: 'OffchainLookupSenderMismatchError',
        });
    }
}
//# sourceMappingURL=ccip.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/chain.js":
/*!************************************************!*\
  !*** ./node_modules/viem/_esm/errors/chain.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChainDoesNotSupportContract: () => (/* binding */ ChainDoesNotSupportContract),
/* harmony export */   ChainMismatchError: () => (/* binding */ ChainMismatchError),
/* harmony export */   ChainNotFoundError: () => (/* binding */ ChainNotFoundError),
/* harmony export */   ClientChainNotConfiguredError: () => (/* binding */ ClientChainNotConfiguredError),
/* harmony export */   InvalidChainIdError: () => (/* binding */ InvalidChainIdError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class ChainDoesNotSupportContract extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ blockNumber, chain, contract, }) {
        super(`Chain "${chain.name}" does not support contract "${contract.name}".`, {
            metaMessages: [
                'This could be due to any of the following:',
                ...(blockNumber &&
                    contract.blockCreated &&
                    contract.blockCreated > blockNumber
                    ? [
                        `- The contract "${contract.name}" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,
                    ]
                    : [
                        `- The chain does not have the contract "${contract.name}" configured.`,
                    ]),
            ],
            name: 'ChainDoesNotSupportContract',
        });
    }
}
class ChainMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ chain, currentChainId, }) {
        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {
            metaMessages: [
                `Current Chain ID:  ${currentChainId}`,
                `Expected Chain ID: ${chain.id} – ${chain.name}`,
            ],
            name: 'ChainMismatchError',
        });
    }
}
class ChainNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor() {
        super([
            'No chain was provided to the request.',
            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',
        ].join('\n'), {
            name: 'ChainNotFoundError',
        });
    }
}
class ClientChainNotConfiguredError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor() {
        super('No chain was provided to the Client.', {
            name: 'ClientChainNotConfiguredError',
        });
    }
}
class InvalidChainIdError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ chainId }) {
        super(typeof chainId === 'number'
            ? `Chain ID "${chainId}" is invalid.`
            : 'Chain ID is invalid.', { name: 'InvalidChainIdError' });
    }
}
//# sourceMappingURL=chain.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/contract.js":
/*!***************************************************!*\
  !*** ./node_modules/viem/_esm/errors/contract.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CallExecutionError: () => (/* binding */ CallExecutionError),
/* harmony export */   ContractFunctionExecutionError: () => (/* binding */ ContractFunctionExecutionError),
/* harmony export */   ContractFunctionRevertedError: () => (/* binding */ ContractFunctionRevertedError),
/* harmony export */   ContractFunctionZeroDataError: () => (/* binding */ ContractFunctionZeroDataError),
/* harmony export */   CounterfactualDeploymentFailedError: () => (/* binding */ CounterfactualDeploymentFailedError),
/* harmony export */   RawContractError: () => (/* binding */ RawContractError)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _constants_solidity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/solidity.js */ "./node_modules/viem/_esm/constants/solidity.js");
/* harmony import */ var _utils_abi_decodeErrorResult_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/abi/decodeErrorResult.js */ "./node_modules/viem/_esm/utils/abi/decodeErrorResult.js");
/* harmony import */ var _utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/abi/formatAbiItem.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js");
/* harmony import */ var _utils_abi_formatAbiItemWithArgs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/abi/formatAbiItemWithArgs.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItemWithArgs.js");
/* harmony import */ var _utils_abi_getAbiItem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/abi/getAbiItem.js */ "./node_modules/viem/_esm/utils/abi/getAbiItem.js");
/* harmony import */ var _utils_unit_formatEther_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/unit/formatEther.js */ "./node_modules/viem/_esm/utils/unit/formatEther.js");
/* harmony import */ var _utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/unit/formatGwei.js */ "./node_modules/viem/_esm/utils/unit/formatGwei.js");
/* harmony import */ var _abi_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _stateOverride_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./stateOverride.js */ "./node_modules/viem/_esm/errors/stateOverride.js");
/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils.js */ "./node_modules/viem/_esm/errors/utils.js");













class CallExecutionError extends _base_js__WEBPACK_IMPORTED_MODULE_9__.BaseError {
    constructor(cause, { account: account_, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, }) {
        const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_) : undefined;
        let prettyArgs = (0,_transaction_js__WEBPACK_IMPORTED_MODULE_11__.prettyPrint)({
            from: account?.address,
            to,
            value: typeof value !== 'undefined' &&
                `${(0,_utils_unit_formatEther_js__WEBPACK_IMPORTED_MODULE_6__.formatEther)(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,
            data,
            gas,
            gasPrice: typeof gasPrice !== 'undefined' && `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_7__.formatGwei)(gasPrice)} gwei`,
            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&
                `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_7__.formatGwei)(maxFeePerGas)} gwei`,
            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&
                `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_7__.formatGwei)(maxPriorityFeePerGas)} gwei`,
            nonce,
        });
        if (stateOverride) {
            prettyArgs += `\n${(0,_stateOverride_js__WEBPACK_IMPORTED_MODULE_10__.prettyStateOverride)(stateOverride)}`;
        }
        super(cause.shortMessage, {
            cause,
            docsPath,
            metaMessages: [
                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),
                'Raw Call Arguments:',
                prettyArgs,
            ].filter(Boolean),
            name: 'CallExecutionError',
        });
        Object.defineProperty(this, "cause", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.cause = cause;
    }
}
class ContractFunctionExecutionError extends _base_js__WEBPACK_IMPORTED_MODULE_9__.BaseError {
    constructor(cause, { abi, args, contractAddress, docsPath, functionName, sender, }) {
        const abiItem = (0,_utils_abi_getAbiItem_js__WEBPACK_IMPORTED_MODULE_5__.getAbiItem)({ abi, args, name: functionName });
        const formattedArgs = abiItem
            ? (0,_utils_abi_formatAbiItemWithArgs_js__WEBPACK_IMPORTED_MODULE_4__.formatAbiItemWithArgs)({
                abiItem,
                args,
                includeFunctionName: false,
                includeName: false,
            })
            : undefined;
        const functionWithParams = abiItem
            ? (0,_utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_3__.formatAbiItem)(abiItem, { includeName: true })
            : undefined;
        const prettyArgs = (0,_transaction_js__WEBPACK_IMPORTED_MODULE_11__.prettyPrint)({
            address: contractAddress && (0,_utils_js__WEBPACK_IMPORTED_MODULE_12__.getContractAddress)(contractAddress),
            function: functionWithParams,
            args: formattedArgs &&
                formattedArgs !== '()' &&
                `${[...Array(functionName?.length ?? 0).keys()]
                    .map(() => ' ')
                    .join('')}${formattedArgs}`,
            sender,
        });
        super(cause.shortMessage ||
            `An unknown error occurred while executing the contract function "${functionName}".`, {
            cause,
            docsPath,
            metaMessages: [
                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),
                prettyArgs && 'Contract Call:',
                prettyArgs,
            ].filter(Boolean),
            name: 'ContractFunctionExecutionError',
        });
        Object.defineProperty(this, "abi", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "args", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "cause", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "formattedArgs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "functionName", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "sender", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.abi = abi;
        this.args = args;
        this.cause = cause;
        this.contractAddress = contractAddress;
        this.functionName = functionName;
        this.sender = sender;
    }
}
class ContractFunctionRevertedError extends _base_js__WEBPACK_IMPORTED_MODULE_9__.BaseError {
    constructor({ abi, data, functionName, message, }) {
        let cause;
        let decodedData = undefined;
        let metaMessages;
        let reason;
        if (data && data !== '0x') {
            try {
                decodedData = (0,_utils_abi_decodeErrorResult_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrorResult)({ abi, data });
                const { abiItem, errorName, args: errorArgs } = decodedData;
                if (errorName === 'Error') {
                    reason = errorArgs[0];
                }
                else if (errorName === 'Panic') {
                    const [firstArg] = errorArgs;
                    reason = _constants_solidity_js__WEBPACK_IMPORTED_MODULE_1__.panicReasons[firstArg];
                }
                else {
                    const errorWithParams = abiItem
                        ? (0,_utils_abi_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_3__.formatAbiItem)(abiItem, { includeName: true })
                        : undefined;
                    const formattedArgs = abiItem && errorArgs
                        ? (0,_utils_abi_formatAbiItemWithArgs_js__WEBPACK_IMPORTED_MODULE_4__.formatAbiItemWithArgs)({
                            abiItem,
                            args: errorArgs,
                            includeFunctionName: false,
                            includeName: false,
                        })
                        : undefined;
                    metaMessages = [
                        errorWithParams ? `Error: ${errorWithParams}` : '',
                        formattedArgs && formattedArgs !== '()'
                            ? `       ${[...Array(errorName?.length ?? 0).keys()]
                                .map(() => ' ')
                                .join('')}${formattedArgs}`
                            : '',
                    ];
                }
            }
            catch (err) {
                cause = err;
            }
        }
        else if (message)
            reason = message;
        let signature;
        if (cause instanceof _abi_js__WEBPACK_IMPORTED_MODULE_8__.AbiErrorSignatureNotFoundError) {
            signature = cause.signature;
            metaMessages = [
                `Unable to decode signature "${signature}" as it was not found on the provided ABI.`,
                'Make sure you are using the correct ABI and that the error exists on it.',
                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,
            ];
        }
        super((reason && reason !== 'execution reverted') || signature
            ? [
                `The contract function "${functionName}" reverted with the following ${signature ? 'signature' : 'reason'}:`,
                reason || signature,
            ].join('\n')
            : `The contract function "${functionName}" reverted.`, {
            cause,
            metaMessages,
            name: 'ContractFunctionRevertedError',
        });
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "raw", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "reason", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.data = decodedData;
        this.raw = data;
        this.reason = reason;
        this.signature = signature;
    }
}
class ContractFunctionZeroDataError extends _base_js__WEBPACK_IMPORTED_MODULE_9__.BaseError {
    constructor({ functionName }) {
        super(`The contract function "${functionName}" returned no data ("0x").`, {
            metaMessages: [
                'This could be due to any of the following:',
                `  - The contract does not have the function "${functionName}",`,
                '  - The parameters passed to the contract function may be invalid, or',
                '  - The address is not a contract.',
            ],
            name: 'ContractFunctionZeroDataError',
        });
    }
}
class CounterfactualDeploymentFailedError extends _base_js__WEBPACK_IMPORTED_MODULE_9__.BaseError {
    constructor({ factory }) {
        super(`Deployment for counterfactual contract call failed${factory ? ` for factory "${factory}".` : ''}`, {
            metaMessages: [
                'Please ensure:',
                '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',
                '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',
            ],
            name: 'CounterfactualDeploymentFailedError',
        });
    }
}
class RawContractError extends _base_js__WEBPACK_IMPORTED_MODULE_9__.BaseError {
    constructor({ data, message, }) {
        super(message || '', { name: 'RawContractError' });
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 3
        });
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.data = data;
    }
}
//# sourceMappingURL=contract.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/cursor.js":
/*!*************************************************!*\
  !*** ./node_modules/viem/_esm/errors/cursor.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NegativeOffsetError: () => (/* binding */ NegativeOffsetError),
/* harmony export */   PositionOutOfBoundsError: () => (/* binding */ PositionOutOfBoundsError),
/* harmony export */   RecursiveReadLimitExceededError: () => (/* binding */ RecursiveReadLimitExceededError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class NegativeOffsetError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ offset }) {
        super(`Offset \`${offset}\` cannot be negative.`, {
            name: 'NegativeOffsetError',
        });
    }
}
class PositionOutOfBoundsError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ length, position }) {
        super(`Position \`${position}\` is out of bounds (\`0 < position < ${length}\`).`, { name: 'PositionOutOfBoundsError' });
    }
}
class RecursiveReadLimitExceededError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ count, limit }) {
        super(`Recursive read limit of \`${limit}\` exceeded (recursive read count: \`${count}\`).`, { name: 'RecursiveReadLimitExceededError' });
    }
}
//# sourceMappingURL=cursor.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/eip712.js":
/*!*************************************************!*\
  !*** ./node_modules/viem/_esm/errors/eip712.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Eip712DomainNotFoundError: () => (/* binding */ Eip712DomainNotFoundError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class Eip712DomainNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ address }) {
        super(`No EIP-712 domain found on contract "${address}".`, {
            metaMessages: [
                'Ensure that:',
                `- The contract is deployed at the address "${address}".`,
                '- `eip712Domain()` function exists on the contract.',
                '- `eip712Domain()` function matches signature to ERC-5267 specification.',
            ],
            name: 'Eip712DomainNotFoundError',
        });
    }
}
//# sourceMappingURL=eip712.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/ens.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/errors/ens.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EnsAvatarInvalidMetadataError: () => (/* binding */ EnsAvatarInvalidMetadataError),
/* harmony export */   EnsAvatarInvalidNftUriError: () => (/* binding */ EnsAvatarInvalidNftUriError),
/* harmony export */   EnsAvatarUnsupportedNamespaceError: () => (/* binding */ EnsAvatarUnsupportedNamespaceError),
/* harmony export */   EnsAvatarUriResolutionError: () => (/* binding */ EnsAvatarUriResolutionError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class EnsAvatarInvalidMetadataError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ data }) {
        super('Unable to extract image from metadata. The metadata may be malformed or invalid.', {
            metaMessages: [
                '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',
                '',
                `Provided data: ${JSON.stringify(data)}`,
            ],
            name: 'EnsAvatarInvalidMetadataError',
        });
    }
}
class EnsAvatarInvalidNftUriError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ reason }) {
        super(`ENS NFT avatar URI is invalid. ${reason}`, {
            name: 'EnsAvatarInvalidNftUriError',
        });
    }
}
class EnsAvatarUriResolutionError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ uri }) {
        super(`Unable to resolve ENS avatar URI "${uri}". The URI may be malformed, invalid, or does not respond with a valid image.`, { name: 'EnsAvatarUriResolutionError' });
    }
}
class EnsAvatarUnsupportedNamespaceError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ namespace }) {
        super(`ENS NFT avatar namespace "${namespace}" is not supported. Must be "erc721" or "erc1155".`, { name: 'EnsAvatarUnsupportedNamespaceError' });
    }
}
//# sourceMappingURL=ens.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/estimateGas.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/errors/estimateGas.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EstimateGasExecutionError: () => (/* binding */ EstimateGasExecutionError)
/* harmony export */ });
/* harmony import */ var _utils_unit_formatEther_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/unit/formatEther.js */ "./node_modules/viem/_esm/utils/unit/formatEther.js");
/* harmony import */ var _utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unit/formatGwei.js */ "./node_modules/viem/_esm/utils/unit/formatGwei.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");




class EstimateGasExecutionError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {
        const prettyArgs = (0,_transaction_js__WEBPACK_IMPORTED_MODULE_3__.prettyPrint)({
            from: account?.address,
            to,
            value: typeof value !== 'undefined' &&
                `${(0,_utils_unit_formatEther_js__WEBPACK_IMPORTED_MODULE_0__.formatEther)(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,
            data,
            gas,
            gasPrice: typeof gasPrice !== 'undefined' && `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_1__.formatGwei)(gasPrice)} gwei`,
            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&
                `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_1__.formatGwei)(maxFeePerGas)} gwei`,
            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&
                `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_1__.formatGwei)(maxPriorityFeePerGas)} gwei`,
            nonce,
        });
        super(cause.shortMessage, {
            cause,
            docsPath,
            metaMessages: [
                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),
                'Estimate Gas Arguments:',
                prettyArgs,
            ].filter(Boolean),
            name: 'EstimateGasExecutionError',
        });
        Object.defineProperty(this, "cause", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.cause = cause;
    }
}
//# sourceMappingURL=estimateGas.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/fee.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/errors/fee.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseFeeScalarError: () => (/* binding */ BaseFeeScalarError),
/* harmony export */   Eip1559FeesNotSupportedError: () => (/* binding */ Eip1559FeesNotSupportedError),
/* harmony export */   MaxFeePerGasTooLowError: () => (/* binding */ MaxFeePerGasTooLowError)
/* harmony export */ });
/* harmony import */ var _utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/unit/formatGwei.js */ "./node_modules/viem/_esm/utils/unit/formatGwei.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");


class BaseFeeScalarError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor() {
        super('`baseFeeMultiplier` must be greater than 1.', {
            name: 'BaseFeeScalarError',
        });
    }
}
class Eip1559FeesNotSupportedError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor() {
        super('Chain does not support EIP-1559 fees.', {
            name: 'Eip1559FeesNotSupportedError',
        });
    }
}
class MaxFeePerGasTooLowError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ maxPriorityFeePerGas }) {
        super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_0__.formatGwei)(maxPriorityFeePerGas)} gwei).`, { name: 'MaxFeePerGasTooLowError' });
    }
}
//# sourceMappingURL=fee.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/log.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/errors/log.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FilterTypeNotSupportedError: () => (/* binding */ FilterTypeNotSupportedError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class FilterTypeNotSupportedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(type) {
        super(`Filter type "${type}" is not supported.`, {
            name: 'FilterTypeNotSupportedError',
        });
    }
}
//# sourceMappingURL=log.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/node.js":
/*!***********************************************!*\
  !*** ./node_modules/viem/_esm/errors/node.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExecutionRevertedError: () => (/* binding */ ExecutionRevertedError),
/* harmony export */   FeeCapTooHighError: () => (/* binding */ FeeCapTooHighError),
/* harmony export */   FeeCapTooLowError: () => (/* binding */ FeeCapTooLowError),
/* harmony export */   InsufficientFundsError: () => (/* binding */ InsufficientFundsError),
/* harmony export */   IntrinsicGasTooHighError: () => (/* binding */ IntrinsicGasTooHighError),
/* harmony export */   IntrinsicGasTooLowError: () => (/* binding */ IntrinsicGasTooLowError),
/* harmony export */   NonceMaxValueError: () => (/* binding */ NonceMaxValueError),
/* harmony export */   NonceTooHighError: () => (/* binding */ NonceTooHighError),
/* harmony export */   NonceTooLowError: () => (/* binding */ NonceTooLowError),
/* harmony export */   TipAboveFeeCapError: () => (/* binding */ TipAboveFeeCapError),
/* harmony export */   TransactionTypeNotSupportedError: () => (/* binding */ TransactionTypeNotSupportedError),
/* harmony export */   UnknownNodeError: () => (/* binding */ UnknownNodeError)
/* harmony export */ });
/* harmony import */ var _utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/unit/formatGwei.js */ "./node_modules/viem/_esm/utils/unit/formatGwei.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");


class ExecutionRevertedError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, message, } = {}) {
        const reason = message
            ?.replace('execution reverted: ', '')
            ?.replace('execution reverted', '');
        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {
            cause,
            name: 'ExecutionRevertedError',
        });
    }
}
Object.defineProperty(ExecutionRevertedError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 3
});
Object.defineProperty(ExecutionRevertedError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /execution reverted/
});
class FeeCapTooHighError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, maxFeePerGas, } = {}) {
        super(`The fee cap (\`maxFeePerGas\`${maxFeePerGas ? ` = ${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_0__.formatGwei)(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {
            cause,
            name: 'FeeCapTooHighError',
        });
    }
}
Object.defineProperty(FeeCapTooHighError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/
});
class FeeCapTooLowError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, maxFeePerGas, } = {}) {
        super(`The fee cap (\`maxFeePerGas\`${maxFeePerGas ? ` = ${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_0__.formatGwei)(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {
            cause,
            name: 'FeeCapTooLowError',
        });
    }
}
Object.defineProperty(FeeCapTooLowError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/
});
class NonceTooHighError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, nonce, } = {}) {
        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause, name: 'NonceTooHighError' });
    }
}
Object.defineProperty(NonceTooHighError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /nonce too high/
});
class NonceTooLowError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, nonce, } = {}) {
        super([
            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,
            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',
        ].join('\n'), { cause, name: 'NonceTooLowError' });
    }
}
Object.defineProperty(NonceTooLowError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /nonce too low|transaction already imported|already known/
});
class NonceMaxValueError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, nonce, } = {}) {
        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause, name: 'NonceMaxValueError' });
    }
}
Object.defineProperty(NonceMaxValueError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /nonce has max value/
});
class InsufficientFundsError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause } = {}) {
        super([
            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',
        ].join('\n'), {
            cause,
            metaMessages: [
                'This error could arise when the account does not have enough funds to:',
                ' - pay for the total gas fee,',
                ' - pay for the value to send.',
                ' ',
                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',
                ' - `gas` is the amount of gas needed for transaction to execute,',
                ' - `gas fee` is the gas fee,',
                ' - `value` is the amount of ether to send to the recipient.',
            ],
            name: 'InsufficientFundsError',
        });
    }
}
Object.defineProperty(InsufficientFundsError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /insufficient funds|exceeds transaction sender account balance/
});
class IntrinsicGasTooHighError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, gas, } = {}) {
        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {
            cause,
            name: 'IntrinsicGasTooHighError',
        });
    }
}
Object.defineProperty(IntrinsicGasTooHighError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /intrinsic gas too high|gas limit reached/
});
class IntrinsicGasTooLowError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, gas, } = {}) {
        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {
            cause,
            name: 'IntrinsicGasTooLowError',
        });
    }
}
Object.defineProperty(IntrinsicGasTooLowError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /intrinsic gas too low/
});
class TransactionTypeNotSupportedError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause }) {
        super('The transaction type is not supported for this chain.', {
            cause,
            name: 'TransactionTypeNotSupportedError',
        });
    }
}
Object.defineProperty(TransactionTypeNotSupportedError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /transaction type not valid/
});
class TipAboveFeeCapError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {
        super([
            `The provided tip (\`maxPriorityFeePerGas\`${maxPriorityFeePerGas
                ? ` = ${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_0__.formatGwei)(maxPriorityFeePerGas)} gwei`
                : ''}) cannot be higher than the fee cap (\`maxFeePerGas\`${maxFeePerGas ? ` = ${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_0__.formatGwei)(maxFeePerGas)} gwei` : ''}).`,
        ].join('\n'), {
            cause,
            name: 'TipAboveFeeCapError',
        });
    }
}
Object.defineProperty(TipAboveFeeCapError, "nodeMessage", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/
});
class UnknownNodeError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ cause }) {
        super(`An error occurred while executing: ${cause?.shortMessage}`, {
            cause,
            name: 'UnknownNodeError',
        });
    }
}
//# sourceMappingURL=node.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/request.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/errors/request.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HttpRequestError: () => (/* binding */ HttpRequestError),
/* harmony export */   RpcRequestError: () => (/* binding */ RpcRequestError),
/* harmony export */   SocketClosedError: () => (/* binding */ SocketClosedError),
/* harmony export */   TimeoutError: () => (/* binding */ TimeoutError),
/* harmony export */   WebSocketRequestError: () => (/* binding */ WebSocketRequestError)
/* harmony export */ });
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/viem/_esm/errors/utils.js");



class HttpRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ body, cause, details, headers, status, url, }) {
        super('HTTP request failed.', {
            cause,
            details,
            metaMessages: [
                status && `Status: ${status}`,
                `URL: ${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(url)}`,
                body && `Request body: ${(0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(body)}`,
            ].filter(Boolean),
            name: 'HttpRequestError',
        });
        Object.defineProperty(this, "body", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "headers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "status", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.body = body;
        this.headers = headers;
        this.status = status;
        this.url = url;
    }
}
class WebSocketRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ body, cause, details, url, }) {
        super('WebSocket request failed.', {
            cause,
            details,
            metaMessages: [
                `URL: ${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(url)}`,
                body && `Request body: ${(0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(body)}`,
            ].filter(Boolean),
            name: 'WebSocketRequestError',
        });
    }
}
class RpcRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ body, error, url, }) {
        super('RPC Request failed.', {
            cause: error,
            details: error.message,
            metaMessages: [`URL: ${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(url)}`, `Request body: ${(0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(body)}`],
            name: 'RpcRequestError',
        });
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.code = error.code;
        this.data = error.data;
    }
}
class SocketClosedError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ url, } = {}) {
        super('The socket has been closed.', {
            metaMessages: [url && `URL: ${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(url)}`].filter(Boolean),
            name: 'SocketClosedError',
        });
    }
}
class TimeoutError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ body, url, }) {
        super('The request took too long to respond.', {
            details: 'The request timed out.',
            metaMessages: [`URL: ${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getUrl)(url)}`, `Request body: ${(0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(body)}`],
            name: 'TimeoutError',
        });
    }
}
//# sourceMappingURL=request.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/rpc.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/errors/rpc.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AtomicReadyWalletRejectedUpgradeError: () => (/* binding */ AtomicReadyWalletRejectedUpgradeError),
/* harmony export */   AtomicityNotSupportedError: () => (/* binding */ AtomicityNotSupportedError),
/* harmony export */   BundleTooLargeError: () => (/* binding */ BundleTooLargeError),
/* harmony export */   ChainDisconnectedError: () => (/* binding */ ChainDisconnectedError),
/* harmony export */   DuplicateIdError: () => (/* binding */ DuplicateIdError),
/* harmony export */   InternalRpcError: () => (/* binding */ InternalRpcError),
/* harmony export */   InvalidInputRpcError: () => (/* binding */ InvalidInputRpcError),
/* harmony export */   InvalidParamsRpcError: () => (/* binding */ InvalidParamsRpcError),
/* harmony export */   InvalidRequestRpcError: () => (/* binding */ InvalidRequestRpcError),
/* harmony export */   JsonRpcVersionUnsupportedError: () => (/* binding */ JsonRpcVersionUnsupportedError),
/* harmony export */   LimitExceededRpcError: () => (/* binding */ LimitExceededRpcError),
/* harmony export */   MethodNotFoundRpcError: () => (/* binding */ MethodNotFoundRpcError),
/* harmony export */   MethodNotSupportedRpcError: () => (/* binding */ MethodNotSupportedRpcError),
/* harmony export */   ParseRpcError: () => (/* binding */ ParseRpcError),
/* harmony export */   ProviderDisconnectedError: () => (/* binding */ ProviderDisconnectedError),
/* harmony export */   ProviderRpcError: () => (/* binding */ ProviderRpcError),
/* harmony export */   ResourceNotFoundRpcError: () => (/* binding */ ResourceNotFoundRpcError),
/* harmony export */   ResourceUnavailableRpcError: () => (/* binding */ ResourceUnavailableRpcError),
/* harmony export */   RpcError: () => (/* binding */ RpcError),
/* harmony export */   SwitchChainError: () => (/* binding */ SwitchChainError),
/* harmony export */   TransactionRejectedRpcError: () => (/* binding */ TransactionRejectedRpcError),
/* harmony export */   UnauthorizedProviderError: () => (/* binding */ UnauthorizedProviderError),
/* harmony export */   UnknownBundleIdError: () => (/* binding */ UnknownBundleIdError),
/* harmony export */   UnknownRpcError: () => (/* binding */ UnknownRpcError),
/* harmony export */   UnsupportedChainIdError: () => (/* binding */ UnsupportedChainIdError),
/* harmony export */   UnsupportedNonOptionalCapabilityError: () => (/* binding */ UnsupportedNonOptionalCapabilityError),
/* harmony export */   UnsupportedProviderMethodError: () => (/* binding */ UnsupportedProviderMethodError),
/* harmony export */   UserRejectedRequestError: () => (/* binding */ UserRejectedRequestError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./request.js */ "./node_modules/viem/_esm/errors/request.js");


const unknownErrorCode = -1;
class RpcError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(cause, { code, docsPath, metaMessages, name, shortMessage, }) {
        super(shortMessage, {
            cause,
            docsPath,
            metaMessages: metaMessages || cause?.metaMessages,
            name: name || 'RpcError',
        });
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.name = name || cause.name;
        this.code = (cause instanceof _request_js__WEBPACK_IMPORTED_MODULE_1__.RpcRequestError ? cause.code : (code ?? unknownErrorCode));
    }
}
class ProviderRpcError extends RpcError {
    constructor(cause, options) {
        super(cause, options);
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.data = options.data;
    }
}
class ParseRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: ParseRpcError.code,
            name: 'ParseRpcError',
            shortMessage: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',
        });
    }
}
Object.defineProperty(ParseRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32700
});
class InvalidRequestRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: InvalidRequestRpcError.code,
            name: 'InvalidRequestRpcError',
            shortMessage: 'JSON is not a valid request object.',
        });
    }
}
Object.defineProperty(InvalidRequestRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32600
});
class MethodNotFoundRpcError extends RpcError {
    constructor(cause, { method } = {}) {
        super(cause, {
            code: MethodNotFoundRpcError.code,
            name: 'MethodNotFoundRpcError',
            shortMessage: `The method${method ? ` "${method}"` : ''} does not exist / is not available.`,
        });
    }
}
Object.defineProperty(MethodNotFoundRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32601
});
class InvalidParamsRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: InvalidParamsRpcError.code,
            name: 'InvalidParamsRpcError',
            shortMessage: [
                'Invalid parameters were provided to the RPC method.',
                'Double check you have provided the correct parameters.',
            ].join('\n'),
        });
    }
}
Object.defineProperty(InvalidParamsRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32602
});
class InternalRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: InternalRpcError.code,
            name: 'InternalRpcError',
            shortMessage: 'An internal error was received.',
        });
    }
}
Object.defineProperty(InternalRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32603
});
class InvalidInputRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: InvalidInputRpcError.code,
            name: 'InvalidInputRpcError',
            shortMessage: [
                'Missing or invalid parameters.',
                'Double check you have provided the correct parameters.',
            ].join('\n'),
        });
    }
}
Object.defineProperty(InvalidInputRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32000
});
class ResourceNotFoundRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: ResourceNotFoundRpcError.code,
            name: 'ResourceNotFoundRpcError',
            shortMessage: 'Requested resource not found.',
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'ResourceNotFoundRpcError'
        });
    }
}
Object.defineProperty(ResourceNotFoundRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32001
});
class ResourceUnavailableRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: ResourceUnavailableRpcError.code,
            name: 'ResourceUnavailableRpcError',
            shortMessage: 'Requested resource not available.',
        });
    }
}
Object.defineProperty(ResourceUnavailableRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32002
});
class TransactionRejectedRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: TransactionRejectedRpcError.code,
            name: 'TransactionRejectedRpcError',
            shortMessage: 'Transaction creation failed.',
        });
    }
}
Object.defineProperty(TransactionRejectedRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32003
});
class MethodNotSupportedRpcError extends RpcError {
    constructor(cause, { method } = {}) {
        super(cause, {
            code: MethodNotSupportedRpcError.code,
            name: 'MethodNotSupportedRpcError',
            shortMessage: `Method${method ? ` "${method}"` : ''} is not supported.`,
        });
    }
}
Object.defineProperty(MethodNotSupportedRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32004
});
class LimitExceededRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: LimitExceededRpcError.code,
            name: 'LimitExceededRpcError',
            shortMessage: 'Request exceeds defined limit.',
        });
    }
}
Object.defineProperty(LimitExceededRpcError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32005
});
class JsonRpcVersionUnsupportedError extends RpcError {
    constructor(cause) {
        super(cause, {
            code: JsonRpcVersionUnsupportedError.code,
            name: 'JsonRpcVersionUnsupportedError',
            shortMessage: 'Version of JSON-RPC protocol is not supported.',
        });
    }
}
Object.defineProperty(JsonRpcVersionUnsupportedError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: -32006
});
class UserRejectedRequestError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: UserRejectedRequestError.code,
            name: 'UserRejectedRequestError',
            shortMessage: 'User rejected the request.',
        });
    }
}
Object.defineProperty(UserRejectedRequestError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4001
});
class UnauthorizedProviderError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: UnauthorizedProviderError.code,
            name: 'UnauthorizedProviderError',
            shortMessage: 'The requested method and/or account has not been authorized by the user.',
        });
    }
}
Object.defineProperty(UnauthorizedProviderError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4100
});
class UnsupportedProviderMethodError extends ProviderRpcError {
    constructor(cause, { method } = {}) {
        super(cause, {
            code: UnsupportedProviderMethodError.code,
            name: 'UnsupportedProviderMethodError',
            shortMessage: `The Provider does not support the requested method${method ? ` " ${method}"` : ''}.`,
        });
    }
}
Object.defineProperty(UnsupportedProviderMethodError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4200
});
class ProviderDisconnectedError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: ProviderDisconnectedError.code,
            name: 'ProviderDisconnectedError',
            shortMessage: 'The Provider is disconnected from all chains.',
        });
    }
}
Object.defineProperty(ProviderDisconnectedError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4900
});
class ChainDisconnectedError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: ChainDisconnectedError.code,
            name: 'ChainDisconnectedError',
            shortMessage: 'The Provider is not connected to the requested chain.',
        });
    }
}
Object.defineProperty(ChainDisconnectedError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4901
});
class SwitchChainError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: SwitchChainError.code,
            name: 'SwitchChainError',
            shortMessage: 'An error occurred when attempting to switch chain.',
        });
    }
}
Object.defineProperty(SwitchChainError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 4902
});
class UnsupportedNonOptionalCapabilityError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: UnsupportedNonOptionalCapabilityError.code,
            name: 'UnsupportedNonOptionalCapabilityError',
            shortMessage: 'This Wallet does not support a capability that was not marked as optional.',
        });
    }
}
Object.defineProperty(UnsupportedNonOptionalCapabilityError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5700
});
class UnsupportedChainIdError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: UnsupportedChainIdError.code,
            name: 'UnsupportedChainIdError',
            shortMessage: 'This Wallet does not support the requested chain ID.',
        });
    }
}
Object.defineProperty(UnsupportedChainIdError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5710
});
class DuplicateIdError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: DuplicateIdError.code,
            name: 'DuplicateIdError',
            shortMessage: 'There is already a bundle submitted with this ID.',
        });
    }
}
Object.defineProperty(DuplicateIdError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5720
});
class UnknownBundleIdError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: UnknownBundleIdError.code,
            name: 'UnknownBundleIdError',
            shortMessage: 'This bundle id is unknown / has not been submitted',
        });
    }
}
Object.defineProperty(UnknownBundleIdError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5730
});
class BundleTooLargeError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: BundleTooLargeError.code,
            name: 'BundleTooLargeError',
            shortMessage: 'The call bundle is too large for the Wallet to process.',
        });
    }
}
Object.defineProperty(BundleTooLargeError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5740
});
class AtomicReadyWalletRejectedUpgradeError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: AtomicReadyWalletRejectedUpgradeError.code,
            name: 'AtomicReadyWalletRejectedUpgradeError',
            shortMessage: 'The Wallet can support atomicity after an upgrade, but the user rejected the upgrade.',
        });
    }
}
Object.defineProperty(AtomicReadyWalletRejectedUpgradeError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5750
});
class AtomicityNotSupportedError extends ProviderRpcError {
    constructor(cause) {
        super(cause, {
            code: AtomicityNotSupportedError.code,
            name: 'AtomicityNotSupportedError',
            shortMessage: 'The wallet does not support atomic execution but the request requires it.',
        });
    }
}
Object.defineProperty(AtomicityNotSupportedError, "code", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: 5760
});
class UnknownRpcError extends RpcError {
    constructor(cause) {
        super(cause, {
            name: 'UnknownRpcError',
            shortMessage: 'An unknown RPC error occurred.',
        });
    }
}
//# sourceMappingURL=rpc.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/stateOverride.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/errors/stateOverride.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AccountStateConflictError: () => (/* binding */ AccountStateConflictError),
/* harmony export */   StateAssignmentConflictError: () => (/* binding */ StateAssignmentConflictError),
/* harmony export */   prettyStateMapping: () => (/* binding */ prettyStateMapping),
/* harmony export */   prettyStateOverride: () => (/* binding */ prettyStateOverride)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class AccountStateConflictError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ address }) {
        super(`State for account "${address}" is set multiple times.`, {
            name: 'AccountStateConflictError',
        });
    }
}
class StateAssignmentConflictError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor() {
        super('state and stateDiff are set on the same account.', {
            name: 'StateAssignmentConflictError',
        });
    }
}
/** @internal */
function prettyStateMapping(stateMapping) {
    return stateMapping.reduce((pretty, { slot, value }) => {
        return `${pretty}        ${slot}: ${value}\n`;
    }, '');
}
function prettyStateOverride(stateOverride) {
    return stateOverride
        .reduce((pretty, { address, ...state }) => {
        let val = `${pretty}    ${address}:\n`;
        if (state.nonce)
            val += `      nonce: ${state.nonce}\n`;
        if (state.balance)
            val += `      balance: ${state.balance}\n`;
        if (state.code)
            val += `      code: ${state.code}\n`;
        if (state.state) {
            val += '      state:\n';
            val += prettyStateMapping(state.state);
        }
        if (state.stateDiff) {
            val += '      stateDiff:\n';
            val += prettyStateMapping(state.stateDiff);
        }
        return val;
    }, '  State Override:\n')
        .slice(0, -1);
}
//# sourceMappingURL=stateOverride.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/transaction.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/errors/transaction.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FeeConflictError: () => (/* binding */ FeeConflictError),
/* harmony export */   InvalidLegacyVError: () => (/* binding */ InvalidLegacyVError),
/* harmony export */   InvalidSerializableTransactionError: () => (/* binding */ InvalidSerializableTransactionError),
/* harmony export */   InvalidSerializedTransactionError: () => (/* binding */ InvalidSerializedTransactionError),
/* harmony export */   InvalidSerializedTransactionTypeError: () => (/* binding */ InvalidSerializedTransactionTypeError),
/* harmony export */   InvalidStorageKeySizeError: () => (/* binding */ InvalidStorageKeySizeError),
/* harmony export */   TransactionExecutionError: () => (/* binding */ TransactionExecutionError),
/* harmony export */   TransactionNotFoundError: () => (/* binding */ TransactionNotFoundError),
/* harmony export */   TransactionReceiptNotFoundError: () => (/* binding */ TransactionReceiptNotFoundError),
/* harmony export */   WaitForTransactionReceiptTimeoutError: () => (/* binding */ WaitForTransactionReceiptTimeoutError),
/* harmony export */   prettyPrint: () => (/* binding */ prettyPrint)
/* harmony export */ });
/* harmony import */ var _utils_unit_formatEther_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/unit/formatEther.js */ "./node_modules/viem/_esm/utils/unit/formatEther.js");
/* harmony import */ var _utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unit/formatGwei.js */ "./node_modules/viem/_esm/utils/unit/formatGwei.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");



function prettyPrint(args) {
    const entries = Object.entries(args)
        .map(([key, value]) => {
        if (value === undefined || value === false)
            return null;
        return [key, value];
    })
        .filter(Boolean);
    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);
    return entries
        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)
        .join('\n');
}
class FeeConflictError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor() {
        super([
            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',
            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',
        ].join('\n'), { name: 'FeeConflictError' });
    }
}
class InvalidLegacyVError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ v }) {
        super(`Invalid \`v\` value "${v}". Expected 27 or 28.`, {
            name: 'InvalidLegacyVError',
        });
    }
}
class InvalidSerializableTransactionError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ transaction }) {
        super('Cannot infer a transaction type from provided transaction.', {
            metaMessages: [
                'Provided Transaction:',
                '{',
                prettyPrint(transaction),
                '}',
                '',
                'To infer the type, either provide:',
                '- a `type` to the Transaction, or',
                '- an EIP-1559 Transaction with `maxFeePerGas`, or',
                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',
                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',
                '- an EIP-7702 Transaction with `authorizationList`, or',
                '- a Legacy Transaction with `gasPrice`',
            ],
            name: 'InvalidSerializableTransactionError',
        });
    }
}
class InvalidSerializedTransactionTypeError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ serializedType }) {
        super(`Serialized transaction type "${serializedType}" is invalid.`, {
            name: 'InvalidSerializedTransactionType',
        });
        Object.defineProperty(this, "serializedType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.serializedType = serializedType;
    }
}
class InvalidSerializedTransactionError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ attributes, serializedTransaction, type, }) {
        const missing = Object.entries(attributes)
            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))
            .filter(Boolean);
        super(`Invalid serialized transaction of type "${type}" was provided.`, {
            metaMessages: [
                `Serialized Transaction: "${serializedTransaction}"`,
                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',
            ].filter(Boolean),
            name: 'InvalidSerializedTransactionError',
        });
        Object.defineProperty(this, "serializedTransaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.serializedTransaction = serializedTransaction;
        this.type = type;
    }
}
class InvalidStorageKeySizeError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ storageKey }) {
        super(`Size for storage key "${storageKey}" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`, { name: 'InvalidStorageKeySizeError' });
    }
}
class TransactionExecutionError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {
        const prettyArgs = prettyPrint({
            chain: chain && `${chain?.name} (id: ${chain?.id})`,
            from: account?.address,
            to,
            value: typeof value !== 'undefined' &&
                `${(0,_utils_unit_formatEther_js__WEBPACK_IMPORTED_MODULE_0__.formatEther)(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,
            data,
            gas,
            gasPrice: typeof gasPrice !== 'undefined' && `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_1__.formatGwei)(gasPrice)} gwei`,
            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&
                `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_1__.formatGwei)(maxFeePerGas)} gwei`,
            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&
                `${(0,_utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_1__.formatGwei)(maxPriorityFeePerGas)} gwei`,
            nonce,
        });
        super(cause.shortMessage, {
            cause,
            docsPath,
            metaMessages: [
                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),
                'Request Arguments:',
                prettyArgs,
            ].filter(Boolean),
            name: 'TransactionExecutionError',
        });
        Object.defineProperty(this, "cause", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.cause = cause;
    }
}
class TransactionNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {
        let identifier = 'Transaction';
        if (blockTag && index !== undefined)
            identifier = `Transaction at block time "${blockTag}" at index "${index}"`;
        if (blockHash && index !== undefined)
            identifier = `Transaction at block hash "${blockHash}" at index "${index}"`;
        if (blockNumber && index !== undefined)
            identifier = `Transaction at block number "${blockNumber}" at index "${index}"`;
        if (hash)
            identifier = `Transaction with hash "${hash}"`;
        super(`${identifier} could not be found.`, {
            name: 'TransactionNotFoundError',
        });
    }
}
class TransactionReceiptNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ hash }) {
        super(`Transaction receipt with hash "${hash}" could not be found. The Transaction may not be processed on a block yet.`, {
            name: 'TransactionReceiptNotFoundError',
        });
    }
}
class WaitForTransactionReceiptTimeoutError extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError {
    constructor({ hash }) {
        super(`Timed out while waiting for transaction with hash "${hash}" to be confirmed.`, { name: 'WaitForTransactionReceiptTimeoutError' });
    }
}
//# sourceMappingURL=transaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/transport.js":
/*!****************************************************!*\
  !*** ./node_modules/viem/_esm/errors/transport.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UrlRequiredError: () => (/* binding */ UrlRequiredError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class UrlRequiredError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor() {
        super('No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.', {
            docsPath: '/docs/clients/intro',
            name: 'UrlRequiredError',
        });
    }
}
//# sourceMappingURL=transport.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/typedData.js":
/*!****************************************************!*\
  !*** ./node_modules/viem/_esm/errors/typedData.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidDomainError: () => (/* binding */ InvalidDomainError),
/* harmony export */   InvalidPrimaryTypeError: () => (/* binding */ InvalidPrimaryTypeError),
/* harmony export */   InvalidStructTypeError: () => (/* binding */ InvalidStructTypeError)
/* harmony export */ });
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");


class InvalidDomainError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ domain }) {
        super(`Invalid domain "${(0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(domain)}".`, {
            metaMessages: ['Must be a valid EIP-712 domain.'],
        });
    }
}
class InvalidPrimaryTypeError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ primaryType, types, }) {
        super(`Invalid primary type \`${primaryType}\` must be one of \`${JSON.stringify(Object.keys(types))}\`.`, {
            docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',
            metaMessages: ['Check that the primary type is a key in `types`.'],
        });
    }
}
class InvalidStructTypeError extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError {
    constructor({ type }) {
        super(`Struct type "${type}" is invalid.`, {
            metaMessages: ['Struct type must not be a Solidity type.'],
            name: 'InvalidStructTypeError',
        });
    }
}
//# sourceMappingURL=typedData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/unit.js":
/*!***********************************************!*\
  !*** ./node_modules/viem/_esm/errors/unit.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidDecimalNumberError: () => (/* binding */ InvalidDecimalNumberError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/viem/_esm/errors/base.js");

class InvalidDecimalNumberError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ value }) {
        super(`Number \`${value}\` is not a valid decimal number.`, {
            name: 'InvalidDecimalNumberError',
        });
    }
}
//# sourceMappingURL=unit.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/errors/utils.js":
/*!************************************************!*\
  !*** ./node_modules/viem/_esm/errors/utils.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getContractAddress: () => (/* binding */ getContractAddress),
/* harmony export */   getUrl: () => (/* binding */ getUrl)
/* harmony export */ });
const getContractAddress = (address) => address;
const getUrl = (url) => url;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/index.js":
/*!*****************************************!*\
  !*** ./node_modules/viem/_esm/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbiConstructorNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiConstructorNotFoundError),
/* harmony export */   AbiConstructorParamsNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiConstructorParamsNotFoundError),
/* harmony export */   AbiDecodingDataSizeInvalidError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiDecodingDataSizeInvalidError),
/* harmony export */   AbiDecodingDataSizeTooSmallError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiDecodingDataSizeTooSmallError),
/* harmony export */   AbiDecodingZeroDataError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiDecodingZeroDataError),
/* harmony export */   AbiEncodingArrayLengthMismatchError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiEncodingArrayLengthMismatchError),
/* harmony export */   AbiEncodingBytesSizeMismatchError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiEncodingBytesSizeMismatchError),
/* harmony export */   AbiEncodingLengthMismatchError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiEncodingLengthMismatchError),
/* harmony export */   AbiErrorInputsNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiErrorInputsNotFoundError),
/* harmony export */   AbiErrorNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiErrorNotFoundError),
/* harmony export */   AbiErrorSignatureNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiErrorSignatureNotFoundError),
/* harmony export */   AbiEventNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiEventNotFoundError),
/* harmony export */   AbiEventSignatureEmptyTopicsError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiEventSignatureEmptyTopicsError),
/* harmony export */   AbiEventSignatureNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiEventSignatureNotFoundError),
/* harmony export */   AbiFunctionNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiFunctionNotFoundError),
/* harmony export */   AbiFunctionOutputsNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiFunctionOutputsNotFoundError),
/* harmony export */   AbiFunctionSignatureNotFoundError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.AbiFunctionSignatureNotFoundError),
/* harmony export */   AccountStateConflictError: () => (/* reexport safe */ _errors_stateOverride_js__WEBPACK_IMPORTED_MODULE_49__.AccountStateConflictError),
/* harmony export */   AtomicReadyWalletRejectedUpgradeError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.AtomicReadyWalletRejectedUpgradeError),
/* harmony export */   AtomicityNotSupportedError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.AtomicityNotSupportedError),
/* harmony export */   BaseError: () => (/* reexport safe */ _errors_base_js__WEBPACK_IMPORTED_MODULE_31__.BaseError),
/* harmony export */   BaseFeeScalarError: () => (/* reexport safe */ _errors_fee_js__WEBPACK_IMPORTED_MODULE_35__.BaseFeeScalarError),
/* harmony export */   BlockNotFoundError: () => (/* reexport safe */ _errors_block_js__WEBPACK_IMPORTED_MODULE_33__.BlockNotFoundError),
/* harmony export */   BundleFailedError: () => (/* reexport safe */ _errors_calls_js__WEBPACK_IMPORTED_MODULE_32__.BundleFailedError),
/* harmony export */   BundleTooLargeError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.BundleTooLargeError),
/* harmony export */   BytesSizeMismatchError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.BytesSizeMismatchError),
/* harmony export */   CallExecutionError: () => (/* reexport safe */ _errors_contract_js__WEBPACK_IMPORTED_MODULE_34__.CallExecutionError),
/* harmony export */   ChainDisconnectedError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.ChainDisconnectedError),
/* harmony export */   ChainDoesNotSupportContract: () => (/* reexport safe */ _errors_chain_js__WEBPACK_IMPORTED_MODULE_37__.ChainDoesNotSupportContract),
/* harmony export */   ChainMismatchError: () => (/* reexport safe */ _errors_chain_js__WEBPACK_IMPORTED_MODULE_37__.ChainMismatchError),
/* harmony export */   ChainNotFoundError: () => (/* reexport safe */ _errors_chain_js__WEBPACK_IMPORTED_MODULE_37__.ChainNotFoundError),
/* harmony export */   CircularReferenceError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_8__.CircularReferenceError),
/* harmony export */   ClientChainNotConfiguredError: () => (/* reexport safe */ _errors_chain_js__WEBPACK_IMPORTED_MODULE_37__.ClientChainNotConfiguredError),
/* harmony export */   ContractFunctionExecutionError: () => (/* reexport safe */ _errors_contract_js__WEBPACK_IMPORTED_MODULE_34__.ContractFunctionExecutionError),
/* harmony export */   ContractFunctionRevertedError: () => (/* reexport safe */ _errors_contract_js__WEBPACK_IMPORTED_MODULE_34__.ContractFunctionRevertedError),
/* harmony export */   ContractFunctionZeroDataError: () => (/* reexport safe */ _errors_contract_js__WEBPACK_IMPORTED_MODULE_34__.ContractFunctionZeroDataError),
/* harmony export */   CounterfactualDeploymentFailedError: () => (/* reexport safe */ _errors_contract_js__WEBPACK_IMPORTED_MODULE_34__.CounterfactualDeploymentFailedError),
/* harmony export */   DecodeLogDataMismatch: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.DecodeLogDataMismatch),
/* harmony export */   DecodeLogTopicsMismatch: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.DecodeLogTopicsMismatch),
/* harmony export */   DuplicateIdError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.DuplicateIdError),
/* harmony export */   EIP1193ProviderRpcError: () => (/* reexport safe */ _types_eip1193_js__WEBPACK_IMPORTED_MODULE_51__.ProviderRpcError),
/* harmony export */   Eip1559FeesNotSupportedError: () => (/* reexport safe */ _errors_fee_js__WEBPACK_IMPORTED_MODULE_35__.Eip1559FeesNotSupportedError),
/* harmony export */   EnsAvatarInvalidNftUriError: () => (/* reexport safe */ _errors_ens_js__WEBPACK_IMPORTED_MODULE_39__.EnsAvatarInvalidNftUriError),
/* harmony export */   EnsAvatarUnsupportedNamespaceError: () => (/* reexport safe */ _errors_ens_js__WEBPACK_IMPORTED_MODULE_39__.EnsAvatarUnsupportedNamespaceError),
/* harmony export */   EnsAvatarUriResolutionError: () => (/* reexport safe */ _errors_ens_js__WEBPACK_IMPORTED_MODULE_39__.EnsAvatarUriResolutionError),
/* harmony export */   EstimateGasExecutionError: () => (/* reexport safe */ _errors_estimateGas_js__WEBPACK_IMPORTED_MODULE_41__.EstimateGasExecutionError),
/* harmony export */   ExecutionRevertedError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.ExecutionRevertedError),
/* harmony export */   FeeCapTooHighError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.FeeCapTooHighError),
/* harmony export */   FeeCapTooLowError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.FeeCapTooLowError),
/* harmony export */   FeeConflictError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.FeeConflictError),
/* harmony export */   FilterTypeNotSupportedError: () => (/* reexport safe */ _errors_log_js__WEBPACK_IMPORTED_MODULE_43__.FilterTypeNotSupportedError),
/* harmony export */   HttpRequestError: () => (/* reexport safe */ _errors_request_js__WEBPACK_IMPORTED_MODULE_44__.HttpRequestError),
/* harmony export */   InsufficientFundsError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.InsufficientFundsError),
/* harmony export */   IntegerOutOfRangeError: () => (/* reexport safe */ _errors_encoding_js__WEBPACK_IMPORTED_MODULE_38__.IntegerOutOfRangeError),
/* harmony export */   InternalRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.InternalRpcError),
/* harmony export */   IntrinsicGasTooHighError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.IntrinsicGasTooHighError),
/* harmony export */   IntrinsicGasTooLowError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.IntrinsicGasTooLowError),
/* harmony export */   InvalidAbiDecodingTypeError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.InvalidAbiDecodingTypeError),
/* harmony export */   InvalidAbiEncodingTypeError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.InvalidAbiEncodingTypeError),
/* harmony export */   InvalidAbiItemError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_4__.InvalidAbiItemError),
/* harmony export */   InvalidAbiParameterError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_5__.InvalidAbiParameterError),
/* harmony export */   InvalidAbiParametersError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_5__.InvalidAbiParametersError),
/* harmony export */   InvalidAbiTypeParameterError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_5__.InvalidAbiTypeParameterError),
/* harmony export */   InvalidAddressError: () => (/* reexport safe */ _errors_address_js__WEBPACK_IMPORTED_MODULE_45__.InvalidAddressError),
/* harmony export */   InvalidArrayError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.InvalidArrayError),
/* harmony export */   InvalidBytesBooleanError: () => (/* reexport safe */ _errors_encoding_js__WEBPACK_IMPORTED_MODULE_38__.InvalidBytesBooleanError),
/* harmony export */   InvalidChainIdError: () => (/* reexport safe */ _errors_chain_js__WEBPACK_IMPORTED_MODULE_37__.InvalidChainIdError),
/* harmony export */   InvalidDecimalNumberError: () => (/* reexport safe */ _errors_unit_js__WEBPACK_IMPORTED_MODULE_40__.InvalidDecimalNumberError),
/* harmony export */   InvalidDefinitionTypeError: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.InvalidDefinitionTypeError),
/* harmony export */   InvalidDomainError: () => (/* reexport safe */ _errors_typedData_js__WEBPACK_IMPORTED_MODULE_50__.InvalidDomainError),
/* harmony export */   InvalidFunctionModifierError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_5__.InvalidFunctionModifierError),
/* harmony export */   InvalidHexBooleanError: () => (/* reexport safe */ _errors_encoding_js__WEBPACK_IMPORTED_MODULE_38__.InvalidHexBooleanError),
/* harmony export */   InvalidHexValueError: () => (/* reexport safe */ _errors_encoding_js__WEBPACK_IMPORTED_MODULE_38__.InvalidHexValueError),
/* harmony export */   InvalidInputRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.InvalidInputRpcError),
/* harmony export */   InvalidLegacyVError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.InvalidLegacyVError),
/* harmony export */   InvalidModifierError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_5__.InvalidModifierError),
/* harmony export */   InvalidParameterError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_5__.InvalidParameterError),
/* harmony export */   InvalidParamsRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.InvalidParamsRpcError),
/* harmony export */   InvalidParenthesisError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_7__.InvalidParenthesisError),
/* harmony export */   InvalidPrimaryTypeError: () => (/* reexport safe */ _errors_typedData_js__WEBPACK_IMPORTED_MODULE_50__.InvalidPrimaryTypeError),
/* harmony export */   InvalidRequestRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.InvalidRequestRpcError),
/* harmony export */   InvalidSerializableTransactionError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.InvalidSerializableTransactionError),
/* harmony export */   InvalidSerializedTransactionError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.InvalidSerializedTransactionError),
/* harmony export */   InvalidSerializedTransactionTypeError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.InvalidSerializedTransactionTypeError),
/* harmony export */   InvalidSignatureError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_6__.InvalidSignatureError),
/* harmony export */   InvalidStorageKeySizeError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.InvalidStorageKeySizeError),
/* harmony export */   InvalidStructSignatureError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_6__.InvalidStructSignatureError),
/* harmony export */   InvalidStructTypeError: () => (/* reexport safe */ _errors_typedData_js__WEBPACK_IMPORTED_MODULE_50__.InvalidStructTypeError),
/* harmony export */   JsonRpcVersionUnsupportedError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.JsonRpcVersionUnsupportedError),
/* harmony export */   LimitExceededRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.LimitExceededRpcError),
/* harmony export */   MaxFeePerGasTooLowError: () => (/* reexport safe */ _errors_fee_js__WEBPACK_IMPORTED_MODULE_35__.MaxFeePerGasTooLowError),
/* harmony export */   MethodNotFoundRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.MethodNotFoundRpcError),
/* harmony export */   MethodNotSupportedRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.MethodNotSupportedRpcError),
/* harmony export */   NonceMaxValueError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.NonceMaxValueError),
/* harmony export */   NonceTooHighError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.NonceTooHighError),
/* harmony export */   NonceTooLowError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.NonceTooLowError),
/* harmony export */   ParseRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.ParseRpcError),
/* harmony export */   ProviderDisconnectedError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.ProviderDisconnectedError),
/* harmony export */   ProviderRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.ProviderRpcError),
/* harmony export */   RawContractError: () => (/* reexport safe */ _errors_contract_js__WEBPACK_IMPORTED_MODULE_34__.RawContractError),
/* harmony export */   ResourceNotFoundRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.ResourceNotFoundRpcError),
/* harmony export */   ResourceUnavailableRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.ResourceUnavailableRpcError),
/* harmony export */   RpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.RpcError),
/* harmony export */   RpcRequestError: () => (/* reexport safe */ _errors_request_js__WEBPACK_IMPORTED_MODULE_44__.RpcRequestError),
/* harmony export */   SizeExceedsPaddingSizeError: () => (/* reexport safe */ _errors_data_js__WEBPACK_IMPORTED_MODULE_47__.SizeExceedsPaddingSizeError),
/* harmony export */   SizeOverflowError: () => (/* reexport safe */ _errors_encoding_js__WEBPACK_IMPORTED_MODULE_38__.SizeOverflowError),
/* harmony export */   SliceOffsetOutOfBoundsError: () => (/* reexport safe */ _errors_data_js__WEBPACK_IMPORTED_MODULE_47__.SliceOffsetOutOfBoundsError),
/* harmony export */   SocketClosedError: () => (/* reexport safe */ _errors_request_js__WEBPACK_IMPORTED_MODULE_44__.SocketClosedError),
/* harmony export */   SolidityProtectedKeywordError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_5__.SolidityProtectedKeywordError),
/* harmony export */   StateAssignmentConflictError: () => (/* reexport safe */ _errors_stateOverride_js__WEBPACK_IMPORTED_MODULE_49__.StateAssignmentConflictError),
/* harmony export */   SwitchChainError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.SwitchChainError),
/* harmony export */   TimeoutError: () => (/* reexport safe */ _errors_request_js__WEBPACK_IMPORTED_MODULE_44__.TimeoutError),
/* harmony export */   TipAboveFeeCapError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.TipAboveFeeCapError),
/* harmony export */   TransactionExecutionError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.TransactionExecutionError),
/* harmony export */   TransactionNotFoundError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.TransactionNotFoundError),
/* harmony export */   TransactionReceiptNotFoundError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.TransactionReceiptNotFoundError),
/* harmony export */   TransactionRejectedRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.TransactionRejectedRpcError),
/* harmony export */   TransactionTypeNotSupportedError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.TransactionTypeNotSupportedError),
/* harmony export */   UnauthorizedProviderError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.UnauthorizedProviderError),
/* harmony export */   UnknownBundleIdError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.UnknownBundleIdError),
/* harmony export */   UnknownNodeError: () => (/* reexport safe */ _errors_node_js__WEBPACK_IMPORTED_MODULE_42__.UnknownNodeError),
/* harmony export */   UnknownRpcError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.UnknownRpcError),
/* harmony export */   UnknownSignatureError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_6__.UnknownSignatureError),
/* harmony export */   UnknownTypeError: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_4__.UnknownTypeError),
/* harmony export */   UnsupportedChainIdError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.UnsupportedChainIdError),
/* harmony export */   UnsupportedNonOptionalCapabilityError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.UnsupportedNonOptionalCapabilityError),
/* harmony export */   UnsupportedPackedAbiType: () => (/* reexport safe */ _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__.UnsupportedPackedAbiType),
/* harmony export */   UnsupportedProviderMethodError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.UnsupportedProviderMethodError),
/* harmony export */   UrlRequiredError: () => (/* reexport safe */ _errors_transport_js__WEBPACK_IMPORTED_MODULE_48__.UrlRequiredError),
/* harmony export */   UserRejectedRequestError: () => (/* reexport safe */ _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__.UserRejectedRequestError),
/* harmony export */   WaitForCallsStatusTimeoutError: () => (/* reexport safe */ _actions_wallet_waitForCallsStatus_js__WEBPACK_IMPORTED_MODULE_10__.WaitForCallsStatusTimeoutError),
/* harmony export */   WaitForTransactionReceiptTimeoutError: () => (/* reexport safe */ _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__.WaitForTransactionReceiptTimeoutError),
/* harmony export */   WebSocketRequestError: () => (/* reexport safe */ _errors_request_js__WEBPACK_IMPORTED_MODULE_44__.WebSocketRequestError),
/* harmony export */   assertCurrentChain: () => (/* reexport safe */ _utils_chain_assertCurrentChain_js__WEBPACK_IMPORTED_MODULE_113__.assertCurrentChain),
/* harmony export */   assertRequest: () => (/* reexport safe */ _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_96__.assertRequest),
/* harmony export */   assertTransactionEIP1559: () => (/* reexport safe */ _utils_transaction_assertTransaction_js__WEBPACK_IMPORTED_MODULE_97__.assertTransactionEIP1559),
/* harmony export */   assertTransactionEIP2930: () => (/* reexport safe */ _utils_transaction_assertTransaction_js__WEBPACK_IMPORTED_MODULE_97__.assertTransactionEIP2930),
/* harmony export */   assertTransactionLegacy: () => (/* reexport safe */ _utils_transaction_assertTransaction_js__WEBPACK_IMPORTED_MODULE_97__.assertTransactionLegacy),
/* harmony export */   blobsToCommitments: () => (/* reexport safe */ _utils_blob_blobsToCommitments_js__WEBPACK_IMPORTED_MODULE_102__.blobsToCommitments),
/* harmony export */   blobsToProofs: () => (/* reexport safe */ _utils_blob_blobsToProofs_js__WEBPACK_IMPORTED_MODULE_106__.blobsToProofs),
/* harmony export */   boolToBytes: () => (/* reexport safe */ _utils_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_98__.boolToBytes),
/* harmony export */   boolToHex: () => (/* reexport safe */ _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_99__.boolToHex),
/* harmony export */   bytesToBigInt: () => (/* reexport safe */ _utils_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_100__.bytesToBigInt),
/* harmony export */   bytesToBool: () => (/* reexport safe */ _utils_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_100__.bytesToBool),
/* harmony export */   bytesToHex: () => (/* reexport safe */ _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_99__.bytesToHex),
/* harmony export */   bytesToNumber: () => (/* reexport safe */ _utils_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_100__.bytesToNumber),
/* harmony export */   bytesToRlp: () => (/* reexport safe */ _utils_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_89__.bytesToRlp),
/* harmony export */   bytesToString: () => (/* reexport safe */ _utils_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_100__.bytesToString),
/* harmony export */   ccipFetch: () => (/* reexport safe */ _utils_ccip_js__WEBPACK_IMPORTED_MODULE_101__.ccipRequest),
/* harmony export */   ccipRequest: () => (/* reexport safe */ _utils_ccip_js__WEBPACK_IMPORTED_MODULE_101__.ccipRequest),
/* harmony export */   checksumAddress: () => (/* reexport safe */ _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_126__.checksumAddress),
/* harmony export */   commitmentToVersionedHash: () => (/* reexport safe */ _utils_blob_commitmentToVersionedHash_js__WEBPACK_IMPORTED_MODULE_103__.commitmentToVersionedHash),
/* harmony export */   commitmentsToVersionedHashes: () => (/* reexport safe */ _utils_blob_commitmentsToVersionedHashes_js__WEBPACK_IMPORTED_MODULE_104__.commitmentsToVersionedHashes),
/* harmony export */   compactSignatureToHex: () => (/* reexport safe */ _utils_signature_serializeCompactSignature_js__WEBPACK_IMPORTED_MODULE_87__.serializeCompactSignature),
/* harmony export */   compactSignatureToSignature: () => (/* reexport safe */ _utils_signature_compactSignatureToSignature_js__WEBPACK_IMPORTED_MODULE_78__.compactSignatureToSignature),
/* harmony export */   concat: () => (/* reexport safe */ _utils_data_concat_js__WEBPACK_IMPORTED_MODULE_112__.concat),
/* harmony export */   concatBytes: () => (/* reexport safe */ _utils_data_concat_js__WEBPACK_IMPORTED_MODULE_112__.concatBytes),
/* harmony export */   concatHex: () => (/* reexport safe */ _utils_data_concat_js__WEBPACK_IMPORTED_MODULE_112__.concatHex),
/* harmony export */   createClient: () => (/* reexport safe */ _clients_createClient_js__WEBPACK_IMPORTED_MODULE_11__.createClient),
/* harmony export */   createNonceManager: () => (/* reexport safe */ _utils_nonceManager_js__WEBPACK_IMPORTED_MODULE_154__.createNonceManager),
/* harmony export */   createPublicClient: () => (/* reexport safe */ _clients_createPublicClient_js__WEBPACK_IMPORTED_MODULE_15__.createPublicClient),
/* harmony export */   createTestClient: () => (/* reexport safe */ _clients_createTestClient_js__WEBPACK_IMPORTED_MODULE_16__.createTestClient),
/* harmony export */   createTransport: () => (/* reexport safe */ _clients_transports_createTransport_js__WEBPACK_IMPORTED_MODULE_20__.createTransport),
/* harmony export */   createWalletClient: () => (/* reexport safe */ _clients_createWalletClient_js__WEBPACK_IMPORTED_MODULE_21__.createWalletClient),
/* harmony export */   custom: () => (/* reexport safe */ _clients_transports_custom_js__WEBPACK_IMPORTED_MODULE_12__.custom),
/* harmony export */   decodeAbiParameters: () => (/* reexport safe */ _utils_abi_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_56__.decodeAbiParameters),
/* harmony export */   decodeDeployData: () => (/* reexport safe */ _utils_abi_decodeDeployData_js__WEBPACK_IMPORTED_MODULE_57__.decodeDeployData),
/* harmony export */   decodeErrorResult: () => (/* reexport safe */ _utils_abi_decodeErrorResult_js__WEBPACK_IMPORTED_MODULE_58__.decodeErrorResult),
/* harmony export */   decodeEventLog: () => (/* reexport safe */ _utils_abi_decodeEventLog_js__WEBPACK_IMPORTED_MODULE_59__.decodeEventLog),
/* harmony export */   decodeFunctionData: () => (/* reexport safe */ _utils_abi_decodeFunctionData_js__WEBPACK_IMPORTED_MODULE_60__.decodeFunctionData),
/* harmony export */   decodeFunctionResult: () => (/* reexport safe */ _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_61__.decodeFunctionResult),
/* harmony export */   defineBlock: () => (/* reexport safe */ _utils_formatters_block_js__WEBPACK_IMPORTED_MODULE_54__.defineBlock),
/* harmony export */   defineChain: () => (/* reexport safe */ _utils_chain_defineChain_js__WEBPACK_IMPORTED_MODULE_114__.defineChain),
/* harmony export */   defineKzg: () => (/* reexport safe */ _utils_kzg_defineKzg_js__WEBPACK_IMPORTED_MODULE_110__.defineKzg),
/* harmony export */   defineTransaction: () => (/* reexport safe */ _utils_formatters_transaction_js__WEBPACK_IMPORTED_MODULE_70__.defineTransaction),
/* harmony export */   defineTransactionReceipt: () => (/* reexport safe */ _utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_71__.defineTransactionReceipt),
/* harmony export */   defineTransactionRequest: () => (/* reexport safe */ _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_72__.defineTransactionRequest),
/* harmony export */   deploylessCallViaBytecodeBytecode: () => (/* reexport safe */ _constants_contracts_js__WEBPACK_IMPORTED_MODULE_25__.deploylessCallViaBytecodeBytecode),
/* harmony export */   deploylessCallViaFactoryBytecode: () => (/* reexport safe */ _constants_contracts_js__WEBPACK_IMPORTED_MODULE_25__.deploylessCallViaFactoryBytecode),
/* harmony export */   domainSeparator: () => (/* reexport safe */ _utils_typedData_js__WEBPACK_IMPORTED_MODULE_153__.domainSeparator),
/* harmony export */   encodeAbiParameters: () => (/* reexport safe */ _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_62__.encodeAbiParameters),
/* harmony export */   encodeDeployData: () => (/* reexport safe */ _utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_63__.encodeDeployData),
/* harmony export */   encodeErrorResult: () => (/* reexport safe */ _utils_abi_encodeErrorResult_js__WEBPACK_IMPORTED_MODULE_64__.encodeErrorResult),
/* harmony export */   encodeEventTopics: () => (/* reexport safe */ _utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_65__.encodeEventTopics),
/* harmony export */   encodeFunctionData: () => (/* reexport safe */ _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_66__.encodeFunctionData),
/* harmony export */   encodeFunctionResult: () => (/* reexport safe */ _utils_abi_encodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_68__.encodeFunctionResult),
/* harmony export */   encodePacked: () => (/* reexport safe */ _utils_abi_encodePacked_js__WEBPACK_IMPORTED_MODULE_117__.encodePacked),
/* harmony export */   erc1155Abi: () => (/* reexport safe */ _constants_abis_js__WEBPACK_IMPORTED_MODULE_23__.erc1155Abi),
/* harmony export */   erc20Abi: () => (/* reexport safe */ _constants_abis_js__WEBPACK_IMPORTED_MODULE_23__.erc20Abi),
/* harmony export */   erc20Abi_bytes32: () => (/* reexport safe */ _constants_abis_js__WEBPACK_IMPORTED_MODULE_23__.erc20Abi_bytes32),
/* harmony export */   erc4626Abi: () => (/* reexport safe */ _constants_abis_js__WEBPACK_IMPORTED_MODULE_23__.erc4626Abi),
/* harmony export */   erc721Abi: () => (/* reexport safe */ _constants_abis_js__WEBPACK_IMPORTED_MODULE_23__.erc721Abi),
/* harmony export */   ethAddress: () => (/* reexport safe */ _constants_address_js__WEBPACK_IMPORTED_MODULE_24__.ethAddress),
/* harmony export */   etherUnits: () => (/* reexport safe */ _constants_unit_js__WEBPACK_IMPORTED_MODULE_26__.etherUnits),
/* harmony export */   extractChain: () => (/* reexport safe */ _utils_chain_extractChain_js__WEBPACK_IMPORTED_MODULE_115__.extractChain),
/* harmony export */   fallback: () => (/* reexport safe */ _clients_transports_fallback_js__WEBPACK_IMPORTED_MODULE_13__.fallback),
/* harmony export */   formatBlock: () => (/* reexport safe */ _utils_formatters_block_js__WEBPACK_IMPORTED_MODULE_54__.formatBlock),
/* harmony export */   formatEther: () => (/* reexport safe */ _utils_unit_formatEther_js__WEBPACK_IMPORTED_MODULE_121__.formatEther),
/* harmony export */   formatGwei: () => (/* reexport safe */ _utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_122__.formatGwei),
/* harmony export */   formatLog: () => (/* reexport safe */ _utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_55__.formatLog),
/* harmony export */   formatTransaction: () => (/* reexport safe */ _utils_formatters_transaction_js__WEBPACK_IMPORTED_MODULE_70__.formatTransaction),
/* harmony export */   formatTransactionReceipt: () => (/* reexport safe */ _utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_71__.formatTransactionReceipt),
/* harmony export */   formatTransactionRequest: () => (/* reexport safe */ _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_72__.formatTransactionRequest),
/* harmony export */   formatUnits: () => (/* reexport safe */ _utils_unit_formatUnits_js__WEBPACK_IMPORTED_MODULE_123__.formatUnits),
/* harmony export */   fromBlobs: () => (/* reexport safe */ _utils_blob_fromBlobs_js__WEBPACK_IMPORTED_MODULE_107__.fromBlobs),
/* harmony export */   fromBytes: () => (/* reexport safe */ _utils_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_100__.fromBytes),
/* harmony export */   fromHex: () => (/* reexport safe */ _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_124__.fromHex),
/* harmony export */   fromRlp: () => (/* reexport safe */ _utils_encoding_fromRlp_js__WEBPACK_IMPORTED_MODULE_125__.fromRlp),
/* harmony export */   getAbiItem: () => (/* reexport safe */ _utils_abi_getAbiItem_js__WEBPACK_IMPORTED_MODULE_73__.getAbiItem),
/* harmony export */   getAddress: () => (/* reexport safe */ _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_126__.getAddress),
/* harmony export */   getChainContractAddress: () => (/* reexport safe */ _utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_116__.getChainContractAddress),
/* harmony export */   getContract: () => (/* reexport safe */ _actions_getContract_js__WEBPACK_IMPORTED_MODULE_9__.getContract),
/* harmony export */   getContractAddress: () => (/* reexport safe */ _utils_address_getContractAddress_js__WEBPACK_IMPORTED_MODULE_74__.getContractAddress),
/* harmony export */   getContractError: () => (/* reexport safe */ _utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_127__.getContractError),
/* harmony export */   getCreate2Address: () => (/* reexport safe */ _utils_address_getContractAddress_js__WEBPACK_IMPORTED_MODULE_74__.getCreate2Address),
/* harmony export */   getCreateAddress: () => (/* reexport safe */ _utils_address_getContractAddress_js__WEBPACK_IMPORTED_MODULE_74__.getCreateAddress),
/* harmony export */   getEventSelector: () => (/* reexport safe */ _utils_hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_128__.toEventSelector),
/* harmony export */   getEventSignature: () => (/* reexport safe */ _utils_hash_toEventSignature_js__WEBPACK_IMPORTED_MODULE_130__.toSignature),
/* harmony export */   getFunctionSelector: () => (/* reexport safe */ _utils_hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_129__.toFunctionSelector),
/* harmony export */   getFunctionSignature: () => (/* reexport safe */ _utils_hash_toEventSignature_js__WEBPACK_IMPORTED_MODULE_130__.toSignature),
/* harmony export */   getSerializedTransactionType: () => (/* reexport safe */ _utils_transaction_getSerializedTransactionType_js__WEBPACK_IMPORTED_MODULE_75__.getSerializedTransactionType),
/* harmony export */   getTransactionType: () => (/* reexport safe */ _utils_transaction_getTransactionType_js__WEBPACK_IMPORTED_MODULE_76__.getTransactionType),
/* harmony export */   getTypesForEIP712Domain: () => (/* reexport safe */ _utils_typedData_js__WEBPACK_IMPORTED_MODULE_153__.getTypesForEIP712Domain),
/* harmony export */   gweiUnits: () => (/* reexport safe */ _constants_unit_js__WEBPACK_IMPORTED_MODULE_26__.gweiUnits),
/* harmony export */   hashDomain: () => (/* reexport safe */ _utils_signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_77__.hashDomain),
/* harmony export */   hashMessage: () => (/* reexport safe */ _utils_signature_hashMessage_js__WEBPACK_IMPORTED_MODULE_132__.hashMessage),
/* harmony export */   hashStruct: () => (/* reexport safe */ _utils_signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_77__.hashStruct),
/* harmony export */   hashTypedData: () => (/* reexport safe */ _utils_signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_77__.hashTypedData),
/* harmony export */   hexToBigInt: () => (/* reexport safe */ _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_124__.hexToBigInt),
/* harmony export */   hexToBool: () => (/* reexport safe */ _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_124__.hexToBool),
/* harmony export */   hexToBytes: () => (/* reexport safe */ _utils_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_98__.hexToBytes),
/* harmony export */   hexToCompactSignature: () => (/* reexport safe */ _utils_signature_parseCompactSignature_js__WEBPACK_IMPORTED_MODULE_79__.parseCompactSignature),
/* harmony export */   hexToNumber: () => (/* reexport safe */ _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_124__.hexToNumber),
/* harmony export */   hexToRlp: () => (/* reexport safe */ _utils_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_89__.hexToRlp),
/* harmony export */   hexToSignature: () => (/* reexport safe */ _utils_signature_parseSignature_js__WEBPACK_IMPORTED_MODULE_80__.parseSignature),
/* harmony export */   hexToString: () => (/* reexport safe */ _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_124__.hexToString),
/* harmony export */   http: () => (/* reexport safe */ _clients_transports_http_js__WEBPACK_IMPORTED_MODULE_14__.http),
/* harmony export */   isAddress: () => (/* reexport safe */ _utils_address_isAddress_js__WEBPACK_IMPORTED_MODULE_134__.isAddress),
/* harmony export */   isAddressEqual: () => (/* reexport safe */ _utils_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_135__.isAddressEqual),
/* harmony export */   isBytes: () => (/* reexport safe */ _utils_data_isBytes_js__WEBPACK_IMPORTED_MODULE_136__.isBytes),
/* harmony export */   isErc6492Signature: () => (/* reexport safe */ _utils_signature_isErc6492Signature_js__WEBPACK_IMPORTED_MODULE_94__.isErc6492Signature),
/* harmony export */   isHash: () => (/* reexport safe */ _utils_hash_isHash_js__WEBPACK_IMPORTED_MODULE_137__.isHash),
/* harmony export */   isHex: () => (/* reexport safe */ _utils_data_isHex_js__WEBPACK_IMPORTED_MODULE_138__.isHex),
/* harmony export */   keccak256: () => (/* reexport safe */ _utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_139__.keccak256),
/* harmony export */   labelhash: () => (/* reexport safe */ _utils_ens_labelhash_js__WEBPACK_IMPORTED_MODULE_52__.labelhash),
/* harmony export */   maxInt104: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt104),
/* harmony export */   maxInt112: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt112),
/* harmony export */   maxInt120: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt120),
/* harmony export */   maxInt128: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt128),
/* harmony export */   maxInt136: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt136),
/* harmony export */   maxInt144: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt144),
/* harmony export */   maxInt152: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt152),
/* harmony export */   maxInt16: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt16),
/* harmony export */   maxInt160: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt160),
/* harmony export */   maxInt168: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt168),
/* harmony export */   maxInt176: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt176),
/* harmony export */   maxInt184: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt184),
/* harmony export */   maxInt192: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt192),
/* harmony export */   maxInt200: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt200),
/* harmony export */   maxInt208: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt208),
/* harmony export */   maxInt216: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt216),
/* harmony export */   maxInt224: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt224),
/* harmony export */   maxInt232: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt232),
/* harmony export */   maxInt24: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt24),
/* harmony export */   maxInt240: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt240),
/* harmony export */   maxInt248: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt248),
/* harmony export */   maxInt256: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt256),
/* harmony export */   maxInt32: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt32),
/* harmony export */   maxInt40: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt40),
/* harmony export */   maxInt48: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt48),
/* harmony export */   maxInt56: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt56),
/* harmony export */   maxInt64: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt64),
/* harmony export */   maxInt72: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt72),
/* harmony export */   maxInt8: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt8),
/* harmony export */   maxInt80: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt80),
/* harmony export */   maxInt88: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt88),
/* harmony export */   maxInt96: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxInt96),
/* harmony export */   maxUint104: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint104),
/* harmony export */   maxUint112: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint112),
/* harmony export */   maxUint120: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint120),
/* harmony export */   maxUint128: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint128),
/* harmony export */   maxUint136: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint136),
/* harmony export */   maxUint144: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint144),
/* harmony export */   maxUint152: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint152),
/* harmony export */   maxUint16: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint16),
/* harmony export */   maxUint160: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint160),
/* harmony export */   maxUint168: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint168),
/* harmony export */   maxUint176: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint176),
/* harmony export */   maxUint184: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint184),
/* harmony export */   maxUint192: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint192),
/* harmony export */   maxUint200: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint200),
/* harmony export */   maxUint208: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint208),
/* harmony export */   maxUint216: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint216),
/* harmony export */   maxUint224: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint224),
/* harmony export */   maxUint232: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint232),
/* harmony export */   maxUint24: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint24),
/* harmony export */   maxUint240: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint240),
/* harmony export */   maxUint248: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint248),
/* harmony export */   maxUint256: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint256),
/* harmony export */   maxUint32: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint32),
/* harmony export */   maxUint40: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint40),
/* harmony export */   maxUint48: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint48),
/* harmony export */   maxUint56: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint56),
/* harmony export */   maxUint64: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint64),
/* harmony export */   maxUint72: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint72),
/* harmony export */   maxUint8: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint8),
/* harmony export */   maxUint80: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint80),
/* harmony export */   maxUint88: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint88),
/* harmony export */   maxUint96: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.maxUint96),
/* harmony export */   minInt104: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt104),
/* harmony export */   minInt112: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt112),
/* harmony export */   minInt120: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt120),
/* harmony export */   minInt128: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt128),
/* harmony export */   minInt136: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt136),
/* harmony export */   minInt144: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt144),
/* harmony export */   minInt152: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt152),
/* harmony export */   minInt16: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt16),
/* harmony export */   minInt160: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt160),
/* harmony export */   minInt168: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt168),
/* harmony export */   minInt176: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt176),
/* harmony export */   minInt184: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt184),
/* harmony export */   minInt192: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt192),
/* harmony export */   minInt200: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt200),
/* harmony export */   minInt208: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt208),
/* harmony export */   minInt216: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt216),
/* harmony export */   minInt224: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt224),
/* harmony export */   minInt232: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt232),
/* harmony export */   minInt24: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt24),
/* harmony export */   minInt240: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt240),
/* harmony export */   minInt248: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt248),
/* harmony export */   minInt256: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt256),
/* harmony export */   minInt32: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt32),
/* harmony export */   minInt40: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt40),
/* harmony export */   minInt48: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt48),
/* harmony export */   minInt56: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt56),
/* harmony export */   minInt64: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt64),
/* harmony export */   minInt72: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt72),
/* harmony export */   minInt8: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt8),
/* harmony export */   minInt80: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt80),
/* harmony export */   minInt88: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt88),
/* harmony export */   minInt96: () => (/* reexport safe */ _constants_number_js__WEBPACK_IMPORTED_MODULE_27__.minInt96),
/* harmony export */   multicall3Abi: () => (/* reexport safe */ _constants_abis_js__WEBPACK_IMPORTED_MODULE_23__.multicall3Abi),
/* harmony export */   namehash: () => (/* reexport safe */ _utils_ens_namehash_js__WEBPACK_IMPORTED_MODULE_53__.namehash),
/* harmony export */   nonceManager: () => (/* reexport safe */ _utils_nonceManager_js__WEBPACK_IMPORTED_MODULE_154__.nonceManager),
/* harmony export */   numberToBytes: () => (/* reexport safe */ _utils_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_98__.numberToBytes),
/* harmony export */   numberToHex: () => (/* reexport safe */ _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_99__.numberToHex),
/* harmony export */   offchainLookup: () => (/* reexport safe */ _utils_ccip_js__WEBPACK_IMPORTED_MODULE_101__.offchainLookup),
/* harmony export */   offchainLookupAbiItem: () => (/* reexport safe */ _utils_ccip_js__WEBPACK_IMPORTED_MODULE_101__.offchainLookupAbiItem),
/* harmony export */   offchainLookupSignature: () => (/* reexport safe */ _utils_ccip_js__WEBPACK_IMPORTED_MODULE_101__.offchainLookupSignature),
/* harmony export */   pad: () => (/* reexport safe */ _utils_data_pad_js__WEBPACK_IMPORTED_MODULE_142__.pad),
/* harmony export */   padBytes: () => (/* reexport safe */ _utils_data_pad_js__WEBPACK_IMPORTED_MODULE_142__.padBytes),
/* harmony export */   padHex: () => (/* reexport safe */ _utils_data_pad_js__WEBPACK_IMPORTED_MODULE_142__.padHex),
/* harmony export */   parseAbi: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_0__.parseAbi),
/* harmony export */   parseAbiItem: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_1__.parseAbiItem),
/* harmony export */   parseAbiParameter: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_2__.parseAbiParameter),
/* harmony export */   parseAbiParameters: () => (/* reexport safe */ abitype__WEBPACK_IMPORTED_MODULE_3__.parseAbiParameters),
/* harmony export */   parseCompactSignature: () => (/* reexport safe */ _utils_signature_parseCompactSignature_js__WEBPACK_IMPORTED_MODULE_79__.parseCompactSignature),
/* harmony export */   parseErc6492Signature: () => (/* reexport safe */ _utils_signature_parseErc6492Signature_js__WEBPACK_IMPORTED_MODULE_93__.parseErc6492Signature),
/* harmony export */   parseEther: () => (/* reexport safe */ _utils_unit_parseEther_js__WEBPACK_IMPORTED_MODULE_143__.parseEther),
/* harmony export */   parseEventLogs: () => (/* reexport safe */ _utils_abi_parseEventLogs_js__WEBPACK_IMPORTED_MODULE_69__.parseEventLogs),
/* harmony export */   parseGwei: () => (/* reexport safe */ _utils_unit_parseGwei_js__WEBPACK_IMPORTED_MODULE_144__.parseGwei),
/* harmony export */   parseSignature: () => (/* reexport safe */ _utils_signature_parseSignature_js__WEBPACK_IMPORTED_MODULE_80__.parseSignature),
/* harmony export */   parseTransaction: () => (/* reexport safe */ _utils_transaction_parseTransaction_js__WEBPACK_IMPORTED_MODULE_145__.parseTransaction),
/* harmony export */   parseUnits: () => (/* reexport safe */ _utils_unit_parseUnits_js__WEBPACK_IMPORTED_MODULE_146__.parseUnits),
/* harmony export */   prepareEncodeFunctionData: () => (/* reexport safe */ _utils_abi_prepareEncodeFunctionData_js__WEBPACK_IMPORTED_MODULE_67__.prepareEncodeFunctionData),
/* harmony export */   presignMessagePrefix: () => (/* reexport safe */ _constants_strings_js__WEBPACK_IMPORTED_MODULE_29__.presignMessagePrefix),
/* harmony export */   publicActions: () => (/* reexport safe */ _clients_decorators_public_js__WEBPACK_IMPORTED_MODULE_17__.publicActions),
/* harmony export */   recoverAddress: () => (/* reexport safe */ _utils_signature_recoverAddress_js__WEBPACK_IMPORTED_MODULE_81__.recoverAddress),
/* harmony export */   recoverMessageAddress: () => (/* reexport safe */ _utils_signature_recoverMessageAddress_js__WEBPACK_IMPORTED_MODULE_82__.recoverMessageAddress),
/* harmony export */   recoverPublicKey: () => (/* reexport safe */ _utils_signature_recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_83__.recoverPublicKey),
/* harmony export */   recoverTransactionAddress: () => (/* reexport safe */ _utils_signature_recoverTransactionAddress_js__WEBPACK_IMPORTED_MODULE_84__.recoverTransactionAddress),
/* harmony export */   recoverTypedDataAddress: () => (/* reexport safe */ _utils_signature_recoverTypedDataAddress_js__WEBPACK_IMPORTED_MODULE_85__.recoverTypedDataAddress),
/* harmony export */   ripemd160: () => (/* reexport safe */ _utils_hash_ripemd160_js__WEBPACK_IMPORTED_MODULE_141__.ripemd160),
/* harmony export */   rpcSchema: () => (/* reexport safe */ _clients_createClient_js__WEBPACK_IMPORTED_MODULE_11__.rpcSchema),
/* harmony export */   rpcTransactionType: () => (/* reexport safe */ _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_72__.rpcTransactionType),
/* harmony export */   serializeAccessList: () => (/* reexport safe */ _utils_transaction_serializeAccessList_js__WEBPACK_IMPORTED_MODULE_147__.serializeAccessList),
/* harmony export */   serializeCompactSignature: () => (/* reexport safe */ _utils_signature_serializeCompactSignature_js__WEBPACK_IMPORTED_MODULE_87__.serializeCompactSignature),
/* harmony export */   serializeErc6492Signature: () => (/* reexport safe */ _utils_signature_serializeErc6492Signature_js__WEBPACK_IMPORTED_MODULE_95__.serializeErc6492Signature),
/* harmony export */   serializeSignature: () => (/* reexport safe */ _utils_signature_serializeSignature_js__WEBPACK_IMPORTED_MODULE_88__.serializeSignature),
/* harmony export */   serializeTransaction: () => (/* reexport safe */ _utils_transaction_serializeTransaction_js__WEBPACK_IMPORTED_MODULE_148__.serializeTransaction),
/* harmony export */   serializeTypedData: () => (/* reexport safe */ _utils_typedData_js__WEBPACK_IMPORTED_MODULE_153__.serializeTypedData),
/* harmony export */   setErrorConfig: () => (/* reexport safe */ _errors_base_js__WEBPACK_IMPORTED_MODULE_31__.setErrorConfig),
/* harmony export */   setupKzg: () => (/* reexport safe */ _utils_kzg_setupKzg_js__WEBPACK_IMPORTED_MODULE_111__.setupKzg),
/* harmony export */   sha256: () => (/* reexport safe */ _utils_hash_sha256_js__WEBPACK_IMPORTED_MODULE_140__.sha256),
/* harmony export */   shouldThrow: () => (/* reexport safe */ _clients_transports_fallback_js__WEBPACK_IMPORTED_MODULE_13__.shouldThrow),
/* harmony export */   sidecarsToVersionedHashes: () => (/* reexport safe */ _utils_blob_sidecarsToVersionedHashes_js__WEBPACK_IMPORTED_MODULE_105__.sidecarsToVersionedHashes),
/* harmony export */   signatureToCompactSignature: () => (/* reexport safe */ _utils_signature_signatureToCompactSignature_js__WEBPACK_IMPORTED_MODULE_86__.signatureToCompactSignature),
/* harmony export */   signatureToHex: () => (/* reexport safe */ _utils_signature_serializeSignature_js__WEBPACK_IMPORTED_MODULE_88__.serializeSignature),
/* harmony export */   size: () => (/* reexport safe */ _utils_data_size_js__WEBPACK_IMPORTED_MODULE_149__.size),
/* harmony export */   slice: () => (/* reexport safe */ _utils_data_slice_js__WEBPACK_IMPORTED_MODULE_150__.slice),
/* harmony export */   sliceBytes: () => (/* reexport safe */ _utils_data_slice_js__WEBPACK_IMPORTED_MODULE_150__.sliceBytes),
/* harmony export */   sliceHex: () => (/* reexport safe */ _utils_data_slice_js__WEBPACK_IMPORTED_MODULE_150__.sliceHex),
/* harmony export */   stringToBytes: () => (/* reexport safe */ _utils_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_98__.stringToBytes),
/* harmony export */   stringToHex: () => (/* reexport safe */ _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_99__.stringToHex),
/* harmony export */   stringify: () => (/* reexport safe */ _utils_stringify_js__WEBPACK_IMPORTED_MODULE_151__.stringify),
/* harmony export */   testActions: () => (/* reexport safe */ _clients_decorators_test_js__WEBPACK_IMPORTED_MODULE_18__.testActions),
/* harmony export */   toBlobSidecars: () => (/* reexport safe */ _utils_blob_toBlobSidecars_js__WEBPACK_IMPORTED_MODULE_108__.toBlobSidecars),
/* harmony export */   toBlobs: () => (/* reexport safe */ _utils_blob_toBlobs_js__WEBPACK_IMPORTED_MODULE_109__.toBlobs),
/* harmony export */   toBytes: () => (/* reexport safe */ _utils_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_98__.toBytes),
/* harmony export */   toEventHash: () => (/* reexport safe */ _utils_hash_toEventHash_js__WEBPACK_IMPORTED_MODULE_131__.toSignatureHash),
/* harmony export */   toEventSelector: () => (/* reexport safe */ _utils_hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_128__.toEventSelector),
/* harmony export */   toEventSignature: () => (/* reexport safe */ _utils_hash_toEventSignature_js__WEBPACK_IMPORTED_MODULE_130__.toSignature),
/* harmony export */   toFunctionHash: () => (/* reexport safe */ _utils_hash_toEventHash_js__WEBPACK_IMPORTED_MODULE_131__.toSignatureHash),
/* harmony export */   toFunctionSelector: () => (/* reexport safe */ _utils_hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_129__.toFunctionSelector),
/* harmony export */   toFunctionSignature: () => (/* reexport safe */ _utils_hash_toEventSignature_js__WEBPACK_IMPORTED_MODULE_130__.toSignature),
/* harmony export */   toHex: () => (/* reexport safe */ _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_99__.toHex),
/* harmony export */   toPrefixedMessage: () => (/* reexport safe */ _utils_signature_toPrefixedMessage_js__WEBPACK_IMPORTED_MODULE_133__.toPrefixedMessage),
/* harmony export */   toRlp: () => (/* reexport safe */ _utils_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_89__.toRlp),
/* harmony export */   transactionType: () => (/* reexport safe */ _utils_formatters_transaction_js__WEBPACK_IMPORTED_MODULE_70__.transactionType),
/* harmony export */   trim: () => (/* reexport safe */ _utils_data_trim_js__WEBPACK_IMPORTED_MODULE_152__.trim),
/* harmony export */   universalSignatureValidatorAbi: () => (/* reexport safe */ _constants_abis_js__WEBPACK_IMPORTED_MODULE_23__.universalSignatureValidatorAbi),
/* harmony export */   universalSignatureValidatorByteCode: () => (/* reexport safe */ _constants_contracts_js__WEBPACK_IMPORTED_MODULE_25__.universalSignatureValidatorByteCode),
/* harmony export */   validateTypedData: () => (/* reexport safe */ _utils_typedData_js__WEBPACK_IMPORTED_MODULE_153__.validateTypedData),
/* harmony export */   verifyHash: () => (/* reexport safe */ _utils_signature_verifyHash_js__WEBPACK_IMPORTED_MODULE_90__.verifyHash),
/* harmony export */   verifyMessage: () => (/* reexport safe */ _utils_signature_verifyMessage_js__WEBPACK_IMPORTED_MODULE_91__.verifyMessage),
/* harmony export */   verifyTypedData: () => (/* reexport safe */ _utils_signature_verifyTypedData_js__WEBPACK_IMPORTED_MODULE_92__.verifyTypedData),
/* harmony export */   walletActions: () => (/* reexport safe */ _clients_decorators_wallet_js__WEBPACK_IMPORTED_MODULE_19__.walletActions),
/* harmony export */   webSocket: () => (/* reexport safe */ _clients_transports_webSocket_js__WEBPACK_IMPORTED_MODULE_22__.webSocket),
/* harmony export */   weiUnits: () => (/* reexport safe */ _constants_unit_js__WEBPACK_IMPORTED_MODULE_26__.weiUnits),
/* harmony export */   withCache: () => (/* reexport safe */ _utils_promise_withCache_js__WEBPACK_IMPORTED_MODULE_118__.withCache),
/* harmony export */   withRetry: () => (/* reexport safe */ _utils_promise_withRetry_js__WEBPACK_IMPORTED_MODULE_119__.withRetry),
/* harmony export */   withTimeout: () => (/* reexport safe */ _utils_promise_withTimeout_js__WEBPACK_IMPORTED_MODULE_120__.withTimeout),
/* harmony export */   zeroAddress: () => (/* reexport safe */ _constants_address_js__WEBPACK_IMPORTED_MODULE_24__.zeroAddress),
/* harmony export */   zeroHash: () => (/* reexport safe */ _constants_bytes_js__WEBPACK_IMPORTED_MODULE_28__.zeroHash)
/* harmony export */ });
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/parseAbi.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/parseAbiItem.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/parseAbiParameter.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/parseAbiParameters.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/errors/abiItem.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/errors/abiParameter.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/errors/signature.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/errors/splitParameters.js");
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/errors/struct.js");
/* harmony import */ var _actions_getContract_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./actions/getContract.js */ "./node_modules/viem/_esm/actions/getContract.js");
/* harmony import */ var _actions_wallet_waitForCallsStatus_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./actions/wallet/waitForCallsStatus.js */ "./node_modules/viem/_esm/actions/wallet/waitForCallsStatus.js");
/* harmony import */ var _clients_createClient_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./clients/createClient.js */ "./node_modules/viem/_esm/clients/createClient.js");
/* harmony import */ var _clients_transports_custom_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./clients/transports/custom.js */ "./node_modules/viem/_esm/clients/transports/custom.js");
/* harmony import */ var _clients_transports_fallback_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./clients/transports/fallback.js */ "./node_modules/viem/_esm/clients/transports/fallback.js");
/* harmony import */ var _clients_transports_http_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./clients/transports/http.js */ "./node_modules/viem/_esm/clients/transports/http.js");
/* harmony import */ var _clients_createPublicClient_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./clients/createPublicClient.js */ "./node_modules/viem/_esm/clients/createPublicClient.js");
/* harmony import */ var _clients_createTestClient_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./clients/createTestClient.js */ "./node_modules/viem/_esm/clients/createTestClient.js");
/* harmony import */ var _clients_decorators_public_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./clients/decorators/public.js */ "./node_modules/viem/_esm/clients/decorators/public.js");
/* harmony import */ var _clients_decorators_test_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./clients/decorators/test.js */ "./node_modules/viem/_esm/clients/decorators/test.js");
/* harmony import */ var _clients_decorators_wallet_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./clients/decorators/wallet.js */ "./node_modules/viem/_esm/clients/decorators/wallet.js");
/* harmony import */ var _clients_transports_createTransport_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./clients/transports/createTransport.js */ "./node_modules/viem/_esm/clients/transports/createTransport.js");
/* harmony import */ var _clients_createWalletClient_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./clients/createWalletClient.js */ "./node_modules/viem/_esm/clients/createWalletClient.js");
/* harmony import */ var _clients_transports_webSocket_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./clients/transports/webSocket.js */ "./node_modules/viem/_esm/clients/transports/webSocket.js");
/* harmony import */ var _constants_abis_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./constants/abis.js */ "./node_modules/viem/_esm/constants/abis.js");
/* harmony import */ var _constants_address_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./constants/address.js */ "./node_modules/viem/_esm/constants/address.js");
/* harmony import */ var _constants_contracts_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./constants/contracts.js */ "./node_modules/viem/_esm/constants/contracts.js");
/* harmony import */ var _constants_unit_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./constants/unit.js */ "./node_modules/viem/_esm/constants/unit.js");
/* harmony import */ var _constants_number_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./constants/number.js */ "./node_modules/viem/_esm/constants/number.js");
/* harmony import */ var _constants_bytes_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./constants/bytes.js */ "./node_modules/viem/_esm/constants/bytes.js");
/* harmony import */ var _constants_strings_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./constants/strings.js */ "./node_modules/viem/_esm/constants/strings.js");
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_calls_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./errors/calls.js */ "./node_modules/viem/_esm/errors/calls.js");
/* harmony import */ var _errors_block_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./errors/block.js */ "./node_modules/viem/_esm/errors/block.js");
/* harmony import */ var _errors_contract_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./errors/contract.js */ "./node_modules/viem/_esm/errors/contract.js");
/* harmony import */ var _errors_fee_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./errors/fee.js */ "./node_modules/viem/_esm/errors/fee.js");
/* harmony import */ var _errors_rpc_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./errors/rpc.js */ "./node_modules/viem/_esm/errors/rpc.js");
/* harmony import */ var _errors_chain_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./errors/chain.js */ "./node_modules/viem/_esm/errors/chain.js");
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./errors/encoding.js */ "./node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _errors_ens_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./errors/ens.js */ "./node_modules/viem/_esm/errors/ens.js");
/* harmony import */ var _errors_unit_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./errors/unit.js */ "./node_modules/viem/_esm/errors/unit.js");
/* harmony import */ var _errors_estimateGas_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./errors/estimateGas.js */ "./node_modules/viem/_esm/errors/estimateGas.js");
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _errors_log_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./errors/log.js */ "./node_modules/viem/_esm/errors/log.js");
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _errors_data_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./errors/data.js */ "./node_modules/viem/_esm/errors/data.js");
/* harmony import */ var _errors_transport_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./errors/transport.js */ "./node_modules/viem/_esm/errors/transport.js");
/* harmony import */ var _errors_stateOverride_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./errors/stateOverride.js */ "./node_modules/viem/_esm/errors/stateOverride.js");
/* harmony import */ var _errors_typedData_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./errors/typedData.js */ "./node_modules/viem/_esm/errors/typedData.js");
/* harmony import */ var _types_eip1193_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./types/eip1193.js */ "./node_modules/viem/_esm/types/eip1193.js");
/* harmony import */ var _utils_ens_labelhash_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./utils/ens/labelhash.js */ "./node_modules/viem/_esm/utils/ens/labelhash.js");
/* harmony import */ var _utils_ens_namehash_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./utils/ens/namehash.js */ "./node_modules/viem/_esm/utils/ens/namehash.js");
/* harmony import */ var _utils_formatters_block_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./utils/formatters/block.js */ "./node_modules/viem/_esm/utils/formatters/block.js");
/* harmony import */ var _utils_formatters_log_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./utils/formatters/log.js */ "./node_modules/viem/_esm/utils/formatters/log.js");
/* harmony import */ var _utils_abi_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./utils/abi/decodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js");
/* harmony import */ var _utils_abi_decodeDeployData_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./utils/abi/decodeDeployData.js */ "./node_modules/viem/_esm/utils/abi/decodeDeployData.js");
/* harmony import */ var _utils_abi_decodeErrorResult_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./utils/abi/decodeErrorResult.js */ "./node_modules/viem/_esm/utils/abi/decodeErrorResult.js");
/* harmony import */ var _utils_abi_decodeEventLog_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./utils/abi/decodeEventLog.js */ "./node_modules/viem/_esm/utils/abi/decodeEventLog.js");
/* harmony import */ var _utils_abi_decodeFunctionData_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./utils/abi/decodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionData.js");
/* harmony import */ var _utils_abi_decodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./utils/abi/decodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js");
/* harmony import */ var _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./utils/abi/encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");
/* harmony import */ var _utils_abi_encodeDeployData_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./utils/abi/encodeDeployData.js */ "./node_modules/viem/_esm/utils/abi/encodeDeployData.js");
/* harmony import */ var _utils_abi_encodeErrorResult_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./utils/abi/encodeErrorResult.js */ "./node_modules/viem/_esm/utils/abi/encodeErrorResult.js");
/* harmony import */ var _utils_abi_encodeEventTopics_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./utils/abi/encodeEventTopics.js */ "./node_modules/viem/_esm/utils/abi/encodeEventTopics.js");
/* harmony import */ var _utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./utils/abi/encodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js");
/* harmony import */ var _utils_abi_prepareEncodeFunctionData_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./utils/abi/prepareEncodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js");
/* harmony import */ var _utils_abi_encodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./utils/abi/encodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionResult.js");
/* harmony import */ var _utils_abi_parseEventLogs_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./utils/abi/parseEventLogs.js */ "./node_modules/viem/_esm/utils/abi/parseEventLogs.js");
/* harmony import */ var _utils_formatters_transaction_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./utils/formatters/transaction.js */ "./node_modules/viem/_esm/utils/formatters/transaction.js");
/* harmony import */ var _utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./utils/formatters/transactionReceipt.js */ "./node_modules/viem/_esm/utils/formatters/transactionReceipt.js");
/* harmony import */ var _utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./utils/formatters/transactionRequest.js */ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js");
/* harmony import */ var _utils_abi_getAbiItem_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./utils/abi/getAbiItem.js */ "./node_modules/viem/_esm/utils/abi/getAbiItem.js");
/* harmony import */ var _utils_address_getContractAddress_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./utils/address/getContractAddress.js */ "./node_modules/viem/_esm/utils/address/getContractAddress.js");
/* harmony import */ var _utils_transaction_getSerializedTransactionType_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./utils/transaction/getSerializedTransactionType.js */ "./node_modules/viem/_esm/utils/transaction/getSerializedTransactionType.js");
/* harmony import */ var _utils_transaction_getTransactionType_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./utils/transaction/getTransactionType.js */ "./node_modules/viem/_esm/utils/transaction/getTransactionType.js");
/* harmony import */ var _utils_signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./utils/signature/hashTypedData.js */ "./node_modules/viem/_esm/utils/signature/hashTypedData.js");
/* harmony import */ var _utils_signature_compactSignatureToSignature_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./utils/signature/compactSignatureToSignature.js */ "./node_modules/viem/_esm/utils/signature/compactSignatureToSignature.js");
/* harmony import */ var _utils_signature_parseCompactSignature_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./utils/signature/parseCompactSignature.js */ "./node_modules/viem/_esm/utils/signature/parseCompactSignature.js");
/* harmony import */ var _utils_signature_parseSignature_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./utils/signature/parseSignature.js */ "./node_modules/viem/_esm/utils/signature/parseSignature.js");
/* harmony import */ var _utils_signature_recoverAddress_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./utils/signature/recoverAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverAddress.js");
/* harmony import */ var _utils_signature_recoverMessageAddress_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./utils/signature/recoverMessageAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverMessageAddress.js");
/* harmony import */ var _utils_signature_recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./utils/signature/recoverPublicKey.js */ "./node_modules/viem/_esm/utils/signature/recoverPublicKey.js");
/* harmony import */ var _utils_signature_recoverTransactionAddress_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./utils/signature/recoverTransactionAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverTransactionAddress.js");
/* harmony import */ var _utils_signature_recoverTypedDataAddress_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./utils/signature/recoverTypedDataAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverTypedDataAddress.js");
/* harmony import */ var _utils_signature_signatureToCompactSignature_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./utils/signature/signatureToCompactSignature.js */ "./node_modules/viem/_esm/utils/signature/signatureToCompactSignature.js");
/* harmony import */ var _utils_signature_serializeCompactSignature_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./utils/signature/serializeCompactSignature.js */ "./node_modules/viem/_esm/utils/signature/serializeCompactSignature.js");
/* harmony import */ var _utils_signature_serializeSignature_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./utils/signature/serializeSignature.js */ "./node_modules/viem/_esm/utils/signature/serializeSignature.js");
/* harmony import */ var _utils_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./utils/encoding/toRlp.js */ "./node_modules/viem/_esm/utils/encoding/toRlp.js");
/* harmony import */ var _utils_signature_verifyHash_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./utils/signature/verifyHash.js */ "./node_modules/viem/_esm/utils/signature/verifyHash.js");
/* harmony import */ var _utils_signature_verifyMessage_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./utils/signature/verifyMessage.js */ "./node_modules/viem/_esm/utils/signature/verifyMessage.js");
/* harmony import */ var _utils_signature_verifyTypedData_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./utils/signature/verifyTypedData.js */ "./node_modules/viem/_esm/utils/signature/verifyTypedData.js");
/* harmony import */ var _utils_signature_parseErc6492Signature_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./utils/signature/parseErc6492Signature.js */ "./node_modules/viem/_esm/utils/signature/parseErc6492Signature.js");
/* harmony import */ var _utils_signature_isErc6492Signature_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./utils/signature/isErc6492Signature.js */ "./node_modules/viem/_esm/utils/signature/isErc6492Signature.js");
/* harmony import */ var _utils_signature_serializeErc6492Signature_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./utils/signature/serializeErc6492Signature.js */ "./node_modules/viem/_esm/utils/signature/serializeErc6492Signature.js");
/* harmony import */ var _utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./utils/transaction/assertRequest.js */ "./node_modules/viem/_esm/utils/transaction/assertRequest.js");
/* harmony import */ var _utils_transaction_assertTransaction_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./utils/transaction/assertTransaction.js */ "./node_modules/viem/_esm/utils/transaction/assertTransaction.js");
/* harmony import */ var _utils_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./utils/encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _utils_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./utils/encoding/fromBytes.js */ "./node_modules/viem/_esm/utils/encoding/fromBytes.js");
/* harmony import */ var _utils_ccip_js__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./utils/ccip.js */ "./node_modules/viem/_esm/utils/ccip.js");
/* harmony import */ var _utils_blob_blobsToCommitments_js__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./utils/blob/blobsToCommitments.js */ "./node_modules/viem/_esm/utils/blob/blobsToCommitments.js");
/* harmony import */ var _utils_blob_commitmentToVersionedHash_js__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./utils/blob/commitmentToVersionedHash.js */ "./node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js");
/* harmony import */ var _utils_blob_commitmentsToVersionedHashes_js__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./utils/blob/commitmentsToVersionedHashes.js */ "./node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js");
/* harmony import */ var _utils_blob_sidecarsToVersionedHashes_js__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./utils/blob/sidecarsToVersionedHashes.js */ "./node_modules/viem/_esm/utils/blob/sidecarsToVersionedHashes.js");
/* harmony import */ var _utils_blob_blobsToProofs_js__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./utils/blob/blobsToProofs.js */ "./node_modules/viem/_esm/utils/blob/blobsToProofs.js");
/* harmony import */ var _utils_blob_fromBlobs_js__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./utils/blob/fromBlobs.js */ "./node_modules/viem/_esm/utils/blob/fromBlobs.js");
/* harmony import */ var _utils_blob_toBlobSidecars_js__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./utils/blob/toBlobSidecars.js */ "./node_modules/viem/_esm/utils/blob/toBlobSidecars.js");
/* harmony import */ var _utils_blob_toBlobs_js__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./utils/blob/toBlobs.js */ "./node_modules/viem/_esm/utils/blob/toBlobs.js");
/* harmony import */ var _utils_kzg_defineKzg_js__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./utils/kzg/defineKzg.js */ "./node_modules/viem/_esm/utils/kzg/defineKzg.js");
/* harmony import */ var _utils_kzg_setupKzg_js__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./utils/kzg/setupKzg.js */ "./node_modules/viem/_esm/utils/kzg/setupKzg.js");
/* harmony import */ var _utils_data_concat_js__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./utils/data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _utils_chain_assertCurrentChain_js__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./utils/chain/assertCurrentChain.js */ "./node_modules/viem/_esm/utils/chain/assertCurrentChain.js");
/* harmony import */ var _utils_chain_defineChain_js__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./utils/chain/defineChain.js */ "./node_modules/viem/_esm/utils/chain/defineChain.js");
/* harmony import */ var _utils_chain_extractChain_js__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./utils/chain/extractChain.js */ "./node_modules/viem/_esm/utils/chain/extractChain.js");
/* harmony import */ var _utils_chain_getChainContractAddress_js__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./utils/chain/getChainContractAddress.js */ "./node_modules/viem/_esm/utils/chain/getChainContractAddress.js");
/* harmony import */ var _utils_abi_encodePacked_js__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./utils/abi/encodePacked.js */ "./node_modules/viem/_esm/utils/abi/encodePacked.js");
/* harmony import */ var _utils_promise_withCache_js__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./utils/promise/withCache.js */ "./node_modules/viem/_esm/utils/promise/withCache.js");
/* harmony import */ var _utils_promise_withRetry_js__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./utils/promise/withRetry.js */ "./node_modules/viem/_esm/utils/promise/withRetry.js");
/* harmony import */ var _utils_promise_withTimeout_js__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./utils/promise/withTimeout.js */ "./node_modules/viem/_esm/utils/promise/withTimeout.js");
/* harmony import */ var _utils_unit_formatEther_js__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./utils/unit/formatEther.js */ "./node_modules/viem/_esm/utils/unit/formatEther.js");
/* harmony import */ var _utils_unit_formatGwei_js__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./utils/unit/formatGwei.js */ "./node_modules/viem/_esm/utils/unit/formatGwei.js");
/* harmony import */ var _utils_unit_formatUnits_js__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./utils/unit/formatUnits.js */ "./node_modules/viem/_esm/utils/unit/formatUnits.js");
/* harmony import */ var _utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./utils/encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _utils_encoding_fromRlp_js__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./utils/encoding/fromRlp.js */ "./node_modules/viem/_esm/utils/encoding/fromRlp.js");
/* harmony import */ var _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./utils/address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _utils_errors_getContractError_js__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./utils/errors/getContractError.js */ "./node_modules/viem/_esm/utils/errors/getContractError.js");
/* harmony import */ var _utils_hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./utils/hash/toEventSelector.js */ "./node_modules/viem/_esm/utils/hash/toEventSelector.js");
/* harmony import */ var _utils_hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./utils/hash/toFunctionSelector.js */ "./node_modules/viem/_esm/utils/hash/toFunctionSelector.js");
/* harmony import */ var _utils_hash_toEventSignature_js__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./utils/hash/toFunctionSignature.js */ "./node_modules/viem/_esm/utils/hash/toSignature.js");
/* harmony import */ var _utils_hash_toEventHash_js__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./utils/hash/toFunctionHash.js */ "./node_modules/viem/_esm/utils/hash/toSignatureHash.js");
/* harmony import */ var _utils_signature_hashMessage_js__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./utils/signature/hashMessage.js */ "./node_modules/viem/_esm/utils/signature/hashMessage.js");
/* harmony import */ var _utils_signature_toPrefixedMessage_js__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./utils/signature/toPrefixedMessage.js */ "./node_modules/viem/_esm/utils/signature/toPrefixedMessage.js");
/* harmony import */ var _utils_address_isAddress_js__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./utils/address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _utils_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./utils/address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");
/* harmony import */ var _utils_data_isBytes_js__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./utils/data/isBytes.js */ "./node_modules/viem/_esm/utils/data/isBytes.js");
/* harmony import */ var _utils_hash_isHash_js__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./utils/hash/isHash.js */ "./node_modules/viem/_esm/utils/hash/isHash.js");
/* harmony import */ var _utils_data_isHex_js__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./utils/data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./utils/hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _utils_hash_sha256_js__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./utils/hash/sha256.js */ "./node_modules/viem/_esm/utils/hash/sha256.js");
/* harmony import */ var _utils_hash_ripemd160_js__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./utils/hash/ripemd160.js */ "./node_modules/viem/_esm/utils/hash/ripemd160.js");
/* harmony import */ var _utils_data_pad_js__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./utils/data/pad.js */ "./node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _utils_unit_parseEther_js__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./utils/unit/parseEther.js */ "./node_modules/viem/_esm/utils/unit/parseEther.js");
/* harmony import */ var _utils_unit_parseGwei_js__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./utils/unit/parseGwei.js */ "./node_modules/viem/_esm/utils/unit/parseGwei.js");
/* harmony import */ var _utils_transaction_parseTransaction_js__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./utils/transaction/parseTransaction.js */ "./node_modules/viem/_esm/utils/transaction/parseTransaction.js");
/* harmony import */ var _utils_unit_parseUnits_js__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./utils/unit/parseUnits.js */ "./node_modules/viem/_esm/utils/unit/parseUnits.js");
/* harmony import */ var _utils_transaction_serializeAccessList_js__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./utils/transaction/serializeAccessList.js */ "./node_modules/viem/_esm/utils/transaction/serializeAccessList.js");
/* harmony import */ var _utils_transaction_serializeTransaction_js__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./utils/transaction/serializeTransaction.js */ "./node_modules/viem/_esm/utils/transaction/serializeTransaction.js");
/* harmony import */ var _utils_data_size_js__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./utils/data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _utils_data_slice_js__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./utils/data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./utils/stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _utils_data_trim_js__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./utils/data/trim.js */ "./node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _utils_typedData_js__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./utils/typedData.js */ "./node_modules/viem/_esm/utils/typedData.js");
/* harmony import */ var _utils_nonceManager_js__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./utils/nonceManager.js */ "./node_modules/viem/_esm/utils/nonceManager.js");
// biome-ignore lint/performance/noBarrelFile: entrypoint module





















































































































































//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/types/eip1193.js":
/*!*************************************************!*\
  !*** ./node_modules/viem/_esm/types/eip1193.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ProviderRpcError: () => (/* binding */ ProviderRpcError)
/* harmony export */ });
class ProviderRpcError extends Error {
    constructor(code, message) {
        super(message);
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "details", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.code = code;
        this.details = message;
    }
}
//# sourceMappingURL=eip1193.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeAbiParameters: () => (/* binding */ decodeAbiParameters)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _address_getAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _cursor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cursor.js */ "./node_modules/viem/_esm/utils/cursor.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _data_trim_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/trim.js */ "./node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../encoding/fromBytes.js */ "./node_modules/viem/_esm/utils/encoding/fromBytes.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");










function decodeAbiParameters(params, data) {
    const bytes = typeof data === 'string' ? (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_7__.hexToBytes)(data) : data;
    const cursor = (0,_cursor_js__WEBPACK_IMPORTED_MODULE_2__.createCursor)(bytes);
    if ((0,_data_size_js__WEBPACK_IMPORTED_MODULE_3__.size)(bytes) === 0 && params.length > 0)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiDecodingZeroDataError();
    if ((0,_data_size_js__WEBPACK_IMPORTED_MODULE_3__.size)(data) && (0,_data_size_js__WEBPACK_IMPORTED_MODULE_3__.size)(data) < 32)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiDecodingDataSizeTooSmallError({
            data: typeof data === 'string' ? data : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.bytesToHex)(data),
            params: params,
            size: (0,_data_size_js__WEBPACK_IMPORTED_MODULE_3__.size)(data),
        });
    let consumed = 0;
    const values = [];
    for (let i = 0; i < params.length; ++i) {
        const param = params[i];
        cursor.setPosition(consumed);
        const [data, consumed_] = decodeParameter(cursor, param, {
            staticPosition: 0,
        });
        consumed += consumed_;
        values.push(data);
    }
    return values;
}
function decodeParameter(cursor, param, { staticPosition }) {
    const arrayComponents = (0,_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_9__.getArrayComponents)(param.type);
    if (arrayComponents) {
        const [length, type] = arrayComponents;
        return decodeArray(cursor, { ...param, type }, { length, staticPosition });
    }
    if (param.type === 'tuple')
        return decodeTuple(cursor, param, { staticPosition });
    if (param.type === 'address')
        return decodeAddress(cursor);
    if (param.type === 'bool')
        return decodeBool(cursor);
    if (param.type.startsWith('bytes'))
        return decodeBytes(cursor, param, { staticPosition });
    if (param.type.startsWith('uint') || param.type.startsWith('int'))
        return decodeNumber(cursor, param);
    if (param.type === 'string')
        return decodeString(cursor, { staticPosition });
    throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAbiDecodingTypeError(param.type, {
        docsPath: '/docs/contract/decodeAbiParameters',
    });
}
////////////////////////////////////////////////////////////////////
// Type Decoders
const sizeOfLength = 32;
const sizeOfOffset = 32;
function decodeAddress(cursor) {
    const value = cursor.readBytes(32);
    return [(0,_address_getAddress_js__WEBPACK_IMPORTED_MODULE_1__.checksumAddress)((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.bytesToHex)((0,_data_slice_js__WEBPACK_IMPORTED_MODULE_4__.sliceBytes)(value, -20))), 32];
}
function decodeArray(cursor, param, { length, staticPosition }) {
    // If the length of the array is not known in advance (dynamic array),
    // this means we will need to wonder off to the pointer and decode.
    if (!length) {
        // Dealing with a dynamic type, so get the offset of the array data.
        const offset = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(cursor.readBytes(sizeOfOffset));
        // Start is the static position of current slot + offset.
        const start = staticPosition + offset;
        const startOfData = start + sizeOfLength;
        // Get the length of the array from the offset.
        cursor.setPosition(start);
        const length = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(cursor.readBytes(sizeOfLength));
        // Check if the array has any dynamic children.
        const dynamicChild = hasDynamicChild(param);
        let consumed = 0;
        const value = [];
        for (let i = 0; i < length; ++i) {
            // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).
            // Otherwise, elements will be the size of their encoding (consumed bytes).
            cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed));
            const [data, consumed_] = decodeParameter(cursor, param, {
                staticPosition: startOfData,
            });
            consumed += consumed_;
            value.push(data);
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [value, 32];
    }
    // If the length of the array is known in advance,
    // and the length of an element deeply nested in the array is not known,
    // we need to decode the offset of the array data.
    if (hasDynamicChild(param)) {
        // Dealing with dynamic types, so get the offset of the array data.
        const offset = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(cursor.readBytes(sizeOfOffset));
        // Start is the static position of current slot + offset.
        const start = staticPosition + offset;
        const value = [];
        for (let i = 0; i < length; ++i) {
            // Move cursor along to the next slot (next offset pointer).
            cursor.setPosition(start + i * 32);
            const [data] = decodeParameter(cursor, param, {
                staticPosition: start,
            });
            value.push(data);
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [value, 32];
    }
    // If the length of the array is known in advance and the array is deeply static,
    // then we can just decode each element in sequence.
    let consumed = 0;
    const value = [];
    for (let i = 0; i < length; ++i) {
        const [data, consumed_] = decodeParameter(cursor, param, {
            staticPosition: staticPosition + consumed,
        });
        consumed += consumed_;
        value.push(data);
    }
    return [value, consumed];
}
function decodeBool(cursor) {
    return [(0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToBool)(cursor.readBytes(32), { size: 32 }), 32];
}
function decodeBytes(cursor, param, { staticPosition }) {
    const [_, size] = param.type.split('bytes');
    if (!size) {
        // Dealing with dynamic types, so get the offset of the bytes data.
        const offset = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(cursor.readBytes(32));
        // Set position of the cursor to start of bytes data.
        cursor.setPosition(staticPosition + offset);
        const length = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(cursor.readBytes(32));
        // If there is no length, we have zero data.
        if (length === 0) {
            // As we have gone wondering, restore to the original position + next slot.
            cursor.setPosition(staticPosition + 32);
            return ['0x', 32];
        }
        const data = cursor.readBytes(length);
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [(0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.bytesToHex)(data), 32];
    }
    const value = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.bytesToHex)(cursor.readBytes(Number.parseInt(size), 32));
    return [value, 32];
}
function decodeNumber(cursor, param) {
    const signed = param.type.startsWith('int');
    const size = Number.parseInt(param.type.split('int')[1] || '256');
    const value = cursor.readBytes(32);
    return [
        size > 48
            ? (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToBigInt)(value, { signed })
            : (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(value, { signed }),
        32,
    ];
}
function decodeTuple(cursor, param, { staticPosition }) {
    // Tuples can have unnamed components (i.e. they are arrays), so we must
    // determine whether the tuple is named or unnamed. In the case of a named
    // tuple, the value will be an object where each property is the name of the
    // component. In the case of an unnamed tuple, the value will be an array.
    const hasUnnamedChild = param.components.length === 0 || param.components.some(({ name }) => !name);
    // Initialize the value to an object or an array, depending on whether the
    // tuple is named or unnamed.
    const value = hasUnnamedChild ? [] : {};
    let consumed = 0;
    // If the tuple has a dynamic child, we must first decode the offset to the
    // tuple data.
    if (hasDynamicChild(param)) {
        // Dealing with dynamic types, so get the offset of the tuple data.
        const offset = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(cursor.readBytes(sizeOfOffset));
        // Start is the static position of referencing slot + offset.
        const start = staticPosition + offset;
        for (let i = 0; i < param.components.length; ++i) {
            const component = param.components[i];
            cursor.setPosition(start + consumed);
            const [data, consumed_] = decodeParameter(cursor, component, {
                staticPosition: start,
            });
            consumed += consumed_;
            value[hasUnnamedChild ? i : component?.name] = data;
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [value, 32];
    }
    // If the tuple has static children, we can just decode each component
    // in sequence.
    for (let i = 0; i < param.components.length; ++i) {
        const component = param.components[i];
        const [data, consumed_] = decodeParameter(cursor, component, {
            staticPosition,
        });
        value[hasUnnamedChild ? i : component?.name] = data;
        consumed += consumed_;
    }
    return [value, consumed];
}
function decodeString(cursor, { staticPosition }) {
    // Get offset to start of string data.
    const offset = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(cursor.readBytes(32));
    // Start is the static position of current slot + offset.
    const start = staticPosition + offset;
    cursor.setPosition(start);
    const length = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumber)(cursor.readBytes(32));
    // If there is no length, we have zero data (empty string).
    if (length === 0) {
        cursor.setPosition(staticPosition + 32);
        return ['', 32];
    }
    const data = cursor.readBytes(length, 32);
    const value = (0,_encoding_fromBytes_js__WEBPACK_IMPORTED_MODULE_6__.bytesToString)((0,_data_trim_js__WEBPACK_IMPORTED_MODULE_5__.trim)(data));
    // As we have gone wondering, restore to the original position + next slot.
    cursor.setPosition(staticPosition + 32);
    return [value, 32];
}
function hasDynamicChild(param) {
    const { type } = param;
    if (type === 'string')
        return true;
    if (type === 'bytes')
        return true;
    if (type.endsWith('[]'))
        return true;
    if (type === 'tuple')
        return param.components?.some(hasDynamicChild);
    const arrayComponents = (0,_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_9__.getArrayComponents)(param.type);
    if (arrayComponents &&
        hasDynamicChild({ ...param, type: arrayComponents[1] }))
        return true;
    return false;
}
//# sourceMappingURL=decodeAbiParameters.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/decodeDeployData.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/decodeDeployData.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeDeployData: () => (/* binding */ decodeDeployData)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js");


const docsPath = '/docs/contract/decodeDeployData';
function decodeDeployData(parameters) {
    const { abi, bytecode, data } = parameters;
    if (data === bytecode)
        return { bytecode };
    const description = abi.find((x) => 'type' in x && x.type === 'constructor');
    if (!description)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiConstructorNotFoundError({ docsPath });
    if (!('inputs' in description))
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiConstructorParamsNotFoundError({ docsPath });
    if (!description.inputs || description.inputs.length === 0)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiConstructorParamsNotFoundError({ docsPath });
    const args = (0,_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.decodeAbiParameters)(description.inputs, `0x${data.replace(bytecode, '')}`);
    return { args, bytecode };
}
//# sourceMappingURL=decodeDeployData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/decodeErrorResult.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/decodeErrorResult.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeErrorResult: () => (/* binding */ decodeErrorResult)
/* harmony export */ });
/* harmony import */ var _constants_solidity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/solidity.js */ "./node_modules/viem/_esm/constants/solidity.js");
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hash/toFunctionSelector.js */ "./node_modules/viem/_esm/utils/hash/toFunctionSelector.js");
/* harmony import */ var _decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./decodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js");
/* harmony import */ var _formatAbiItem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatAbiItem.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js");






function decodeErrorResult(parameters) {
    const { abi, data } = parameters;
    const signature = (0,_data_slice_js__WEBPACK_IMPORTED_MODULE_2__.slice)(data, 0, 4);
    if (signature === '0x')
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_1__.AbiDecodingZeroDataError();
    const abi_ = [...(abi || []), _constants_solidity_js__WEBPACK_IMPORTED_MODULE_0__.solidityError, _constants_solidity_js__WEBPACK_IMPORTED_MODULE_0__.solidityPanic];
    const abiItem = abi_.find((x) => x.type === 'error' && signature === (0,_hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_3__.toFunctionSelector)((0,_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_5__.formatAbiItem)(x)));
    if (!abiItem)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_1__.AbiErrorSignatureNotFoundError(signature, {
            docsPath: '/docs/contract/decodeErrorResult',
        });
    return {
        abiItem,
        args: 'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0
            ? (0,_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_4__.decodeAbiParameters)(abiItem.inputs, (0,_data_slice_js__WEBPACK_IMPORTED_MODULE_2__.slice)(data, 4))
            : undefined,
        errorName: abiItem.name,
    };
}
//# sourceMappingURL=decodeErrorResult.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/decodeEventLog.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/decodeEventLog.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeEventLog: () => (/* binding */ decodeEventLog)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/toEventSelector.js */ "./node_modules/viem/_esm/utils/hash/toEventSelector.js");
/* harmony import */ var _errors_cursor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/cursor.js */ "./node_modules/viem/_esm/errors/cursor.js");
/* harmony import */ var _decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./decodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js");
/* harmony import */ var _formatAbiItem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatAbiItem.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js");






const docsPath = '/docs/contract/decodeEventLog';
function decodeEventLog(parameters) {
    const { abi, data, strict: strict_, topics, } = parameters;
    const strict = strict_ ?? true;
    const [signature, ...argTopics] = topics;
    if (!signature)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEventSignatureEmptyTopicsError({ docsPath });
    const abiItem = abi.find((x) => x.type === 'event' &&
        signature === (0,_hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_2__.toEventSelector)((0,_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_5__.formatAbiItem)(x)));
    if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEventSignatureNotFoundError(signature, { docsPath });
    const { name, inputs } = abiItem;
    const isUnnamed = inputs?.some((x) => !('name' in x && x.name));
    const args = isUnnamed ? [] : {};
    // Decode topics (indexed args).
    const indexedInputs = inputs
        .map((x, i) => [x, i])
        .filter(([x]) => 'indexed' in x && x.indexed);
    for (let i = 0; i < indexedInputs.length; i++) {
        const [param, argIndex] = indexedInputs[i];
        const topic = argTopics[i];
        if (!topic)
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.DecodeLogTopicsMismatch({
                abiItem,
                param: param,
            });
        args[isUnnamed ? argIndex : param.name || argIndex] = decodeTopic({
            param,
            value: topic,
        });
    }
    // Decode data (non-indexed args).
    const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed));
    if (nonIndexedInputs.length > 0) {
        if (data && data !== '0x') {
            try {
                const decodedData = (0,_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_4__.decodeAbiParameters)(nonIndexedInputs, data);
                if (decodedData) {
                    if (isUnnamed)
                        for (let i = 0; i < inputs.length; i++)
                            args[i] = args[i] ?? decodedData.shift();
                    else
                        for (let i = 0; i < nonIndexedInputs.length; i++)
                            args[nonIndexedInputs[i].name] = decodedData[i];
                }
            }
            catch (err) {
                if (strict) {
                    if (err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiDecodingDataSizeTooSmallError ||
                        err instanceof _errors_cursor_js__WEBPACK_IMPORTED_MODULE_3__.PositionOutOfBoundsError)
                        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.DecodeLogDataMismatch({
                            abiItem,
                            data: data,
                            params: nonIndexedInputs,
                            size: (0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(data),
                        });
                    throw err;
                }
            }
        }
        else if (strict) {
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.DecodeLogDataMismatch({
                abiItem,
                data: '0x',
                params: nonIndexedInputs,
                size: 0,
            });
        }
    }
    return {
        eventName: name,
        args: Object.values(args).length > 0 ? args : undefined,
    };
}
function decodeTopic({ param, value }) {
    if (param.type === 'string' ||
        param.type === 'bytes' ||
        param.type === 'tuple' ||
        param.type.match(/^(.*)\[(\d+)?\]$/))
        return value;
    const decodedArg = (0,_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_4__.decodeAbiParameters)([param], value) || [];
    return decodedArg[0];
}
//# sourceMappingURL=decodeEventLog.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/decodeFunctionData.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/decodeFunctionData.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeFunctionData: () => (/* binding */ decodeFunctionData)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/toFunctionSelector.js */ "./node_modules/viem/_esm/utils/hash/toFunctionSelector.js");
/* harmony import */ var _decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js");
/* harmony import */ var _formatAbiItem_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatAbiItem.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js");





function decodeFunctionData(parameters) {
    const { abi, data } = parameters;
    const signature = (0,_data_slice_js__WEBPACK_IMPORTED_MODULE_1__.slice)(data, 0, 4);
    const description = abi.find((x) => x.type === 'function' &&
        signature === (0,_hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_2__.toFunctionSelector)((0,_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_4__.formatAbiItem)(x)));
    if (!description)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionSignatureNotFoundError(signature, {
            docsPath: '/docs/contract/decodeFunctionData',
        });
    return {
        functionName: description.name,
        args: ('inputs' in description &&
            description.inputs &&
            description.inputs.length > 0
            ? (0,_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__.decodeAbiParameters)(description.inputs, (0,_data_slice_js__WEBPACK_IMPORTED_MODULE_1__.slice)(data, 4))
            : undefined),
    };
}
//# sourceMappingURL=decodeFunctionData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/decodeFunctionResult.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeFunctionResult: () => (/* binding */ decodeFunctionResult)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js");
/* harmony import */ var _getAbiItem_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getAbiItem.js */ "./node_modules/viem/_esm/utils/abi/getAbiItem.js");



const docsPath = '/docs/contract/decodeFunctionResult';
function decodeFunctionResult(parameters) {
    const { abi, args, functionName, data } = parameters;
    let abiItem = abi[0];
    if (functionName) {
        const item = (0,_getAbiItem_js__WEBPACK_IMPORTED_MODULE_2__.getAbiItem)({ abi, args, name: functionName });
        if (!item)
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionNotFoundError(functionName, { docsPath });
        abiItem = item;
    }
    if (abiItem.type !== 'function')
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionNotFoundError(undefined, { docsPath });
    if (!abiItem.outputs)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath });
    const values = (0,_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.decodeAbiParameters)(abiItem.outputs, data);
    if (values && values.length > 1)
        return values;
    if (values && values.length === 1)
        return values[0];
    return undefined;
}
//# sourceMappingURL=decodeFunctionResult.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeAbiParameters: () => (/* binding */ encodeAbiParameters),
/* harmony export */   getArrayComponents: () => (/* binding */ getArrayComponents)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../regex.js */ "./node_modules/viem/_esm/utils/regex.js");











/**
 * @description Encodes a list of primitive values into an ABI-encoded hex value.
 *
 * - Docs: https://viem.sh/docs/abi/encodeAbiParameters#encodeabiparameters
 *
 *   Generates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec), given a set of ABI parameters (inputs/outputs) and their corresponding values.
 *
 * @param params - a set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.
 * @param values - a set of values (values) that correspond to the given params.
 * @example
 * ```typescript
 * import { encodeAbiParameters } from 'viem'
 *
 * const encodedData = encodeAbiParameters(
 *   [
 *     { name: 'x', type: 'string' },
 *     { name: 'y', type: 'uint' },
 *     { name: 'z', type: 'bool' }
 *   ],
 *   ['wagmi', 420n, true]
 * )
 * ```
 *
 * You can also pass in Human Readable parameters with the parseAbiParameters utility.
 *
 * @example
 * ```typescript
 * import { encodeAbiParameters, parseAbiParameters } from 'viem'
 *
 * const encodedData = encodeAbiParameters(
 *   parseAbiParameters('string x, uint y, bool z'),
 *   ['wagmi', 420n, true]
 * )
 * ```
 */
function encodeAbiParameters(params, values) {
    if (params.length !== values.length)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEncodingLengthMismatchError({
            expectedLength: params.length,
            givenLength: values.length,
        });
    // Prepare the parameters to determine dynamic types to encode.
    const preparedParams = prepareParams({
        params: params,
        values: values,
    });
    const data = encodeParams(preparedParams);
    if (data.length === 0)
        return '0x';
    return data;
}
function prepareParams({ params, values, }) {
    const preparedParams = [];
    for (let i = 0; i < params.length; i++) {
        preparedParams.push(prepareParam({ param: params[i], value: values[i] }));
    }
    return preparedParams;
}
function prepareParam({ param, value, }) {
    const arrayComponents = getArrayComponents(param.type);
    if (arrayComponents) {
        const [length, type] = arrayComponents;
        return encodeArray(value, { length, param: { ...param, type } });
    }
    if (param.type === 'tuple') {
        return encodeTuple(value, {
            param: param,
        });
    }
    if (param.type === 'address') {
        return encodeAddress(value);
    }
    if (param.type === 'bool') {
        return encodeBool(value);
    }
    if (param.type.startsWith('uint') || param.type.startsWith('int')) {
        const signed = param.type.startsWith('int');
        const [, , size = '256'] = _regex_js__WEBPACK_IMPORTED_MODULE_10__.integerRegex.exec(param.type) ?? [];
        return encodeNumber(value, {
            signed,
            size: Number(size),
        });
    }
    if (param.type.startsWith('bytes')) {
        return encodeBytes(value, { param });
    }
    if (param.type === 'string') {
        return encodeString(value);
    }
    throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAbiEncodingTypeError(param.type, {
        docsPath: '/docs/contract/encodeAbiParameters',
    });
}
function encodeParams(preparedParams) {
    // 1. Compute the size of the static part of the parameters.
    let staticSize = 0;
    for (let i = 0; i < preparedParams.length; i++) {
        const { dynamic, encoded } = preparedParams[i];
        if (dynamic)
            staticSize += 32;
        else
            staticSize += (0,_data_size_js__WEBPACK_IMPORTED_MODULE_7__.size)(encoded);
    }
    // 2. Split the parameters into static and dynamic parts.
    const staticParams = [];
    const dynamicParams = [];
    let dynamicSize = 0;
    for (let i = 0; i < preparedParams.length; i++) {
        const { dynamic, encoded } = preparedParams[i];
        if (dynamic) {
            staticParams.push((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_9__.numberToHex)(staticSize + dynamicSize, { size: 32 }));
            dynamicParams.push(encoded);
            dynamicSize += (0,_data_size_js__WEBPACK_IMPORTED_MODULE_7__.size)(encoded);
        }
        else {
            staticParams.push(encoded);
        }
    }
    // 3. Concatenate static and dynamic parts.
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_5__.concat)([...staticParams, ...dynamicParams]);
}
function encodeAddress(value) {
    if (!(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_4__.isAddress)(value))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_1__.InvalidAddressError({ address: value });
    return { dynamic: false, encoded: (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_6__.padHex)(value.toLowerCase()) };
}
function encodeArray(value, { length, param, }) {
    const dynamic = length === null;
    if (!Array.isArray(value))
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArrayError(value);
    if (!dynamic && value.length !== length)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEncodingArrayLengthMismatchError({
            expectedLength: length,
            givenLength: value.length,
            type: `${param.type}[${length}]`,
        });
    let dynamicChild = false;
    const preparedParams = [];
    for (let i = 0; i < value.length; i++) {
        const preparedParam = prepareParam({ param, value: value[i] });
        if (preparedParam.dynamic)
            dynamicChild = true;
        preparedParams.push(preparedParam);
    }
    if (dynamic || dynamicChild) {
        const data = encodeParams(preparedParams);
        if (dynamic) {
            const length = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_9__.numberToHex)(preparedParams.length, { size: 32 });
            return {
                dynamic: true,
                encoded: preparedParams.length > 0 ? (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_5__.concat)([length, data]) : length,
            };
        }
        if (dynamicChild)
            return { dynamic: true, encoded: data };
    }
    return {
        dynamic: false,
        encoded: (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_5__.concat)(preparedParams.map(({ encoded }) => encoded)),
    };
}
function encodeBytes(value, { param }) {
    const [, paramSize] = param.type.split('bytes');
    const bytesSize = (0,_data_size_js__WEBPACK_IMPORTED_MODULE_7__.size)(value);
    if (!paramSize) {
        let value_ = value;
        // If the size is not divisible by 32 bytes, pad the end
        // with empty bytes to the ceiling 32 bytes.
        if (bytesSize % 32 !== 0)
            value_ = (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_6__.padHex)(value_, {
                dir: 'right',
                size: Math.ceil((value.length - 2) / 2 / 32) * 32,
            });
        return {
            dynamic: true,
            encoded: (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_5__.concat)([(0,_data_pad_js__WEBPACK_IMPORTED_MODULE_6__.padHex)((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_9__.numberToHex)(bytesSize, { size: 32 })), value_]),
        };
    }
    if (bytesSize !== Number.parseInt(paramSize))
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEncodingBytesSizeMismatchError({
            expectedSize: Number.parseInt(paramSize),
            value,
        });
    return { dynamic: false, encoded: (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_6__.padHex)(value, { dir: 'right' }) };
}
function encodeBool(value) {
    if (typeof value !== 'boolean')
        throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_2__.BaseError(`Invalid boolean value: "${value}" (type: ${typeof value}). Expected: \`true\` or \`false\`.`);
    return { dynamic: false, encoded: (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_6__.padHex)((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_9__.boolToHex)(value)) };
}
function encodeNumber(value, { signed, size = 256 }) {
    if (typeof size === 'number') {
        const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n;
        const min = signed ? -max - 1n : 0n;
        if (value > max || value < min)
            throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_3__.IntegerOutOfRangeError({
                max: max.toString(),
                min: min.toString(),
                signed,
                size: size / 8,
                value: value.toString(),
            });
    }
    return {
        dynamic: false,
        encoded: (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_9__.numberToHex)(value, {
            size: 32,
            signed,
        }),
    };
}
function encodeString(value) {
    const hexValue = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_9__.stringToHex)(value);
    const partsLength = Math.ceil((0,_data_size_js__WEBPACK_IMPORTED_MODULE_7__.size)(hexValue) / 32);
    const parts = [];
    for (let i = 0; i < partsLength; i++) {
        parts.push((0,_data_pad_js__WEBPACK_IMPORTED_MODULE_6__.padHex)((0,_data_slice_js__WEBPACK_IMPORTED_MODULE_8__.slice)(hexValue, i * 32, (i + 1) * 32), {
            dir: 'right',
        }));
    }
    return {
        dynamic: true,
        encoded: (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_5__.concat)([
            (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_6__.padHex)((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_9__.numberToHex)((0,_data_size_js__WEBPACK_IMPORTED_MODULE_7__.size)(hexValue), { size: 32 })),
            ...parts,
        ]),
    };
}
function encodeTuple(value, { param }) {
    let dynamic = false;
    const preparedParams = [];
    for (let i = 0; i < param.components.length; i++) {
        const param_ = param.components[i];
        const index = Array.isArray(value) ? i : param_.name;
        const preparedParam = prepareParam({
            param: param_,
            value: value[index],
        });
        preparedParams.push(preparedParam);
        if (preparedParam.dynamic)
            dynamic = true;
    }
    return {
        dynamic,
        encoded: dynamic
            ? encodeParams(preparedParams)
            : (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_5__.concat)(preparedParams.map(({ encoded }) => encoded)),
    };
}
function getArrayComponents(type) {
    const matches = type.match(/^(.*)\[(\d+)?\]$/);
    return matches
        ? // Return `null` if the array is dynamic.
            [matches[2] ? Number(matches[2]) : null, matches[1]]
        : undefined;
}
//# sourceMappingURL=encodeAbiParameters.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/encodeDeployData.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/encodeDeployData.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeDeployData: () => (/* binding */ encodeDeployData)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");



const docsPath = '/docs/contract/encodeDeployData';
function encodeDeployData(parameters) {
    const { abi, args, bytecode } = parameters;
    if (!args || args.length === 0)
        return bytecode;
    const description = abi.find((x) => 'type' in x && x.type === 'constructor');
    if (!description)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiConstructorNotFoundError({ docsPath });
    if (!('inputs' in description))
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiConstructorParamsNotFoundError({ docsPath });
    if (!description.inputs || description.inputs.length === 0)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiConstructorParamsNotFoundError({ docsPath });
    const data = (0,_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_2__.encodeAbiParameters)(description.inputs, args);
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_1__.concatHex)([bytecode, data]);
}
//# sourceMappingURL=encodeDeployData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/encodeErrorResult.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/encodeErrorResult.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeErrorResult: () => (/* binding */ encodeErrorResult)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/toFunctionSelector.js */ "./node_modules/viem/_esm/utils/hash/toFunctionSelector.js");
/* harmony import */ var _encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");
/* harmony import */ var _formatAbiItem_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatAbiItem.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js");
/* harmony import */ var _getAbiItem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getAbiItem.js */ "./node_modules/viem/_esm/utils/abi/getAbiItem.js");






const docsPath = '/docs/contract/encodeErrorResult';
function encodeErrorResult(parameters) {
    const { abi, errorName, args } = parameters;
    let abiItem = abi[0];
    if (errorName) {
        const item = (0,_getAbiItem_js__WEBPACK_IMPORTED_MODULE_5__.getAbiItem)({ abi, args, name: errorName });
        if (!item)
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiErrorNotFoundError(errorName, { docsPath });
        abiItem = item;
    }
    if (abiItem.type !== 'error')
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiErrorNotFoundError(undefined, { docsPath });
    const definition = (0,_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_4__.formatAbiItem)(abiItem);
    const signature = (0,_hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_2__.toFunctionSelector)(definition);
    let data = '0x';
    if (args && args.length > 0) {
        if (!abiItem.inputs)
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiErrorInputsNotFoundError(abiItem.name, { docsPath });
        data = (0,_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)(abiItem.inputs, args);
    }
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_1__.concatHex)([signature, data]);
}
//# sourceMappingURL=encodeErrorResult.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/encodeEventTopics.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/encodeEventTopics.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeEventTopics: () => (/* binding */ encodeEventTopics)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/log.js */ "./node_modules/viem/_esm/errors/log.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hash/toEventSelector.js */ "./node_modules/viem/_esm/utils/hash/toEventSelector.js");
/* harmony import */ var _encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");
/* harmony import */ var _formatAbiItem_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formatAbiItem.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js");
/* harmony import */ var _getAbiItem_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getAbiItem.js */ "./node_modules/viem/_esm/utils/abi/getAbiItem.js");








const docsPath = '/docs/contract/encodeEventTopics';
function encodeEventTopics(parameters) {
    const { abi, eventName, args } = parameters;
    let abiItem = abi[0];
    if (eventName) {
        const item = (0,_getAbiItem_js__WEBPACK_IMPORTED_MODULE_7__.getAbiItem)({ abi, name: eventName });
        if (!item)
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEventNotFoundError(eventName, { docsPath });
        abiItem = item;
    }
    if (abiItem.type !== 'event')
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEventNotFoundError(undefined, { docsPath });
    const definition = (0,_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_6__.formatAbiItem)(abiItem);
    const signature = (0,_hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_4__.toEventSelector)(definition);
    let topics = [];
    if (args && 'inputs' in abiItem) {
        const indexedInputs = abiItem.inputs?.filter((param) => 'indexed' in param && param.indexed);
        const args_ = Array.isArray(args)
            ? args
            : Object.values(args).length > 0
                ? (indexedInputs?.map((x) => args[x.name]) ?? [])
                : [];
        if (args_.length > 0) {
            topics =
                indexedInputs?.map((param, i) => {
                    if (Array.isArray(args_[i]))
                        return args_[i].map((_, j) => encodeArg({ param, value: args_[i][j] }));
                    return typeof args_[i] !== 'undefined' && args_[i] !== null
                        ? encodeArg({ param, value: args_[i] })
                        : null;
                }) ?? [];
        }
    }
    return [signature, ...topics];
}
function encodeArg({ param, value, }) {
    if (param.type === 'string' || param.type === 'bytes')
        return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(value));
    if (param.type === 'tuple' || param.type.match(/^(.*)\[(\d+)?\]$/))
        throw new _errors_log_js__WEBPACK_IMPORTED_MODULE_1__.FilterTypeNotSupportedError(param.type);
    return (0,_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_5__.encodeAbiParameters)([param], [value]);
}
//# sourceMappingURL=encodeEventTopics.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/encodeFunctionData.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/encodeFunctionData.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeFunctionData: () => (/* binding */ encodeFunctionData)
/* harmony export */ });
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");
/* harmony import */ var _prepareEncodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prepareEncodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js");



function encodeFunctionData(parameters) {
    const { args } = parameters;
    const { abi, functionName } = (() => {
        if (parameters.abi.length === 1 &&
            parameters.functionName?.startsWith('0x'))
            return parameters;
        return (0,_prepareEncodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__.prepareEncodeFunctionData)(parameters);
    })();
    const abiItem = abi[0];
    const signature = functionName;
    const data = 'inputs' in abiItem && abiItem.inputs
        ? (0,_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)(abiItem.inputs, args ?? [])
        : undefined;
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_0__.concatHex)([signature, data ?? '0x']);
}
//# sourceMappingURL=encodeFunctionData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/encodeFunctionResult.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/encodeFunctionResult.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeFunctionResult: () => (/* binding */ encodeFunctionResult)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");
/* harmony import */ var _getAbiItem_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getAbiItem.js */ "./node_modules/viem/_esm/utils/abi/getAbiItem.js");



const docsPath = '/docs/contract/encodeFunctionResult';
function encodeFunctionResult(parameters) {
    const { abi, functionName, result } = parameters;
    let abiItem = abi[0];
    if (functionName) {
        const item = (0,_getAbiItem_js__WEBPACK_IMPORTED_MODULE_2__.getAbiItem)({ abi, name: functionName });
        if (!item)
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionNotFoundError(functionName, { docsPath });
        abiItem = item;
    }
    if (abiItem.type !== 'function')
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionNotFoundError(undefined, { docsPath });
    if (!abiItem.outputs)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath });
    const values = (() => {
        if (abiItem.outputs.length === 0)
            return [];
        if (abiItem.outputs.length === 1)
            return [result];
        if (Array.isArray(result))
            return result;
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArrayError(result);
    })();
    return (0,_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)(abiItem.outputs, values);
}
//# sourceMappingURL=encodeFunctionResult.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/encodePacked.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/encodePacked.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodePacked: () => (/* binding */ encodePacked)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../regex.js */ "./node_modules/viem/_esm/utils/regex.js");







function encodePacked(types, values) {
    if (types.length !== values.length)
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEncodingLengthMismatchError({
            expectedLength: types.length,
            givenLength: values.length,
        });
    const data = [];
    for (let i = 0; i < types.length; i++) {
        const type = types[i];
        const value = values[i];
        data.push(encode(type, value));
    }
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_3__.concatHex)(data);
}
function encode(type, value, isArray = false) {
    if (type === 'address') {
        const address = value;
        if (!(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address))
            throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_1__.InvalidAddressError({ address });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_4__.pad)(address.toLowerCase(), {
            size: isArray ? 32 : null,
        });
    }
    if (type === 'string')
        return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.stringToHex)(value);
    if (type === 'bytes')
        return value;
    if (type === 'bool')
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_4__.pad)((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.boolToHex)(value), { size: isArray ? 32 : 1 });
    const intMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_6__.integerRegex);
    if (intMatch) {
        const [_type, baseType, bits = '256'] = intMatch;
        const size = Number.parseInt(bits) / 8;
        return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.numberToHex)(value, {
            size: isArray ? 32 : size,
            signed: baseType === 'int',
        });
    }
    const bytesMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_6__.bytesRegex);
    if (bytesMatch) {
        const [_type, size] = bytesMatch;
        if (Number.parseInt(size) !== (value.length - 2) / 2)
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.BytesSizeMismatchError({
                expectedSize: Number.parseInt(size),
                givenSize: (value.length - 2) / 2,
            });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_4__.pad)(value, { dir: 'right', size: isArray ? 32 : null });
    }
    const arrayMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_6__.arrayRegex);
    if (arrayMatch && Array.isArray(value)) {
        const [_type, childType] = arrayMatch;
        const data = [];
        for (let i = 0; i < value.length; i++) {
            data.push(encode(childType, value[i], true));
        }
        if (data.length === 0)
            return '0x';
        return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_3__.concatHex)(data);
    }
    throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.UnsupportedPackedAbiType(type);
}
//# sourceMappingURL=encodePacked.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/formatAbiItem.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatAbiItem: () => (/* binding */ formatAbiItem),
/* harmony export */   formatAbiParams: () => (/* binding */ formatAbiParams)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");

function formatAbiItem(abiItem, { includeName = false } = {}) {
    if (abiItem.type !== 'function' &&
        abiItem.type !== 'event' &&
        abiItem.type !== 'error')
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.InvalidDefinitionTypeError(abiItem.type);
    return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`;
}
function formatAbiParams(params, { includeName = false } = {}) {
    if (!params)
        return '';
    return params
        .map((param) => formatAbiParam(param, { includeName }))
        .join(includeName ? ', ' : ',');
}
function formatAbiParam(param, { includeName }) {
    if (param.type.startsWith('tuple')) {
        return `(${formatAbiParams(param.components, { includeName })})${param.type.slice('tuple'.length)}`;
    }
    return param.type + (includeName && param.name ? ` ${param.name}` : '');
}
//# sourceMappingURL=formatAbiItem.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/formatAbiItemWithArgs.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/formatAbiItemWithArgs.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatAbiItemWithArgs: () => (/* binding */ formatAbiItemWithArgs)
/* harmony export */ });
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");

function formatAbiItemWithArgs({ abiItem, args, includeFunctionName = true, includeName = false, }) {
    if (!('name' in abiItem))
        return;
    if (!('inputs' in abiItem))
        return;
    if (!abiItem.inputs)
        return;
    return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs
        .map((input, i) => `${includeName && input.name ? `${input.name}: ` : ''}${typeof args[i] === 'object' ? (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(args[i]) : args[i]}`)
        .join(', ')})`;
}
//# sourceMappingURL=formatAbiItemWithArgs.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/getAbiItem.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/getAbiItem.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAbiItem: () => (/* binding */ getAbiItem),
/* harmony export */   getAmbiguousTypes: () => (/* binding */ getAmbiguousTypes),
/* harmony export */   isArgOfType: () => (/* binding */ isArgOfType)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _utils_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hash/toEventSelector.js */ "./node_modules/viem/_esm/utils/hash/toEventSelector.js");
/* harmony import */ var _hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hash/toFunctionSelector.js */ "./node_modules/viem/_esm/utils/hash/toFunctionSelector.js");





function getAbiItem(parameters) {
    const { abi, args = [], name } = parameters;
    const isSelector = (0,_utils_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(name, { strict: false });
    const abiItems = abi.filter((abiItem) => {
        if (isSelector) {
            if (abiItem.type === 'function')
                return (0,_hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_4__.toFunctionSelector)(abiItem) === name;
            if (abiItem.type === 'event')
                return (0,_hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_3__.toEventSelector)(abiItem) === name;
            return false;
        }
        return 'name' in abiItem && abiItem.name === name;
    });
    if (abiItems.length === 0)
        return undefined;
    if (abiItems.length === 1)
        return abiItems[0];
    let matchedAbiItem = undefined;
    for (const abiItem of abiItems) {
        if (!('inputs' in abiItem))
            continue;
        if (!args || args.length === 0) {
            if (!abiItem.inputs || abiItem.inputs.length === 0)
                return abiItem;
            continue;
        }
        if (!abiItem.inputs)
            continue;
        if (abiItem.inputs.length === 0)
            continue;
        if (abiItem.inputs.length !== args.length)
            continue;
        const matched = args.every((arg, index) => {
            const abiParameter = 'inputs' in abiItem && abiItem.inputs[index];
            if (!abiParameter)
                return false;
            return isArgOfType(arg, abiParameter);
        });
        if (matched) {
            // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).
            if (matchedAbiItem &&
                'inputs' in matchedAbiItem &&
                matchedAbiItem.inputs) {
                const ambiguousTypes = getAmbiguousTypes(abiItem.inputs, matchedAbiItem.inputs, args);
                if (ambiguousTypes)
                    throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiItemAmbiguityError({
                        abiItem,
                        type: ambiguousTypes[0],
                    }, {
                        abiItem: matchedAbiItem,
                        type: ambiguousTypes[1],
                    });
            }
            matchedAbiItem = abiItem;
        }
    }
    if (matchedAbiItem)
        return matchedAbiItem;
    return abiItems[0];
}
/** @internal */
function isArgOfType(arg, abiParameter) {
    const argType = typeof arg;
    const abiParameterType = abiParameter.type;
    switch (abiParameterType) {
        case 'address':
            return (0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(arg, { strict: false });
        case 'bool':
            return argType === 'boolean';
        case 'function':
            return argType === 'string';
        case 'string':
            return argType === 'string';
        default: {
            if (abiParameterType === 'tuple' && 'components' in abiParameter)
                return Object.values(abiParameter.components).every((component, index) => {
                    return isArgOfType(Object.values(arg)[index], component);
                });
            // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`
            // https://regexr.com/6v8hp
            if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType))
                return argType === 'number' || argType === 'bigint';
            // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`
            // https://regexr.com/6va55
            if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))
                return argType === 'string' || arg instanceof Uint8Array;
            // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays
            // https://regexr.com/6va6i
            if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(abiParameterType)) {
                return (Array.isArray(arg) &&
                    arg.every((x) => isArgOfType(x, {
                        ...abiParameter,
                        // Pop off `[]` or `[M]` from end of type
                        type: abiParameterType.replace(/(\[[0-9]{0,}\])$/, ''),
                    })));
            }
            return false;
        }
    }
}
/** @internal */
function getAmbiguousTypes(sourceParameters, targetParameters, args) {
    for (const parameterIndex in sourceParameters) {
        const sourceParameter = sourceParameters[parameterIndex];
        const targetParameter = targetParameters[parameterIndex];
        if (sourceParameter.type === 'tuple' &&
            targetParameter.type === 'tuple' &&
            'components' in sourceParameter &&
            'components' in targetParameter)
            return getAmbiguousTypes(sourceParameter.components, targetParameter.components, args[parameterIndex]);
        const types = [sourceParameter.type, targetParameter.type];
        const ambiguous = (() => {
            if (types.includes('address') && types.includes('bytes20'))
                return true;
            if (types.includes('address') && types.includes('string'))
                return (0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(args[parameterIndex], { strict: false });
            if (types.includes('address') && types.includes('bytes'))
                return (0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(args[parameterIndex], { strict: false });
            return false;
        })();
        if (ambiguous)
            return types;
    }
    return;
}
//# sourceMappingURL=getAbiItem.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/parseEventLogs.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/parseEventLogs.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseEventLogs: () => (/* binding */ parseEventLogs)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hash/toEventSelector.js */ "./node_modules/viem/_esm/utils/hash/toEventSelector.js");
/* harmony import */ var _decodeEventLog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./decodeEventLog.js */ "./node_modules/viem/_esm/utils/abi/decodeEventLog.js");
// TODO(v3): checksum address.






/**
 * Extracts & decodes logs matching the provided signature(s) (`abi` + optional `eventName`)
 * from a set of opaque logs.
 *
 * @param parameters - {@link ParseEventLogsParameters}
 * @returns The logs. {@link ParseEventLogsReturnType}
 *
 * @example
 * import { createClient, http } from 'viem'
 * import { mainnet } from 'viem/chains'
 * import { parseEventLogs } from 'viem/op-stack'
 *
 * const client = createClient({
 *   chain: mainnet,
 *   transport: http(),
 * })
 *
 * const receipt = await getTransactionReceipt(client, {
 *   hash: '0xec23b2ba4bc59ba61554507c1b1bc91649e6586eb2dd00c728e8ed0db8bb37ea',
 * })
 *
 * const logs = parseEventLogs({ logs: receipt.logs })
 * // [{ args: { ... }, eventName: 'TransactionDeposited', ... }, ...]
 */
function parseEventLogs(parameters) {
    const { abi, args, logs, strict = true } = parameters;
    const eventName = (() => {
        if (!parameters.eventName)
            return undefined;
        if (Array.isArray(parameters.eventName))
            return parameters.eventName;
        return [parameters.eventName];
    })();
    return logs
        .map((log) => {
        try {
            const abiItem = abi.find((abiItem) => abiItem.type === 'event' &&
                log.topics[0] === (0,_hash_toEventSelector_js__WEBPACK_IMPORTED_MODULE_4__.toEventSelector)(abiItem));
            if (!abiItem)
                return null;
            const event = (0,_decodeEventLog_js__WEBPACK_IMPORTED_MODULE_5__.decodeEventLog)({
                ...log,
                abi: [abiItem],
                strict,
            });
            // Check that the decoded event name matches the provided event name.
            if (eventName && !eventName.includes(event.eventName))
                return null;
            // Check that the decoded event args match the provided args.
            if (!includesArgs({
                args: event.args,
                inputs: abiItem.inputs,
                matchArgs: args,
            }))
                return null;
            return { ...event, ...log };
        }
        catch (err) {
            let eventName;
            let isUnnamed;
            if (err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEventSignatureNotFoundError)
                return null;
            if (err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.DecodeLogDataMismatch ||
                err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.DecodeLogTopicsMismatch) {
                // If strict mode is on, and log data/topics do not match event definition, skip.
                if (strict)
                    return null;
                eventName = err.abiItem.name;
                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));
            }
            // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).
            return { ...log, args: isUnnamed ? [] : {}, eventName };
        }
    })
        .filter(Boolean);
}
function includesArgs(parameters) {
    const { args, inputs, matchArgs } = parameters;
    if (!matchArgs)
        return true;
    if (!args)
        return false;
    function isEqual(input, value, arg) {
        try {
            if (input.type === 'address')
                return (0,_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__.isAddressEqual)(value, arg);
            if (input.type === 'string' || input.type === 'bytes')
                return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(value)) === arg;
            return value === arg;
        }
        catch {
            return false;
        }
    }
    if (Array.isArray(args) && Array.isArray(matchArgs)) {
        return matchArgs.every((value, index) => {
            if (value === null || value === undefined)
                return true;
            const input = inputs[index];
            if (!input)
                return false;
            const value_ = Array.isArray(value) ? value : [value];
            return value_.some((value) => isEqual(input, value, args[index]));
        });
    }
    if (typeof args === 'object' &&
        !Array.isArray(args) &&
        typeof matchArgs === 'object' &&
        !Array.isArray(matchArgs))
        return Object.entries(matchArgs).every(([key, value]) => {
            if (value === null || value === undefined)
                return true;
            const input = inputs.find((input) => input.name === key);
            if (!input)
                return false;
            const value_ = Array.isArray(value) ? value : [value];
            return value_.some((value) => isEqual(input, value, args[key]));
        });
    return false;
}
//# sourceMappingURL=parseEventLogs.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js":
/*!***********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prepareEncodeFunctionData: () => (/* binding */ prepareEncodeFunctionData)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hash/toFunctionSelector.js */ "./node_modules/viem/_esm/utils/hash/toFunctionSelector.js");
/* harmony import */ var _formatAbiItem_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatAbiItem.js */ "./node_modules/viem/_esm/utils/abi/formatAbiItem.js");
/* harmony import */ var _getAbiItem_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getAbiItem.js */ "./node_modules/viem/_esm/utils/abi/getAbiItem.js");




const docsPath = '/docs/contract/encodeFunctionData';
function prepareEncodeFunctionData(parameters) {
    const { abi, args, functionName } = parameters;
    let abiItem = abi[0];
    if (functionName) {
        const item = (0,_getAbiItem_js__WEBPACK_IMPORTED_MODULE_3__.getAbiItem)({
            abi,
            args,
            name: functionName,
        });
        if (!item)
            throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionNotFoundError(functionName, { docsPath });
        abiItem = item;
    }
    if (abiItem.type !== 'function')
        throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiFunctionNotFoundError(undefined, { docsPath });
    return {
        abi: [abiItem],
        functionName: (0,_hash_toFunctionSelector_js__WEBPACK_IMPORTED_MODULE_1__.toFunctionSelector)((0,_formatAbiItem_js__WEBPACK_IMPORTED_MODULE_2__.formatAbiItem)(abiItem)),
    };
}
//# sourceMappingURL=prepareEncodeFunctionData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/address/getAddress.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/address/getAddress.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checksumAddress: () => (/* binding */ checksumAddress),
/* harmony export */   getAddress: () => (/* binding */ getAddress)
/* harmony export */ });
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lru.js */ "./node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _isAddress_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");





const checksumAddressCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_3__.LruMap(8192);
function checksumAddress(address_, 
/**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */
chainId) {
    if (checksumAddressCache.has(`${address_}.${chainId}`))
        return checksumAddressCache.get(`${address_}.${chainId}`);
    const hexAddress = chainId
        ? `${chainId}${address_.toLowerCase()}`
        : address_.substring(2).toLowerCase();
    const hash = (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__.stringToBytes)(hexAddress), 'bytes');
    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');
    for (let i = 0; i < 40; i += 2) {
        if (hash[i >> 1] >> 4 >= 8 && address[i]) {
            address[i] = address[i].toUpperCase();
        }
        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {
            address[i + 1] = address[i + 1].toUpperCase();
        }
    }
    const result = `0x${address.join('')}`;
    checksumAddressCache.set(`${address_}.${chainId}`, result);
    return result;
}
function getAddress(address, 
/**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */
chainId) {
    if (!(0,_isAddress_js__WEBPACK_IMPORTED_MODULE_4__.isAddress)(address, { strict: false }))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address });
    return checksumAddress(address, chainId);
}
//# sourceMappingURL=getAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/address/getContractAddress.js":
/*!********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/address/getContractAddress.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getContractAddress: () => (/* binding */ getContractAddress),
/* harmony export */   getCreate2Address: () => (/* binding */ getCreate2Address),
/* harmony export */   getCreateAddress: () => (/* binding */ getCreateAddress)
/* harmony export */ });
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _data_isBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isBytes.js */ "./node_modules/viem/_esm/utils/data/isBytes.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encoding/toRlp.js */ "./node_modules/viem/_esm/utils/encoding/toRlp.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _getAddress_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");








function getContractAddress(opts) {
    if (opts.opcode === 'CREATE2')
        return getCreate2Address(opts);
    return getCreateAddress(opts);
}
function getCreateAddress(opts) {
    const from = (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__.toBytes)((0,_getAddress_js__WEBPACK_IMPORTED_MODULE_7__.getAddress)(opts.from));
    let nonce = (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__.toBytes)(opts.nonce);
    if (nonce[0] === 0)
        nonce = new Uint8Array([]);
    return (0,_getAddress_js__WEBPACK_IMPORTED_MODULE_7__.getAddress)(`0x${(0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_6__.keccak256)((0,_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_5__.toRlp)([from, nonce], 'bytes')).slice(26)}`);
}
function getCreate2Address(opts) {
    const from = (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__.toBytes)((0,_getAddress_js__WEBPACK_IMPORTED_MODULE_7__.getAddress)(opts.from));
    const salt = (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)((0,_data_isBytes_js__WEBPACK_IMPORTED_MODULE_1__.isBytes)(opts.salt) ? opts.salt : (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__.toBytes)(opts.salt), {
        size: 32,
    });
    const bytecodeHash = (() => {
        if ('bytecodeHash' in opts) {
            if ((0,_data_isBytes_js__WEBPACK_IMPORTED_MODULE_1__.isBytes)(opts.bytecodeHash))
                return opts.bytecodeHash;
            return (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__.toBytes)(opts.bytecodeHash);
        }
        return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_6__.keccak256)(opts.bytecode, 'bytes');
    })();
    return (0,_getAddress_js__WEBPACK_IMPORTED_MODULE_7__.getAddress)((0,_data_slice_js__WEBPACK_IMPORTED_MODULE_3__.slice)((0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_6__.keccak256)((0,_data_concat_js__WEBPACK_IMPORTED_MODULE_0__.concat)([(0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__.toBytes)('0xff'), from, salt, bytecodeHash])), 12));
}
//# sourceMappingURL=getContractAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/address/isAddress.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/address/isAddress.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAddress: () => (/* binding */ isAddress),
/* harmony export */   isAddressCache: () => (/* binding */ isAddressCache)
/* harmony export */ });
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lru.js */ "./node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _getAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");


const addressRegex = /^0x[a-fA-F0-9]{40}$/;
/** @internal */
const isAddressCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_0__.LruMap(8192);
function isAddress(address, options) {
    const { strict = true } = options ?? {};
    const cacheKey = `${address}.${strict}`;
    if (isAddressCache.has(cacheKey))
        return isAddressCache.get(cacheKey);
    const result = (() => {
        if (!addressRegex.test(address))
            return false;
        if (address.toLowerCase() === address)
            return true;
        if (strict)
            return (0,_getAddress_js__WEBPACK_IMPORTED_MODULE_1__.checksumAddress)(address) === address;
        return true;
    })();
    isAddressCache.set(cacheKey, result);
    return result;
}
//# sourceMappingURL=isAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/address/isAddressEqual.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/address/isAddressEqual.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAddressEqual: () => (/* binding */ isAddressEqual)
/* harmony export */ });
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _isAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");


function isAddressEqual(a, b) {
    if (!(0,_isAddress_js__WEBPACK_IMPORTED_MODULE_1__.isAddress)(a, { strict: false }))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address: a });
    if (!(0,_isAddress_js__WEBPACK_IMPORTED_MODULE_1__.isAddress)(b, { strict: false }))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address: b });
    return a.toLowerCase() === b.toLowerCase();
}
//# sourceMappingURL=isAddressEqual.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/authorization/hashAuthorization.js":
/*!*************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/authorization/hashAuthorization.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hashAuthorization: () => (/* binding */ hashAuthorization)
/* harmony export */ });
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toRlp.js */ "./node_modules/viem/_esm/utils/encoding/toRlp.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");





/**
 * Computes an Authorization hash in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.
 */
function hashAuthorization(parameters) {
    const { chainId, nonce, to } = parameters;
    const address = parameters.contractAddress ?? parameters.address;
    const hash = (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_4__.keccak256)((0,_data_concat_js__WEBPACK_IMPORTED_MODULE_0__.concatHex)([
        '0x05',
        (0,_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_3__.toRlp)([
            chainId ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(chainId) : '0x',
            address,
            nonce ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(nonce) : '0x',
        ]),
    ]));
    if (to === 'bytes')
        return (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(hash);
    return hash;
}
//# sourceMappingURL=hashAuthorization.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/authorization/recoverAuthorizationAddress.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/authorization/recoverAuthorizationAddress.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverAuthorizationAddress: () => (/* binding */ recoverAuthorizationAddress)
/* harmony export */ });
/* harmony import */ var _signature_recoverAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signature/recoverAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverAddress.js");
/* harmony import */ var _hashAuthorization_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashAuthorization.js */ "./node_modules/viem/_esm/utils/authorization/hashAuthorization.js");


async function recoverAuthorizationAddress(parameters) {
    const { authorization, signature } = parameters;
    return (0,_signature_recoverAddress_js__WEBPACK_IMPORTED_MODULE_0__.recoverAddress)({
        hash: (0,_hashAuthorization_js__WEBPACK_IMPORTED_MODULE_1__.hashAuthorization)(authorization),
        signature: (signature ?? authorization),
    });
}
//# sourceMappingURL=recoverAuthorizationAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/authorization/serializeAuthorizationList.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/authorization/serializeAuthorizationList.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serializeAuthorizationList: () => (/* binding */ serializeAuthorizationList)
/* harmony export */ });
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _transaction_serializeTransaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transaction/serializeTransaction.js */ "./node_modules/viem/_esm/utils/transaction/serializeTransaction.js");


/*
 * Serializes an EIP-7702 authorization list.
 */
function serializeAuthorizationList(authorizationList) {
    if (!authorizationList || authorizationList.length === 0)
        return [];
    const serializedAuthorizationList = [];
    for (const authorization of authorizationList) {
        const { chainId, nonce, ...signature } = authorization;
        const contractAddress = authorization.address;
        serializedAuthorizationList.push([
            chainId ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(chainId) : '0x',
            contractAddress,
            nonce ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(nonce) : '0x',
            ...(0,_transaction_serializeTransaction_js__WEBPACK_IMPORTED_MODULE_1__.toYParitySignatureArray)({}, signature),
        ]);
    }
    return serializedAuthorizationList;
}
//# sourceMappingURL=serializeAuthorizationList.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/blob/blobsToCommitments.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/blob/blobsToCommitments.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   blobsToCommitments: () => (/* binding */ blobsToCommitments)
/* harmony export */ });
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * Compute commitments from a list of blobs.
 *
 * @example
 * ```ts
 * import { blobsToCommitments, toBlobs } from 'viem'
 * import { kzg } from './kzg'
 *
 * const blobs = toBlobs({ data: '0x1234' })
 * const commitments = blobsToCommitments({ blobs, kzg })
 * ```
 */
function blobsToCommitments(parameters) {
    const { kzg } = parameters;
    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');
    const blobs = (typeof parameters.blobs[0] === 'string'
        ? parameters.blobs.map((x) => (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(x))
        : parameters.blobs);
    const commitments = [];
    for (const blob of blobs)
        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));
    return (to === 'bytes'
        ? commitments
        : commitments.map((x) => (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(x)));
}
//# sourceMappingURL=blobsToCommitments.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/blob/blobsToProofs.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/blob/blobsToProofs.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   blobsToProofs: () => (/* binding */ blobsToProofs)
/* harmony export */ });
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * Compute the proofs for a list of blobs and their commitments.
 *
 * @example
 * ```ts
 * import {
 *   blobsToCommitments,
 *   toBlobs
 * } from 'viem'
 * import { kzg } from './kzg'
 *
 * const blobs = toBlobs({ data: '0x1234' })
 * const commitments = blobsToCommitments({ blobs, kzg })
 * const proofs = blobsToProofs({ blobs, commitments, kzg })
 * ```
 */
function blobsToProofs(parameters) {
    const { kzg } = parameters;
    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');
    const blobs = (typeof parameters.blobs[0] === 'string'
        ? parameters.blobs.map((x) => (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(x))
        : parameters.blobs);
    const commitments = (typeof parameters.commitments[0] === 'string'
        ? parameters.commitments.map((x) => (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(x))
        : parameters.commitments);
    const proofs = [];
    for (let i = 0; i < blobs.length; i++) {
        const blob = blobs[i];
        const commitment = commitments[i];
        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));
    }
    return (to === 'bytes'
        ? proofs
        : proofs.map((x) => (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(x)));
}
//# sourceMappingURL=blobsToProofs.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js":
/*!************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   commitmentToVersionedHash: () => (/* binding */ commitmentToVersionedHash)
/* harmony export */ });
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _hash_sha256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hash/sha256.js */ "./node_modules/viem/_esm/utils/hash/sha256.js");


/**
 * Transform a commitment to it's versioned hash.
 *
 * @example
 * ```ts
 * import {
 *   blobsToCommitments,
 *   commitmentToVersionedHash,
 *   toBlobs
 * } from 'viem'
 * import { kzg } from './kzg'
 *
 * const blobs = toBlobs({ data: '0x1234' })
 * const [commitment] = blobsToCommitments({ blobs, kzg })
 * const versionedHash = commitmentToVersionedHash({ commitment })
 * ```
 */
function commitmentToVersionedHash(parameters) {
    const { commitment, version = 1 } = parameters;
    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');
    const versionedHash = (0,_hash_sha256_js__WEBPACK_IMPORTED_MODULE_1__.sha256)(commitment, 'bytes');
    versionedHash.set([version], 0);
    return (to === 'bytes' ? versionedHash : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(versionedHash));
}
//# sourceMappingURL=commitmentToVersionedHash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js":
/*!***************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   commitmentsToVersionedHashes: () => (/* binding */ commitmentsToVersionedHashes)
/* harmony export */ });
/* harmony import */ var _commitmentToVersionedHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commitmentToVersionedHash.js */ "./node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js");

/**
 * Transform a list of commitments to their versioned hashes.
 *
 * @example
 * ```ts
 * import {
 *   blobsToCommitments,
 *   commitmentsToVersionedHashes,
 *   toBlobs
 * } from 'viem'
 * import { kzg } from './kzg'
 *
 * const blobs = toBlobs({ data: '0x1234' })
 * const commitments = blobsToCommitments({ blobs, kzg })
 * const versionedHashes = commitmentsToVersionedHashes({ commitments })
 * ```
 */
function commitmentsToVersionedHashes(parameters) {
    const { commitments, version } = parameters;
    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');
    const hashes = [];
    for (const commitment of commitments) {
        hashes.push((0,_commitmentToVersionedHash_js__WEBPACK_IMPORTED_MODULE_0__.commitmentToVersionedHash)({
            commitment,
            to,
            version,
        }));
    }
    return hashes;
}
//# sourceMappingURL=commitmentsToVersionedHashes.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/blob/fromBlobs.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/blob/fromBlobs.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fromBlobs: () => (/* binding */ fromBlobs)
/* harmony export */ });
/* harmony import */ var _cursor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cursor.js */ "./node_modules/viem/_esm/utils/cursor.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");



function fromBlobs(parameters) {
    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');
    const blobs = (typeof parameters.blobs[0] === 'string'
        ? parameters.blobs.map((x) => (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(x))
        : parameters.blobs);
    const length = blobs.reduce((length, blob) => length + blob.length, 0);
    const data = (0,_cursor_js__WEBPACK_IMPORTED_MODULE_0__.createCursor)(new Uint8Array(length));
    let active = true;
    for (const blob of blobs) {
        const cursor = (0,_cursor_js__WEBPACK_IMPORTED_MODULE_0__.createCursor)(blob);
        while (active && cursor.position < blob.length) {
            // First byte will be a zero 0x00 byte – we can skip.
            cursor.incrementPosition(1);
            let consume = 31;
            if (blob.length - cursor.position < 31)
                consume = blob.length - cursor.position;
            for (const _ in Array.from({ length: consume })) {
                const byte = cursor.readByte();
                const isTerminator = byte === 0x80 && !cursor.inspectBytes(cursor.remaining).includes(0x80);
                if (isTerminator) {
                    active = false;
                    break;
                }
                data.pushByte(byte);
            }
        }
    }
    const trimmedData = data.bytes.slice(0, data.position);
    return (to === 'hex' ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(trimmedData) : trimmedData);
}
//# sourceMappingURL=fromBlobs.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/blob/sidecarsToVersionedHashes.js":
/*!************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/blob/sidecarsToVersionedHashes.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sidecarsToVersionedHashes: () => (/* binding */ sidecarsToVersionedHashes)
/* harmony export */ });
/* harmony import */ var _commitmentToVersionedHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commitmentToVersionedHash.js */ "./node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js");

/**
 * Transforms a list of sidecars to their versioned hashes.
 *
 * @example
 * ```ts
 * import { toBlobSidecars, sidecarsToVersionedHashes, stringToHex } from 'viem'
 *
 * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })
 * const versionedHashes = sidecarsToVersionedHashes({ sidecars })
 * ```
 */
function sidecarsToVersionedHashes(parameters) {
    const { sidecars, version } = parameters;
    const to = parameters.to ?? (typeof sidecars[0].blob === 'string' ? 'hex' : 'bytes');
    const hashes = [];
    for (const { commitment } of sidecars) {
        hashes.push((0,_commitmentToVersionedHash_js__WEBPACK_IMPORTED_MODULE_0__.commitmentToVersionedHash)({
            commitment,
            to,
            version,
        }));
    }
    return hashes;
}
//# sourceMappingURL=sidecarsToVersionedHashes.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/blob/toBlobSidecars.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/blob/toBlobSidecars.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toBlobSidecars: () => (/* binding */ toBlobSidecars)
/* harmony export */ });
/* harmony import */ var _blobsToCommitments_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blobsToCommitments.js */ "./node_modules/viem/_esm/utils/blob/blobsToCommitments.js");
/* harmony import */ var _blobsToProofs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blobsToProofs.js */ "./node_modules/viem/_esm/utils/blob/blobsToProofs.js");
/* harmony import */ var _toBlobs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toBlobs.js */ "./node_modules/viem/_esm/utils/blob/toBlobs.js");



/**
 * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.
 *
 * @example
 * ```ts
 * import { toBlobSidecars, stringToHex } from 'viem'
 *
 * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })
 * ```
 *
 * @example
 * ```ts
 * import {
 *   blobsToCommitments,
 *   toBlobs,
 *   blobsToProofs,
 *   toBlobSidecars,
 *   stringToHex
 * } from 'viem'
 *
 * const blobs = toBlobs({ data: stringToHex('hello world') })
 * const commitments = blobsToCommitments({ blobs, kzg })
 * const proofs = blobsToProofs({ blobs, commitments, kzg })
 *
 * const sidecars = toBlobSidecars({ blobs, commitments, proofs })
 * ```
 */
function toBlobSidecars(parameters) {
    const { data, kzg, to } = parameters;
    const blobs = parameters.blobs ?? (0,_toBlobs_js__WEBPACK_IMPORTED_MODULE_2__.toBlobs)({ data: data, to });
    const commitments = parameters.commitments ?? (0,_blobsToCommitments_js__WEBPACK_IMPORTED_MODULE_0__.blobsToCommitments)({ blobs, kzg: kzg, to });
    const proofs = parameters.proofs ?? (0,_blobsToProofs_js__WEBPACK_IMPORTED_MODULE_1__.blobsToProofs)({ blobs, commitments, kzg: kzg, to });
    const sidecars = [];
    for (let i = 0; i < blobs.length; i++)
        sidecars.push({
            blob: blobs[i],
            commitment: commitments[i],
            proof: proofs[i],
        });
    return sidecars;
}
//# sourceMappingURL=toBlobSidecars.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/blob/toBlobs.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/blob/toBlobs.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toBlobs: () => (/* binding */ toBlobs)
/* harmony export */ });
/* harmony import */ var _constants_blob_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/blob.js */ "./node_modules/viem/_esm/constants/blob.js");
/* harmony import */ var _errors_blob_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/blob.js */ "./node_modules/viem/_esm/errors/blob.js");
/* harmony import */ var _cursor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cursor.js */ "./node_modules/viem/_esm/utils/cursor.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");






/**
 * Transforms arbitrary data to blobs.
 *
 * @example
 * ```ts
 * import { toBlobs, stringToHex } from 'viem'
 *
 * const blobs = toBlobs({ data: stringToHex('hello world') })
 * ```
 */
function toBlobs(parameters) {
    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');
    const data = (typeof parameters.data === 'string'
        ? (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(parameters.data)
        : parameters.data);
    const size_ = (0,_data_size_js__WEBPACK_IMPORTED_MODULE_3__.size)(data);
    if (!size_)
        throw new _errors_blob_js__WEBPACK_IMPORTED_MODULE_1__.EmptyBlobError();
    if (size_ > _constants_blob_js__WEBPACK_IMPORTED_MODULE_0__.maxBytesPerTransaction)
        throw new _errors_blob_js__WEBPACK_IMPORTED_MODULE_1__.BlobSizeTooLargeError({
            maxSize: _constants_blob_js__WEBPACK_IMPORTED_MODULE_0__.maxBytesPerTransaction,
            size: size_,
        });
    const blobs = [];
    let active = true;
    let position = 0;
    while (active) {
        const blob = (0,_cursor_js__WEBPACK_IMPORTED_MODULE_2__.createCursor)(new Uint8Array(_constants_blob_js__WEBPACK_IMPORTED_MODULE_0__.bytesPerBlob));
        let size = 0;
        while (size < _constants_blob_js__WEBPACK_IMPORTED_MODULE_0__.fieldElementsPerBlob) {
            const bytes = data.slice(position, position + (_constants_blob_js__WEBPACK_IMPORTED_MODULE_0__.bytesPerFieldElement - 1));
            // Push a zero byte so the field element doesn't overflow the BLS modulus.
            blob.pushByte(0x00);
            // Push the current segment of data bytes.
            blob.pushBytes(bytes);
            // If we detect that the current segment of data bytes is less than 31 bytes,
            // we can stop processing and push a terminator byte to indicate the end of the blob.
            if (bytes.length < 31) {
                blob.pushByte(0x80);
                active = false;
                break;
            }
            size++;
            position += 31;
        }
        blobs.push(blob);
    }
    return (to === 'bytes'
        ? blobs.map((x) => x.bytes)
        : blobs.map((x) => (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(x.bytes)));
}
//# sourceMappingURL=toBlobs.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/buildRequest.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/buildRequest.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   buildRequest: () => (/* binding */ buildRequest),
/* harmony export */   shouldRetry: () => (/* binding */ shouldRetry)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors/rpc.js */ "./node_modules/viem/_esm/errors/rpc.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _promise_withDedupe_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./promise/withDedupe.js */ "./node_modules/viem/_esm/utils/promise/withDedupe.js");
/* harmony import */ var _promise_withRetry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./promise/withRetry.js */ "./node_modules/viem/_esm/utils/promise/withRetry.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");







function buildRequest(request, options = {}) {
    return async (args, overrideOptions = {}) => {
        const { dedupe = false, methods, retryDelay = 150, retryCount = 3, uid, } = {
            ...options,
            ...overrideOptions,
        };
        const { method } = args;
        if (methods?.exclude?.includes(method))
            throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.MethodNotSupportedRpcError(new Error('method not supported'), {
                method,
            });
        if (methods?.include && !methods.include.includes(method))
            throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.MethodNotSupportedRpcError(new Error('method not supported'), {
                method,
            });
        const requestId = dedupe
            ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.stringToHex)(`${uid}.${(0,_stringify_js__WEBPACK_IMPORTED_MODULE_6__.stringify)(args)}`)
            : undefined;
        return (0,_promise_withDedupe_js__WEBPACK_IMPORTED_MODULE_4__.withDedupe)(() => (0,_promise_withRetry_js__WEBPACK_IMPORTED_MODULE_5__.withRetry)(async () => {
            try {
                return await request(args);
            }
            catch (err_) {
                const err = err_;
                switch (err.code) {
                    // -32700
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ParseRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ParseRpcError(err);
                    // -32600
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InvalidRequestRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InvalidRequestRpcError(err);
                    // -32601
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.MethodNotFoundRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.MethodNotFoundRpcError(err, { method: args.method });
                    // -32602
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InvalidParamsRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InvalidParamsRpcError(err);
                    // -32603
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InternalRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InternalRpcError(err);
                    // -32000
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InvalidInputRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InvalidInputRpcError(err);
                    // -32001
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ResourceNotFoundRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ResourceNotFoundRpcError(err);
                    // -32002
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ResourceUnavailableRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ResourceUnavailableRpcError(err);
                    // -32003
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.TransactionRejectedRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.TransactionRejectedRpcError(err);
                    // -32004
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.MethodNotSupportedRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.MethodNotSupportedRpcError(err, {
                            method: args.method,
                        });
                    // -32005
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.LimitExceededRpcError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.LimitExceededRpcError(err);
                    // -32006
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.JsonRpcVersionUnsupportedError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.JsonRpcVersionUnsupportedError(err);
                    // 4001
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(err);
                    // 4100
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnauthorizedProviderError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnauthorizedProviderError(err);
                    // 4200
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnsupportedProviderMethodError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnsupportedProviderMethodError(err);
                    // 4900
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ProviderDisconnectedError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ProviderDisconnectedError(err);
                    // 4901
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ChainDisconnectedError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.ChainDisconnectedError(err);
                    // 4902
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(err);
                    // 5700
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnsupportedNonOptionalCapabilityError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnsupportedNonOptionalCapabilityError(err);
                    // 5710
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnsupportedChainIdError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnsupportedChainIdError(err);
                    // 5720
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.DuplicateIdError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.DuplicateIdError(err);
                    // 5730
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnknownBundleIdError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnknownBundleIdError(err);
                    // 5740
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.BundleTooLargeError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.BundleTooLargeError(err);
                    // 5750
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.AtomicReadyWalletRejectedUpgradeError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.AtomicReadyWalletRejectedUpgradeError(err);
                    // 5760
                    case _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.AtomicityNotSupportedError.code:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.AtomicityNotSupportedError(err);
                    // CAIP-25: User Rejected Error
                    // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25
                    case 5000:
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(err);
                    default:
                        if (err_ instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError)
                            throw err_;
                        throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.UnknownRpcError(err);
                }
            }
        }, {
            delay: ({ count, error }) => {
                // If we find a Retry-After header, let's retry after the given time.
                if (error && error instanceof _errors_request_js__WEBPACK_IMPORTED_MODULE_1__.HttpRequestError) {
                    const retryAfter = error?.headers?.get('Retry-After');
                    if (retryAfter?.match(/\d/))
                        return Number.parseInt(retryAfter) * 1000;
                }
                // Otherwise, let's retry with an exponential backoff.
                return ~~(1 << count) * retryDelay;
            },
            retryCount,
            shouldRetry: ({ error }) => shouldRetry(error),
        }), { enabled: dedupe, id: requestId });
    };
}
/** @internal */
function shouldRetry(error) {
    if ('code' in error && typeof error.code === 'number') {
        if (error.code === -1)
            return true; // Unknown error
        if (error.code === _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.LimitExceededRpcError.code)
            return true;
        if (error.code === _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.InternalRpcError.code)
            return true;
        return false;
    }
    if (error instanceof _errors_request_js__WEBPACK_IMPORTED_MODULE_1__.HttpRequestError && error.status) {
        // Forbidden
        if (error.status === 403)
            return true;
        // Request Timeout
        if (error.status === 408)
            return true;
        // Request Entity Too Large
        if (error.status === 413)
            return true;
        // Too Many Requests
        if (error.status === 429)
            return true;
        // Internal Server Error
        if (error.status === 500)
            return true;
        // Bad Gateway
        if (error.status === 502)
            return true;
        // Service Unavailable
        if (error.status === 503)
            return true;
        // Gateway Timeout
        if (error.status === 504)
            return true;
        return false;
    }
    return true;
}
//# sourceMappingURL=buildRequest.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ccip.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/utils/ccip.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ccipRequest: () => (/* binding */ ccipRequest),
/* harmony export */   offchainLookup: () => (/* binding */ offchainLookup),
/* harmony export */   offchainLookupAbiItem: () => (/* binding */ offchainLookupAbiItem),
/* harmony export */   offchainLookupSignature: () => (/* binding */ offchainLookupSignature)
/* harmony export */ });
/* harmony import */ var _actions_public_call_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/public/call.js */ "./node_modules/viem/_esm/actions/public/call.js");
/* harmony import */ var _errors_ccip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/ccip.js */ "./node_modules/viem/_esm/errors/ccip.js");
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _abi_decodeErrorResult_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./abi/decodeErrorResult.js */ "./node_modules/viem/_esm/utils/abi/decodeErrorResult.js");
/* harmony import */ var _abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./abi/encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");
/* harmony import */ var _address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _ens_localBatchGatewayRequest_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ens/localBatchGatewayRequest.js */ "./node_modules/viem/_esm/utils/ens/localBatchGatewayRequest.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");










const offchainLookupSignature = '0x556f1830';
const offchainLookupAbiItem = {
    name: 'OffchainLookup',
    type: 'error',
    inputs: [
        {
            name: 'sender',
            type: 'address',
        },
        {
            name: 'urls',
            type: 'string[]',
        },
        {
            name: 'callData',
            type: 'bytes',
        },
        {
            name: 'callbackFunction',
            type: 'bytes4',
        },
        {
            name: 'extraData',
            type: 'bytes',
        },
    ],
};
async function offchainLookup(client, { blockNumber, blockTag, data, to, }) {
    const { args } = (0,_abi_decodeErrorResult_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrorResult)({
        data,
        abi: [offchainLookupAbiItem],
    });
    const [sender, urls, callData, callbackSelector, extraData] = args;
    const { ccipRead } = client;
    const ccipRequest_ = ccipRead && typeof ccipRead?.request === 'function'
        ? ccipRead.request
        : ccipRequest;
    try {
        if (!(0,_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_5__.isAddressEqual)(to, sender))
            throw new _errors_ccip_js__WEBPACK_IMPORTED_MODULE_1__.OffchainLookupSenderMismatchError({ sender, to });
        const result = urls.includes(_ens_localBatchGatewayRequest_js__WEBPACK_IMPORTED_MODULE_8__.localBatchGatewayUrl)
            ? await (0,_ens_localBatchGatewayRequest_js__WEBPACK_IMPORTED_MODULE_8__.localBatchGatewayRequest)({
                data: callData,
                ccipRequest: ccipRequest_,
            })
            : await ccipRequest_({ data: callData, sender, urls });
        const { data: data_ } = await (0,_actions_public_call_js__WEBPACK_IMPORTED_MODULE_0__.call)(client, {
            blockNumber,
            blockTag,
            data: (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_6__.concat)([
                callbackSelector,
                (0,_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_4__.encodeAbiParameters)([{ type: 'bytes' }, { type: 'bytes' }], [result, extraData]),
            ]),
            to,
        });
        return data_;
    }
    catch (err) {
        throw new _errors_ccip_js__WEBPACK_IMPORTED_MODULE_1__.OffchainLookupError({
            callbackSelector,
            cause: err,
            data,
            extraData,
            sender,
            urls,
        });
    }
}
async function ccipRequest({ data, sender, urls, }) {
    let error = new Error('An unknown error occurred.');
    for (let i = 0; i < urls.length; i++) {
        const url = urls[i];
        const method = url.includes('{data}') ? 'GET' : 'POST';
        const body = method === 'POST' ? { data, sender } : undefined;
        const headers = method === 'POST' ? { 'Content-Type': 'application/json' } : {};
        try {
            const response = await fetch(url.replace('{sender}', sender.toLowerCase()).replace('{data}', data), {
                body: JSON.stringify(body),
                headers,
                method,
            });
            let result;
            if (response.headers.get('Content-Type')?.startsWith('application/json')) {
                result = (await response.json()).data;
            }
            else {
                result = (await response.text());
            }
            if (!response.ok) {
                error = new _errors_request_js__WEBPACK_IMPORTED_MODULE_2__.HttpRequestError({
                    body,
                    details: result?.error
                        ? (0,_stringify_js__WEBPACK_IMPORTED_MODULE_9__.stringify)(result.error)
                        : response.statusText,
                    headers: response.headers,
                    status: response.status,
                    url,
                });
                continue;
            }
            if (!(0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_7__.isHex)(result)) {
                error = new _errors_ccip_js__WEBPACK_IMPORTED_MODULE_1__.OffchainLookupResponseMalformedError({
                    result,
                    url,
                });
                continue;
            }
            return result;
        }
        catch (err) {
            error = new _errors_request_js__WEBPACK_IMPORTED_MODULE_2__.HttpRequestError({
                body,
                details: err.message,
                url,
            });
        }
    }
    throw error;
}
//# sourceMappingURL=ccip.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/chain/assertCurrentChain.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/chain/assertCurrentChain.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertCurrentChain: () => (/* binding */ assertCurrentChain)
/* harmony export */ });
/* harmony import */ var _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/chain.js */ "./node_modules/viem/_esm/errors/chain.js");

function assertCurrentChain({ chain, currentChainId, }) {
    if (!chain)
        throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__.ChainNotFoundError();
    if (currentChainId !== chain.id)
        throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__.ChainMismatchError({ chain, currentChainId });
}
//# sourceMappingURL=assertCurrentChain.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/chain/defineChain.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/chain/defineChain.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defineChain: () => (/* binding */ defineChain)
/* harmony export */ });
function defineChain(chain) {
    return {
        formatters: undefined,
        fees: undefined,
        serializers: undefined,
        ...chain,
    };
}
//# sourceMappingURL=defineChain.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/chain/extractChain.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/chain/extractChain.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   extractChain: () => (/* binding */ extractChain)
/* harmony export */ });
function extractChain({ chains, id, }) {
    return chains.find((chain) => chain.id === id);
}
//# sourceMappingURL=extractChain.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/chain/getChainContractAddress.js":
/*!***********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/chain/getChainContractAddress.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getChainContractAddress: () => (/* binding */ getChainContractAddress)
/* harmony export */ });
/* harmony import */ var _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/chain.js */ "./node_modules/viem/_esm/errors/chain.js");

function getChainContractAddress({ blockNumber, chain, contract: name, }) {
    const contract = chain?.contracts?.[name];
    if (!contract)
        throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__.ChainDoesNotSupportContract({
            chain,
            contract: { name },
        });
    if (blockNumber &&
        contract.blockCreated &&
        contract.blockCreated > blockNumber)
        throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__.ChainDoesNotSupportContract({
            blockNumber,
            chain,
            contract: {
                name,
                blockCreated: contract.blockCreated,
            },
        });
    return contract.address;
}
//# sourceMappingURL=getChainContractAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/cursor.js":
/*!************************************************!*\
  !*** ./node_modules/viem/_esm/utils/cursor.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createCursor: () => (/* binding */ createCursor)
/* harmony export */ });
/* harmony import */ var _errors_cursor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/cursor.js */ "./node_modules/viem/_esm/errors/cursor.js");

const staticCursor = {
    bytes: new Uint8Array(),
    dataView: new DataView(new ArrayBuffer(0)),
    position: 0,
    positionReadCount: new Map(),
    recursiveReadCount: 0,
    recursiveReadLimit: Number.POSITIVE_INFINITY,
    assertReadLimit() {
        if (this.recursiveReadCount >= this.recursiveReadLimit)
            throw new _errors_cursor_js__WEBPACK_IMPORTED_MODULE_0__.RecursiveReadLimitExceededError({
                count: this.recursiveReadCount + 1,
                limit: this.recursiveReadLimit,
            });
    },
    assertPosition(position) {
        if (position < 0 || position > this.bytes.length - 1)
            throw new _errors_cursor_js__WEBPACK_IMPORTED_MODULE_0__.PositionOutOfBoundsError({
                length: this.bytes.length,
                position,
            });
    },
    decrementPosition(offset) {
        if (offset < 0)
            throw new _errors_cursor_js__WEBPACK_IMPORTED_MODULE_0__.NegativeOffsetError({ offset });
        const position = this.position - offset;
        this.assertPosition(position);
        this.position = position;
    },
    getReadCount(position) {
        return this.positionReadCount.get(position || this.position) || 0;
    },
    incrementPosition(offset) {
        if (offset < 0)
            throw new _errors_cursor_js__WEBPACK_IMPORTED_MODULE_0__.NegativeOffsetError({ offset });
        const position = this.position + offset;
        this.assertPosition(position);
        this.position = position;
    },
    inspectByte(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position);
        return this.bytes[position];
    },
    inspectBytes(length, position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + length - 1);
        return this.bytes.subarray(position, position + length);
    },
    inspectUint8(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position);
        return this.bytes[position];
    },
    inspectUint16(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 1);
        return this.dataView.getUint16(position);
    },
    inspectUint24(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 2);
        return ((this.dataView.getUint16(position) << 8) +
            this.dataView.getUint8(position + 2));
    },
    inspectUint32(position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 3);
        return this.dataView.getUint32(position);
    },
    pushByte(byte) {
        this.assertPosition(this.position);
        this.bytes[this.position] = byte;
        this.position++;
    },
    pushBytes(bytes) {
        this.assertPosition(this.position + bytes.length - 1);
        this.bytes.set(bytes, this.position);
        this.position += bytes.length;
    },
    pushUint8(value) {
        this.assertPosition(this.position);
        this.bytes[this.position] = value;
        this.position++;
    },
    pushUint16(value) {
        this.assertPosition(this.position + 1);
        this.dataView.setUint16(this.position, value);
        this.position += 2;
    },
    pushUint24(value) {
        this.assertPosition(this.position + 2);
        this.dataView.setUint16(this.position, value >> 8);
        this.dataView.setUint8(this.position + 2, value & ~4294967040);
        this.position += 3;
    },
    pushUint32(value) {
        this.assertPosition(this.position + 3);
        this.dataView.setUint32(this.position, value);
        this.position += 4;
    },
    readByte() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectByte();
        this.position++;
        return value;
    },
    readBytes(length, size) {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectBytes(length);
        this.position += size ?? length;
        return value;
    },
    readUint8() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint8();
        this.position += 1;
        return value;
    },
    readUint16() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint16();
        this.position += 2;
        return value;
    },
    readUint24() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint24();
        this.position += 3;
        return value;
    },
    readUint32() {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint32();
        this.position += 4;
        return value;
    },
    get remaining() {
        return this.bytes.length - this.position;
    },
    setPosition(position) {
        const oldPosition = this.position;
        this.assertPosition(position);
        this.position = position;
        return () => (this.position = oldPosition);
    },
    _touch() {
        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)
            return;
        const count = this.getReadCount();
        this.positionReadCount.set(this.position, count + 1);
        if (count > 0)
            this.recursiveReadCount++;
    },
};
function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {
    const cursor = Object.create(staticCursor);
    cursor.bytes = bytes;
    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);
    cursor.positionReadCount = new Map();
    cursor.recursiveReadLimit = recursiveReadLimit;
    return cursor;
}
//# sourceMappingURL=cursor.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/data/isBytes.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/data/isBytes.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isBytes: () => (/* binding */ isBytes)
/* harmony export */ });
function isBytes(value) {
    if (!value)
        return false;
    if (typeof value !== 'object')
        return false;
    if (!('BYTES_PER_ELEMENT' in value))
        return false;
    return (value.BYTES_PER_ELEMENT === 1 && value.constructor.name === 'Uint8Array');
}
//# sourceMappingURL=isBytes.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/data/slice.js":
/*!****************************************************!*\
  !*** ./node_modules/viem/_esm/utils/data/slice.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   slice: () => (/* binding */ slice),
/* harmony export */   sliceBytes: () => (/* binding */ sliceBytes),
/* harmony export */   sliceHex: () => (/* binding */ sliceHex)
/* harmony export */ });
/* harmony import */ var _errors_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/data.js */ "./node_modules/viem/_esm/errors/data.js");
/* harmony import */ var _isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./size.js */ "./node_modules/viem/_esm/utils/data/size.js");



/**
 * @description Returns a section of the hex or byte array given a start/end bytes offset.
 *
 * @param value The hex or byte array to slice.
 * @param start The start offset (in bytes).
 * @param end The end offset (in bytes).
 */
function slice(value, start, end, { strict } = {}) {
    if ((0,_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value, { strict: false }))
        return sliceHex(value, start, end, {
            strict,
        });
    return sliceBytes(value, start, end, {
        strict,
    });
}
function assertStartOffset(value, start) {
    if (typeof start === 'number' && start > 0 && start > (0,_size_js__WEBPACK_IMPORTED_MODULE_2__.size)(value) - 1)
        throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_0__.SliceOffsetOutOfBoundsError({
            offset: start,
            position: 'start',
            size: (0,_size_js__WEBPACK_IMPORTED_MODULE_2__.size)(value),
        });
}
function assertEndOffset(value, start, end) {
    if (typeof start === 'number' &&
        typeof end === 'number' &&
        (0,_size_js__WEBPACK_IMPORTED_MODULE_2__.size)(value) !== end - start) {
        throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_0__.SliceOffsetOutOfBoundsError({
            offset: end,
            position: 'end',
            size: (0,_size_js__WEBPACK_IMPORTED_MODULE_2__.size)(value),
        });
    }
}
/**
 * @description Returns a section of the byte array given a start/end bytes offset.
 *
 * @param value The byte array to slice.
 * @param start The start offset (in bytes).
 * @param end The end offset (in bytes).
 */
function sliceBytes(value_, start, end, { strict } = {}) {
    assertStartOffset(value_, start);
    const value = value_.slice(start, end);
    if (strict)
        assertEndOffset(value, start, end);
    return value;
}
/**
 * @description Returns a section of the hex value given a start/end bytes offset.
 *
 * @param value The hex value to slice.
 * @param start The start offset (in bytes).
 * @param end The end offset (in bytes).
 */
function sliceHex(value_, start, end, { strict } = {}) {
    assertStartOffset(value_, start);
    const value = `0x${value_
        .replace('0x', '')
        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;
    if (strict)
        assertEndOffset(value, start, end);
    return value;
}
//# sourceMappingURL=slice.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/encoding/fromBytes.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/encoding/fromBytes.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bytesToBigInt: () => (/* binding */ bytesToBigInt),
/* harmony export */   bytesToBool: () => (/* binding */ bytesToBool),
/* harmony export */   bytesToNumber: () => (/* binding */ bytesToNumber),
/* harmony export */   bytesToString: () => (/* binding */ bytesToString),
/* harmony export */   fromBytes: () => (/* binding */ fromBytes)
/* harmony export */ });
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _data_trim_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/trim.js */ "./node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");




/**
 * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.
 *
 * - Docs: https://viem.sh/docs/utilities/fromBytes
 * - Example: https://viem.sh/docs/utilities/fromBytes#usage
 *
 * @param bytes Byte array to decode.
 * @param toOrOpts Type to convert to or options.
 * @returns Decoded value.
 *
 * @example
 * import { fromBytes } from 'viem'
 * const data = fromBytes(new Uint8Array([1, 164]), 'number')
 * // 420
 *
 * @example
 * import { fromBytes } from 'viem'
 * const data = fromBytes(
 *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),
 *   'string'
 * )
 * // 'Hello world'
 */
function fromBytes(bytes, toOrOpts) {
    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;
    const to = opts.to;
    if (to === 'number')
        return bytesToNumber(bytes, opts);
    if (to === 'bigint')
        return bytesToBigInt(bytes, opts);
    if (to === 'boolean')
        return bytesToBool(bytes, opts);
    if (to === 'string')
        return bytesToString(bytes, opts);
    return (0,_toHex_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(bytes, opts);
}
/**
 * Decodes a byte array into a bigint.
 *
 * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobigint
 *
 * @param bytes Byte array to decode.
 * @param opts Options.
 * @returns BigInt value.
 *
 * @example
 * import { bytesToBigInt } from 'viem'
 * const data = bytesToBigInt(new Uint8Array([1, 164]))
 * // 420n
 */
function bytesToBigInt(bytes, opts = {}) {
    if (typeof opts.size !== 'undefined')
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(bytes, { size: opts.size });
    const hex = (0,_toHex_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(bytes, opts);
    return (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(hex, opts);
}
/**
 * Decodes a byte array into a boolean.
 *
 * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobool
 *
 * @param bytes Byte array to decode.
 * @param opts Options.
 * @returns Boolean value.
 *
 * @example
 * import { bytesToBool } from 'viem'
 * const data = bytesToBool(new Uint8Array([1]))
 * // true
 */
function bytesToBool(bytes_, opts = {}) {
    let bytes = bytes_;
    if (typeof opts.size !== 'undefined') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(bytes, { size: opts.size });
        bytes = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_1__.trim)(bytes);
    }
    if (bytes.length > 1 || bytes[0] > 1)
        throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.InvalidBytesBooleanError(bytes);
    return Boolean(bytes[0]);
}
/**
 * Decodes a byte array into a number.
 *
 * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestonumber
 *
 * @param bytes Byte array to decode.
 * @param opts Options.
 * @returns Number value.
 *
 * @example
 * import { bytesToNumber } from 'viem'
 * const data = bytesToNumber(new Uint8Array([1, 164]))
 * // 420
 */
function bytesToNumber(bytes, opts = {}) {
    if (typeof opts.size !== 'undefined')
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(bytes, { size: opts.size });
    const hex = (0,_toHex_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(bytes, opts);
    return (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(hex, opts);
}
/**
 * Decodes a byte array into a UTF-8 string.
 *
 * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestostring
 *
 * @param bytes Byte array to decode.
 * @param opts Options.
 * @returns String value.
 *
 * @example
 * import { bytesToString } from 'viem'
 * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))
 * // 'Hello world'
 */
function bytesToString(bytes_, opts = {}) {
    let bytes = bytes_;
    if (typeof opts.size !== 'undefined') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(bytes, { size: opts.size });
        bytes = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_1__.trim)(bytes, { dir: 'right' });
    }
    return new TextDecoder().decode(bytes);
}
//# sourceMappingURL=fromBytes.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/encoding/fromRlp.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/encoding/fromRlp.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fromRlp: () => (/* binding */ fromRlp)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _cursor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cursor.js */ "./node_modules/viem/_esm/utils/cursor.js");
/* harmony import */ var _toBytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");





function fromRlp(value, to = 'hex') {
    const bytes = (() => {
        if (typeof value === 'string') {
            if (value.length > 3 && value.length % 2 !== 0)
                throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_1__.InvalidHexValueError(value);
            return (0,_toBytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(value);
        }
        return value;
    })();
    const cursor = (0,_cursor_js__WEBPACK_IMPORTED_MODULE_2__.createCursor)(bytes, {
        recursiveReadLimit: Number.POSITIVE_INFINITY,
    });
    const result = fromRlpCursor(cursor, to);
    return result;
}
function fromRlpCursor(cursor, to = 'hex') {
    if (cursor.bytes.length === 0)
        return (to === 'hex' ? (0,_toHex_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(cursor.bytes) : cursor.bytes);
    const prefix = cursor.readByte();
    if (prefix < 0x80)
        cursor.decrementPosition(1);
    // bytes
    if (prefix < 0xc0) {
        const length = readLength(cursor, prefix, 0x80);
        const bytes = cursor.readBytes(length);
        return (to === 'hex' ? (0,_toHex_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(bytes) : bytes);
    }
    // list
    const length = readLength(cursor, prefix, 0xc0);
    return readList(cursor, length, to);
}
function readLength(cursor, prefix, offset) {
    if (offset === 0x80 && prefix < 0x80)
        return 1;
    if (prefix <= offset + 55)
        return prefix - offset;
    if (prefix === offset + 55 + 1)
        return cursor.readUint8();
    if (prefix === offset + 55 + 2)
        return cursor.readUint16();
    if (prefix === offset + 55 + 3)
        return cursor.readUint24();
    if (prefix === offset + 55 + 4)
        return cursor.readUint32();
    throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError('Invalid RLP prefix');
}
function readList(cursor, length, to) {
    const position = cursor.position;
    const value = [];
    while (cursor.position - position < length)
        value.push(fromRlpCursor(cursor, to));
    return value;
}
//# sourceMappingURL=fromRlp.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/encoding/toRlp.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/encoding/toRlp.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bytesToRlp: () => (/* binding */ bytesToRlp),
/* harmony export */   hexToRlp: () => (/* binding */ hexToRlp),
/* harmony export */   toRlp: () => (/* binding */ toRlp)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _cursor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cursor.js */ "./node_modules/viem/_esm/utils/cursor.js");
/* harmony import */ var _toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");




function toRlp(bytes, to = 'hex') {
    const encodable = getEncodable(bytes);
    const cursor = (0,_cursor_js__WEBPACK_IMPORTED_MODULE_1__.createCursor)(new Uint8Array(encodable.length));
    encodable.encode(cursor);
    if (to === 'hex')
        return (0,_toHex_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(cursor.bytes);
    return cursor.bytes;
}
function bytesToRlp(bytes, to = 'bytes') {
    return toRlp(bytes, to);
}
function hexToRlp(hex, to = 'hex') {
    return toRlp(hex, to);
}
function getEncodable(bytes) {
    if (Array.isArray(bytes))
        return getEncodableList(bytes.map((x) => getEncodable(x)));
    return getEncodableBytes(bytes);
}
function getEncodableList(list) {
    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);
    const sizeOfBodyLength = getSizeOfLength(bodyLength);
    const length = (() => {
        if (bodyLength <= 55)
            return 1 + bodyLength;
        return 1 + sizeOfBodyLength + bodyLength;
    })();
    return {
        length,
        encode(cursor) {
            if (bodyLength <= 55) {
                cursor.pushByte(0xc0 + bodyLength);
            }
            else {
                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);
                if (sizeOfBodyLength === 1)
                    cursor.pushUint8(bodyLength);
                else if (sizeOfBodyLength === 2)
                    cursor.pushUint16(bodyLength);
                else if (sizeOfBodyLength === 3)
                    cursor.pushUint24(bodyLength);
                else
                    cursor.pushUint32(bodyLength);
            }
            for (const { encode } of list) {
                encode(cursor);
            }
        },
    };
}
function getEncodableBytes(bytesOrHex) {
    const bytes = typeof bytesOrHex === 'string' ? (0,_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(bytesOrHex) : bytesOrHex;
    const sizeOfBytesLength = getSizeOfLength(bytes.length);
    const length = (() => {
        if (bytes.length === 1 && bytes[0] < 0x80)
            return 1;
        if (bytes.length <= 55)
            return 1 + bytes.length;
        return 1 + sizeOfBytesLength + bytes.length;
    })();
    return {
        length,
        encode(cursor) {
            if (bytes.length === 1 && bytes[0] < 0x80) {
                cursor.pushBytes(bytes);
            }
            else if (bytes.length <= 55) {
                cursor.pushByte(0x80 + bytes.length);
                cursor.pushBytes(bytes);
            }
            else {
                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);
                if (sizeOfBytesLength === 1)
                    cursor.pushUint8(bytes.length);
                else if (sizeOfBytesLength === 2)
                    cursor.pushUint16(bytes.length);
                else if (sizeOfBytesLength === 3)
                    cursor.pushUint24(bytes.length);
                else
                    cursor.pushUint32(bytes.length);
                cursor.pushBytes(bytes);
            }
        },
    };
}
function getSizeOfLength(length) {
    if (length < 2 ** 8)
        return 1;
    if (length < 2 ** 16)
        return 2;
    if (length < 2 ** 24)
        return 3;
    if (length < 2 ** 32)
        return 4;
    throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError('Length is too large.');
}
//# sourceMappingURL=toRlp.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/avatar/parseAvatarRecord.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/avatar/parseAvatarRecord.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAvatarRecord: () => (/* binding */ parseAvatarRecord)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./node_modules/viem/_esm/utils/ens/avatar/utils.js");

/*
 * @description Parses an ENS avatar record.
 *
 * @example
 * parseAvatarRecord('eip155:1/erc1155:0xb32979486938aa9694bfc898f35dbed459f44424/10063')
 * 'https://ipfs.io/ipfs/QmSP4nq9fnN9dAiCj42ug9Wa79rqmQerZXZch82VqpiH7U/image.gif'
 *
 * @see https://docs.ens.domains/web/avatars
 *
 */
async function parseAvatarRecord(client, { gatewayUrls, record, }) {
    if (/eip155:/i.test(record))
        return parseNftAvatarUri(client, { gatewayUrls, record });
    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseAvatarUri)({ uri: record, gatewayUrls });
}
async function parseNftAvatarUri(client, { gatewayUrls, record, }) {
    // parse NFT URI into properties
    const nft = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseNftUri)(record);
    // fetch tokenURI from the NFT contract
    const nftUri = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNftTokenUri)(client, { nft });
    // resolve the URI from the fetched tokenURI
    const { uri: resolvedNftUri, isOnChain, isEncoded, } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.resolveAvatarUri)({ uri: nftUri, gatewayUrls });
    // if the resolved URI is on chain, return the data
    if (isOnChain &&
        (resolvedNftUri.includes('data:application/json;base64,') ||
            resolvedNftUri.startsWith('{'))) {
        const encodedJson = isEncoded
            ? // if it is encoded, decode it
                atob(resolvedNftUri.replace('data:application/json;base64,', ''))
            : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)
                resolvedNftUri;
        const decoded = JSON.parse(encodedJson);
        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseAvatarUri)({ uri: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getJsonImage)(decoded), gatewayUrls });
    }
    let uriTokenId = nft.tokenID;
    if (nft.namespace === 'erc1155')
        uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0');
    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getMetadataAvatarUri)({
        gatewayUrls,
        uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),
    });
}
//# sourceMappingURL=parseAvatarRecord.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/avatar/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/avatar/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getGateway: () => (/* binding */ getGateway),
/* harmony export */   getJsonImage: () => (/* binding */ getJsonImage),
/* harmony export */   getMetadataAvatarUri: () => (/* binding */ getMetadataAvatarUri),
/* harmony export */   getNftTokenUri: () => (/* binding */ getNftTokenUri),
/* harmony export */   isImageUri: () => (/* binding */ isImageUri),
/* harmony export */   parseAvatarUri: () => (/* binding */ parseAvatarUri),
/* harmony export */   parseNftUri: () => (/* binding */ parseNftUri),
/* harmony export */   resolveAvatarUri: () => (/* binding */ resolveAvatarUri)
/* harmony export */ });
/* harmony import */ var _actions_public_readContract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../actions/public/readContract.js */ "./node_modules/viem/_esm/actions/public/readContract.js");
/* harmony import */ var _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../errors/ens.js */ "./node_modules/viem/_esm/errors/ens.js");


const networkRegex = /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/;
const ipfsHashRegex = /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/;
const base64Regex = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/;
const dataURIRegex = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
/** @internal */
async function isImageUri(uri) {
    try {
        const res = await fetch(uri, { method: 'HEAD' });
        // retrieve content type header to check if content is image
        if (res.status === 200) {
            const contentType = res.headers.get('content-type');
            return contentType?.startsWith('image/');
        }
        return false;
    }
    catch (error) {
        // if error is not cors related then fail
        if (typeof error === 'object' && typeof error.response !== 'undefined') {
            return false;
        }
        // fail in NodeJS, since the error is not cors but any other network issue
        // biome-ignore lint/suspicious/noPrototypeBuiltins:
        if (!globalThis.hasOwnProperty('Image'))
            return false;
        // in case of cors, use image api to validate if given url is an actual image
        return new Promise((resolve) => {
            const img = new Image();
            img.onload = () => {
                resolve(true);
            };
            img.onerror = () => {
                resolve(false);
            };
            img.src = uri;
        });
    }
}
/** @internal */
function getGateway(custom, defaultGateway) {
    if (!custom)
        return defaultGateway;
    if (custom.endsWith('/'))
        return custom.slice(0, -1);
    return custom;
}
function resolveAvatarUri({ uri, gatewayUrls, }) {
    const isEncoded = base64Regex.test(uri);
    if (isEncoded)
        return { uri, isOnChain: true, isEncoded };
    const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io');
    const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net');
    const networkRegexMatch = uri.match(networkRegex);
    const { protocol, subpath, target, subtarget = '', } = networkRegexMatch?.groups || {};
    const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/';
    const isIPFS = protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri);
    if (uri.startsWith('http') && !isIPNS && !isIPFS) {
        let replacedUri = uri;
        if (gatewayUrls?.arweave)
            replacedUri = uri.replace(/https:\/\/arweave.net/g, gatewayUrls?.arweave);
        return { uri: replacedUri, isOnChain: false, isEncoded: false };
    }
    if ((isIPNS || isIPFS) && target) {
        return {
            uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,
            isOnChain: false,
            isEncoded: false,
        };
    }
    if (protocol === 'ar:/' && target) {
        return {
            uri: `${arweaveGateway}/${target}${subtarget || ''}`,
            isOnChain: false,
            isEncoded: false,
        };
    }
    let parsedUri = uri.replace(dataURIRegex, '');
    if (parsedUri.startsWith('<svg')) {
        // if svg, base64 encode
        parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`;
    }
    if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {
        return {
            uri: parsedUri,
            isOnChain: true,
            isEncoded: false,
        };
    }
    throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarUriResolutionError({ uri });
}
function getJsonImage(data) {
    // validation check for json data, must include one of theses properties
    if (typeof data !== 'object' ||
        (!('image' in data) && !('image_url' in data) && !('image_data' in data))) {
        throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarInvalidMetadataError({ data });
    }
    return data.image || data.image_url || data.image_data;
}
async function getMetadataAvatarUri({ gatewayUrls, uri, }) {
    try {
        const res = await fetch(uri).then((res) => res.json());
        const image = await parseAvatarUri({
            gatewayUrls,
            uri: getJsonImage(res),
        });
        return image;
    }
    catch {
        throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarUriResolutionError({ uri });
    }
}
async function parseAvatarUri({ gatewayUrls, uri, }) {
    const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls });
    if (isOnChain)
        return resolvedURI;
    // check if resolvedURI is an image, if it is return the url
    const isImage = await isImageUri(resolvedURI);
    if (isImage)
        return resolvedURI;
    throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarUriResolutionError({ uri });
}
function parseNftUri(uri_) {
    let uri = uri_;
    // parse valid nft spec (CAIP-22/CAIP-29)
    // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs
    if (uri.startsWith('did:nft:')) {
        // convert DID to CAIP
        uri = uri.replace('did:nft:', '').replace(/_/g, '/');
    }
    const [reference, asset_namespace, tokenID] = uri.split('/');
    const [eip_namespace, chainID] = reference.split(':');
    const [erc_namespace, contractAddress] = asset_namespace.split(':');
    if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')
        throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' });
    if (!chainID)
        throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' });
    if (!contractAddress)
        throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarInvalidNftUriError({
            reason: 'Contract address not found',
        });
    if (!tokenID)
        throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' });
    if (!erc_namespace)
        throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' });
    return {
        chainID: Number.parseInt(chainID),
        namespace: erc_namespace.toLowerCase(),
        contractAddress: contractAddress,
        tokenID,
    };
}
async function getNftTokenUri(client, { nft }) {
    if (nft.namespace === 'erc721') {
        return (0,_actions_public_readContract_js__WEBPACK_IMPORTED_MODULE_0__.readContract)(client, {
            address: nft.contractAddress,
            abi: [
                {
                    name: 'tokenURI',
                    type: 'function',
                    stateMutability: 'view',
                    inputs: [{ name: 'tokenId', type: 'uint256' }],
                    outputs: [{ name: '', type: 'string' }],
                },
            ],
            functionName: 'tokenURI',
            args: [BigInt(nft.tokenID)],
        });
    }
    if (nft.namespace === 'erc1155') {
        return (0,_actions_public_readContract_js__WEBPACK_IMPORTED_MODULE_0__.readContract)(client, {
            address: nft.contractAddress,
            abi: [
                {
                    name: 'uri',
                    type: 'function',
                    stateMutability: 'view',
                    inputs: [{ name: '_id', type: 'uint256' }],
                    outputs: [{ name: '', type: 'string' }],
                },
            ],
            functionName: 'uri',
            args: [BigInt(nft.tokenID)],
        });
    }
    throw new _errors_ens_js__WEBPACK_IMPORTED_MODULE_1__.EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace });
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/encodeLabelhash.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/encodeLabelhash.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeLabelhash: () => (/* binding */ encodeLabelhash)
/* harmony export */ });
function encodeLabelhash(hash) {
    return `[${hash.slice(2)}]`;
}
//# sourceMappingURL=encodeLabelhash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/encodedLabelToLabelhash.js":
/*!*********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/encodedLabelToLabelhash.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodedLabelToLabelhash: () => (/* binding */ encodedLabelToLabelhash)
/* harmony export */ });
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");

function encodedLabelToLabelhash(label) {
    if (label.length !== 66)
        return null;
    if (label.indexOf('[') !== 0)
        return null;
    if (label.indexOf(']') !== 65)
        return null;
    const hash = `0x${label.slice(1, 65)}`;
    if (!(0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(hash))
        return null;
    return hash;
}
//# sourceMappingURL=encodedLabelToLabelhash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/errors.js":
/*!****************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/errors.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isNullUniversalResolverError: () => (/* binding */ isNullUniversalResolverError)
/* harmony export */ });
/* harmony import */ var _constants_solidity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/solidity.js */ "./node_modules/viem/_esm/constants/solidity.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/contract.js */ "./node_modules/viem/_esm/errors/contract.js");



/*
 * @description Checks if error is a valid null result UniversalResolver error
 */
function isNullUniversalResolverError(err, callType) {
    if (!(err instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError))
        return false;
    const cause = err.walk((e) => e instanceof _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__.ContractFunctionRevertedError);
    if (!(cause instanceof _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__.ContractFunctionRevertedError))
        return false;
    if (cause.data?.errorName === 'ResolverNotFound')
        return true;
    if (cause.data?.errorName === 'ResolverWildcardNotSupported')
        return true;
    if (cause.data?.errorName === 'ResolverNotContract')
        return true;
    if (cause.data?.errorName === 'ResolverError')
        return true;
    if (cause.data?.errorName === 'HttpError')
        return true;
    // Backwards compatibility for older UniversalResolver contracts
    if (cause.reason?.includes('Wildcard on non-extended resolvers is not supported'))
        return true;
    // No primary name set for address.
    if (callType === 'reverse' && cause.reason === _constants_solidity_js__WEBPACK_IMPORTED_MODULE_0__.panicReasons[50])
        return true;
    return false;
}
//# sourceMappingURL=errors.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/labelhash.js":
/*!*******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/labelhash.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   labelhash: () => (/* binding */ labelhash)
/* harmony export */ });
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _encodedLabelToLabelhash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encodedLabelToLabelhash.js */ "./node_modules/viem/_esm/utils/ens/encodedLabelToLabelhash.js");




/**
 * @description Hashes ENS label
 *
 * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.
 *
 * @example
 * labelhash('eth')
 * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'
 */
function labelhash(label) {
    const result = new Uint8Array(32).fill(0);
    if (!label)
        return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(result);
    return (0,_encodedLabelToLabelhash_js__WEBPACK_IMPORTED_MODULE_3__.encodedLabelToLabelhash)(label) || (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(label));
}
//# sourceMappingURL=labelhash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/localBatchGatewayRequest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/localBatchGatewayRequest.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   localBatchGatewayRequest: () => (/* binding */ localBatchGatewayRequest),
/* harmony export */   localBatchGatewayUrl: () => (/* binding */ localBatchGatewayUrl)
/* harmony export */ });
/* harmony import */ var _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/abis.js */ "./node_modules/viem/_esm/constants/abis.js");
/* harmony import */ var _constants_solidity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/solidity.js */ "./node_modules/viem/_esm/constants/solidity.js");
/* harmony import */ var _abi_decodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../abi/decodeFunctionData.js */ "./node_modules/viem/_esm/utils/abi/decodeFunctionData.js");
/* harmony import */ var _abi_encodeErrorResult_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../abi/encodeErrorResult.js */ "./node_modules/viem/_esm/utils/abi/encodeErrorResult.js");
/* harmony import */ var _abi_encodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../abi/encodeFunctionResult.js */ "./node_modules/viem/_esm/utils/abi/encodeFunctionResult.js");





const localBatchGatewayUrl = 'x-batch-gateway:true';
async function localBatchGatewayRequest(parameters) {
    const { data, ccipRequest } = parameters;
    const { args: [queries], } = (0,_abi_decodeFunctionData_js__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionData)({ abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.batchGatewayAbi, data });
    const failures = [];
    const responses = [];
    await Promise.all(queries.map(async (query, i) => {
        try {
            responses[i] = query.urls.includes(localBatchGatewayUrl)
                ? await localBatchGatewayRequest({ data: query.data, ccipRequest })
                : await ccipRequest(query);
            failures[i] = false;
        }
        catch (err) {
            failures[i] = true;
            responses[i] = encodeError(err);
        }
    }));
    return (0,_abi_encodeFunctionResult_js__WEBPACK_IMPORTED_MODULE_4__.encodeFunctionResult)({
        abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.batchGatewayAbi,
        functionName: 'query',
        result: [failures, responses],
    });
}
function encodeError(error) {
    if (error.name === 'HttpRequestError' && error.status)
        return (0,_abi_encodeErrorResult_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrorResult)({
            abi: _constants_abis_js__WEBPACK_IMPORTED_MODULE_0__.batchGatewayAbi,
            errorName: 'HttpError',
            args: [error.status, error.shortMessage],
        });
    return (0,_abi_encodeErrorResult_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrorResult)({
        abi: [_constants_solidity_js__WEBPACK_IMPORTED_MODULE_1__.solidityError],
        errorName: 'Error',
        args: ['shortMessage' in error ? error.shortMessage : error.message],
    });
}
//# sourceMappingURL=localBatchGatewayRequest.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/namehash.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/namehash.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   namehash: () => (/* binding */ namehash)
/* harmony export */ });
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _encodedLabelToLabelhash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encodedLabelToLabelhash.js */ "./node_modules/viem/_esm/utils/ens/encodedLabelToLabelhash.js");





/**
 * @description Hashes ENS name
 *
 * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.
 *
 * @example
 * namehash('wevm.eth')
 * '0x08c85f2f4059e930c45a6aeff9dcd3bd95dc3c5c1cddef6a0626b31152248560'
 *
 * @link https://eips.ethereum.org/EIPS/eip-137
 */
function namehash(name) {
    let result = new Uint8Array(32).fill(0);
    if (!name)
        return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(result);
    const labels = name.split('.');
    // Iterate in reverse order building up hash
    for (let i = labels.length - 1; i >= 0; i -= 1) {
        const hashFromEncodedLabel = (0,_encodedLabelToLabelhash_js__WEBPACK_IMPORTED_MODULE_4__.encodedLabelToLabelhash)(labels[i]);
        const hashed = hashFromEncodedLabel
            ? (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(hashFromEncodedLabel)
            : (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__.stringToBytes)(labels[i]), 'bytes');
        result = (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_data_concat_js__WEBPACK_IMPORTED_MODULE_0__.concat)([result, hashed]), 'bytes');
    }
    return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(result);
}
//# sourceMappingURL=namehash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/ens/packetToBytes.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/ens/packetToBytes.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   packetToBytes: () => (/* binding */ packetToBytes)
/* harmony export */ });
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encodeLabelhash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encodeLabelhash.js */ "./node_modules/viem/_esm/utils/ens/encodeLabelhash.js");
/* harmony import */ var _labelhash_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./labelhash.js */ "./node_modules/viem/_esm/utils/ens/labelhash.js");



/*
 * @description Encodes a DNS packet into a ByteArray containing a UDP payload.
 *
 * @example
 * packetToBytes('awkweb.eth')
 * '0x0661776b7765620365746800'
 *
 * @see https://docs.ens.domains/resolution/names#dns
 *
 */
function packetToBytes(packet) {
    // strip leading and trailing `.`
    const value = packet.replace(/^\.|\.$/gm, '');
    if (value.length === 0)
        return new Uint8Array(1);
    const bytes = new Uint8Array((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(value).byteLength + 2);
    let offset = 0;
    const list = value.split('.');
    for (let i = 0; i < list.length; i++) {
        let encoded = (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(list[i]);
        // if the length is > 255, make the encoded label value a labelhash
        // this is compatible with the universal resolver
        if (encoded.byteLength > 255)
            encoded = (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)((0,_encodeLabelhash_js__WEBPACK_IMPORTED_MODULE_1__.encodeLabelhash)((0,_labelhash_js__WEBPACK_IMPORTED_MODULE_2__.labelhash)(list[i])));
        bytes[offset] = encoded.length;
        bytes.set(encoded, offset + 1);
        offset += encoded.length + 1;
    }
    if (bytes.byteLength !== offset + 1)
        return bytes.slice(0, offset + 1);
    return bytes;
}
//# sourceMappingURL=packetToBytes.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/errors/getCallError.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/errors/getCallError.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getCallError: () => (/* binding */ getCallError)
/* harmony export */ });
/* harmony import */ var _errors_contract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/contract.js */ "./node_modules/viem/_esm/errors/contract.js");
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _getNodeError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getNodeError.js */ "./node_modules/viem/_esm/utils/errors/getNodeError.js");



function getCallError(err, { docsPath, ...args }) {
    const cause = (() => {
        const cause = (0,_getNodeError_js__WEBPACK_IMPORTED_MODULE_2__.getNodeError)(err, args);
        if (cause instanceof _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.UnknownNodeError)
            return err;
        return cause;
    })();
    return new _errors_contract_js__WEBPACK_IMPORTED_MODULE_0__.CallExecutionError(cause, {
        docsPath,
        ...args,
    });
}
//# sourceMappingURL=getCallError.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/errors/getContractError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/errors/getContractError.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getContractError: () => (/* binding */ getContractError)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/contract.js */ "./node_modules/viem/_esm/errors/contract.js");
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _errors_rpc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../errors/rpc.js */ "./node_modules/viem/_esm/errors/rpc.js");





const EXECUTION_REVERTED_ERROR_CODE = 3;
function getContractError(err, { abi, address, args, docsPath, functionName, sender, }) {
    const error = (err instanceof _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__.RawContractError
        ? err
        : err instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseError
            ? err.walk((err) => 'data' in err) || err.walk()
            : {});
    const { code, data, details, message, shortMessage } = error;
    const cause = (() => {
        if (err instanceof _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiDecodingZeroDataError)
            return new _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__.ContractFunctionZeroDataError({ functionName });
        if ([EXECUTION_REVERTED_ERROR_CODE, _errors_rpc_js__WEBPACK_IMPORTED_MODULE_4__.InternalRpcError.code].includes(code) &&
            (data || details || message || shortMessage)) {
            return new _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__.ContractFunctionRevertedError({
                abi,
                data: typeof data === 'object' ? data.data : data,
                functionName,
                message: error instanceof _errors_request_js__WEBPACK_IMPORTED_MODULE_3__.RpcRequestError
                    ? details
                    : (shortMessage ?? message),
            });
        }
        return err;
    })();
    return new _errors_contract_js__WEBPACK_IMPORTED_MODULE_2__.ContractFunctionExecutionError(cause, {
        abi,
        args,
        contractAddress: address,
        docsPath,
        functionName,
        sender,
    });
}
//# sourceMappingURL=getContractError.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/errors/getEstimateGasError.js":
/*!********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/errors/getEstimateGasError.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEstimateGasError: () => (/* binding */ getEstimateGasError)
/* harmony export */ });
/* harmony import */ var _errors_estimateGas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/estimateGas.js */ "./node_modules/viem/_esm/errors/estimateGas.js");
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _getNodeError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getNodeError.js */ "./node_modules/viem/_esm/utils/errors/getNodeError.js");



function getEstimateGasError(err, { docsPath, ...args }) {
    const cause = (() => {
        const cause = (0,_getNodeError_js__WEBPACK_IMPORTED_MODULE_2__.getNodeError)(err, args);
        if (cause instanceof _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.UnknownNodeError)
            return err;
        return cause;
    })();
    return new _errors_estimateGas_js__WEBPACK_IMPORTED_MODULE_0__.EstimateGasExecutionError(cause, {
        docsPath,
        ...args,
    });
}
//# sourceMappingURL=getEstimateGasError.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/errors/getNodeError.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/errors/getNodeError.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   containsNodeError: () => (/* binding */ containsNodeError),
/* harmony export */   getNodeError: () => (/* binding */ getNodeError)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _errors_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/rpc.js */ "./node_modules/viem/_esm/errors/rpc.js");




function containsNodeError(err) {
    return (err instanceof _errors_rpc_js__WEBPACK_IMPORTED_MODULE_3__.TransactionRejectedRpcError ||
        err instanceof _errors_rpc_js__WEBPACK_IMPORTED_MODULE_3__.InvalidInputRpcError ||
        (err instanceof _errors_request_js__WEBPACK_IMPORTED_MODULE_2__.RpcRequestError && err.code === _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.ExecutionRevertedError.code));
}
function getNodeError(err, args) {
    const message = (err.details || '').toLowerCase();
    const executionRevertedError = err instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError
        ? err.walk((e) => e?.code ===
            _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.ExecutionRevertedError.code)
        : err;
    if (executionRevertedError instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError)
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.ExecutionRevertedError({
            cause: err,
            message: executionRevertedError.details,
        });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.ExecutionRevertedError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.ExecutionRevertedError({
            cause: err,
            message: err.details,
        });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.FeeCapTooHighError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.FeeCapTooHighError({
            cause: err,
            maxFeePerGas: args?.maxFeePerGas,
        });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.FeeCapTooLowError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.FeeCapTooLowError({
            cause: err,
            maxFeePerGas: args?.maxFeePerGas,
        });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.NonceTooHighError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.NonceTooHighError({ cause: err, nonce: args?.nonce });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.NonceTooLowError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.NonceTooLowError({ cause: err, nonce: args?.nonce });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.NonceMaxValueError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.NonceMaxValueError({ cause: err, nonce: args?.nonce });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.InsufficientFundsError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.InsufficientFundsError({ cause: err });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.IntrinsicGasTooHighError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.IntrinsicGasTooHighError({ cause: err, gas: args?.gas });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.IntrinsicGasTooLowError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.IntrinsicGasTooLowError({ cause: err, gas: args?.gas });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.TransactionTypeNotSupportedError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.TransactionTypeNotSupportedError({ cause: err });
    if (_errors_node_js__WEBPACK_IMPORTED_MODULE_1__.TipAboveFeeCapError.nodeMessage.test(message))
        return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.TipAboveFeeCapError({
            cause: err,
            maxFeePerGas: args?.maxFeePerGas,
            maxPriorityFeePerGas: args?.maxPriorityFeePerGas,
        });
    return new _errors_node_js__WEBPACK_IMPORTED_MODULE_1__.UnknownNodeError({
        cause: err,
    });
}
//# sourceMappingURL=getNodeError.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/errors/getTransactionError.js":
/*!********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/errors/getTransactionError.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTransactionError: () => (/* binding */ getTransactionError)
/* harmony export */ });
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _getNodeError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getNodeError.js */ "./node_modules/viem/_esm/utils/errors/getNodeError.js");



function getTransactionError(err, { docsPath, ...args }) {
    const cause = (() => {
        const cause = (0,_getNodeError_js__WEBPACK_IMPORTED_MODULE_2__.getNodeError)(err, args);
        if (cause instanceof _errors_node_js__WEBPACK_IMPORTED_MODULE_0__.UnknownNodeError)
            return err;
        return cause;
    })();
    return new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.TransactionExecutionError(cause, {
        docsPath,
        ...args,
    });
}
//# sourceMappingURL=getTransactionError.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/filters/createFilterRequestScope.js":
/*!**************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/filters/createFilterRequestScope.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createFilterRequestScope: () => (/* binding */ createFilterRequestScope)
/* harmony export */ });
/**
 * Scopes `request` to the filter ID. If the client is a fallback, it will
 * listen for responses and scope the child transport `request` function
 * to the successful filter ID.
 */
function createFilterRequestScope(client, { method }) {
    const requestMap = {};
    if (client.transport.type === 'fallback')
        client.transport.onResponse?.(({ method: method_, response: id, status, transport, }) => {
            if (status === 'success' && method === method_)
                requestMap[id] = transport.request;
        });
    return ((id) => requestMap[id] || client.request);
}
//# sourceMappingURL=createFilterRequestScope.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/block.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/block.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defineBlock: () => (/* binding */ defineBlock),
/* harmony export */   formatBlock: () => (/* binding */ formatBlock)
/* harmony export */ });
/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatter.js */ "./node_modules/viem/_esm/utils/formatters/formatter.js");
/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction.js */ "./node_modules/viem/_esm/utils/formatters/transaction.js");


function formatBlock(block) {
    const transactions = (block.transactions ?? []).map((transaction) => {
        if (typeof transaction === 'string')
            return transaction;
        return (0,_transaction_js__WEBPACK_IMPORTED_MODULE_1__.formatTransaction)(transaction);
    });
    return {
        ...block,
        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,
        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,
        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,
        excessBlobGas: block.excessBlobGas
            ? BigInt(block.excessBlobGas)
            : undefined,
        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,
        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,
        hash: block.hash ? block.hash : null,
        logsBloom: block.logsBloom ? block.logsBloom : null,
        nonce: block.nonce ? block.nonce : null,
        number: block.number ? BigInt(block.number) : null,
        size: block.size ? BigInt(block.size) : undefined,
        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,
        transactions,
        totalDifficulty: block.totalDifficulty
            ? BigInt(block.totalDifficulty)
            : null,
    };
}
const defineBlock = /*#__PURE__*/ (0,_formatter_js__WEBPACK_IMPORTED_MODULE_0__.defineFormatter)('block', formatBlock);
//# sourceMappingURL=block.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/extract.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/extract.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   extract: () => (/* binding */ extract)
/* harmony export */ });
/**
 * @description Picks out the keys from `value` that exist in the formatter..
 */
function extract(value_, { format }) {
    if (!format)
        return {};
    const value = {};
    function extract_(formatted) {
        const keys = Object.keys(formatted);
        for (const key of keys) {
            if (key in value_)
                value[key] = value_[key];
            if (formatted[key] &&
                typeof formatted[key] === 'object' &&
                !Array.isArray(formatted[key]))
                extract_(formatted[key]);
        }
    }
    const formatted = format(value_ || {});
    extract_(formatted);
    return value;
}
//# sourceMappingURL=extract.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/feeHistory.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/feeHistory.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatFeeHistory: () => (/* binding */ formatFeeHistory)
/* harmony export */ });
function formatFeeHistory(feeHistory) {
    return {
        baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),
        gasUsedRatio: feeHistory.gasUsedRatio,
        oldestBlock: BigInt(feeHistory.oldestBlock),
        reward: feeHistory.reward?.map((reward) => reward.map((value) => BigInt(value))),
    };
}
//# sourceMappingURL=feeHistory.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/formatter.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/formatter.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defineFormatter: () => (/* binding */ defineFormatter)
/* harmony export */ });
function defineFormatter(type, format) {
    return ({ exclude, format: overrides, }) => {
        return {
            exclude,
            format: (args) => {
                const formatted = format(args);
                if (exclude) {
                    for (const key of exclude) {
                        delete formatted[key];
                    }
                }
                return {
                    ...formatted,
                    ...overrides(args),
                };
            },
            type,
        };
    };
}
//# sourceMappingURL=formatter.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/log.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/log.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatLog: () => (/* binding */ formatLog)
/* harmony export */ });
function formatLog(log, { args, eventName, } = {}) {
    return {
        ...log,
        blockHash: log.blockHash ? log.blockHash : null,
        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,
        logIndex: log.logIndex ? Number(log.logIndex) : null,
        transactionHash: log.transactionHash ? log.transactionHash : null,
        transactionIndex: log.transactionIndex
            ? Number(log.transactionIndex)
            : null,
        ...(eventName ? { args, eventName } : {}),
    };
}
//# sourceMappingURL=log.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/proof.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/proof.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatProof: () => (/* binding */ formatProof)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");

function formatStorageProof(storageProof) {
    return storageProof.map((proof) => ({
        ...proof,
        value: BigInt(proof.value),
    }));
}
function formatProof(proof) {
    return {
        ...proof,
        balance: proof.balance ? BigInt(proof.balance) : undefined,
        nonce: proof.nonce ? (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(proof.nonce) : undefined,
        storageProof: proof.storageProof
            ? formatStorageProof(proof.storageProof)
            : undefined,
    };
}
//# sourceMappingURL=proof.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/transaction.js":
/*!****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/transaction.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defineTransaction: () => (/* binding */ defineTransaction),
/* harmony export */   formatTransaction: () => (/* binding */ formatTransaction),
/* harmony export */   transactionType: () => (/* binding */ transactionType)
/* harmony export */ });
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatter.js */ "./node_modules/viem/_esm/utils/formatters/formatter.js");


const transactionType = {
    '0x0': 'legacy',
    '0x1': 'eip2930',
    '0x2': 'eip1559',
    '0x3': 'eip4844',
    '0x4': 'eip7702',
};
function formatTransaction(transaction) {
    const transaction_ = {
        ...transaction,
        blockHash: transaction.blockHash ? transaction.blockHash : null,
        blockNumber: transaction.blockNumber
            ? BigInt(transaction.blockNumber)
            : null,
        chainId: transaction.chainId ? (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(transaction.chainId) : undefined,
        gas: transaction.gas ? BigInt(transaction.gas) : undefined,
        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,
        maxFeePerBlobGas: transaction.maxFeePerBlobGas
            ? BigInt(transaction.maxFeePerBlobGas)
            : undefined,
        maxFeePerGas: transaction.maxFeePerGas
            ? BigInt(transaction.maxFeePerGas)
            : undefined,
        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas
            ? BigInt(transaction.maxPriorityFeePerGas)
            : undefined,
        nonce: transaction.nonce ? (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(transaction.nonce) : undefined,
        to: transaction.to ? transaction.to : null,
        transactionIndex: transaction.transactionIndex
            ? Number(transaction.transactionIndex)
            : null,
        type: transaction.type
            ? transactionType[transaction.type]
            : undefined,
        typeHex: transaction.type ? transaction.type : undefined,
        value: transaction.value ? BigInt(transaction.value) : undefined,
        v: transaction.v ? BigInt(transaction.v) : undefined,
    };
    if (transaction.authorizationList)
        transaction_.authorizationList = formatAuthorizationList(transaction.authorizationList);
    transaction_.yParity = (() => {
        // If `yParity` is provided, we will use it.
        if (transaction.yParity)
            return Number(transaction.yParity);
        // If no `yParity` provided, try derive from `v`.
        if (typeof transaction_.v === 'bigint') {
            if (transaction_.v === 0n || transaction_.v === 27n)
                return 0;
            if (transaction_.v === 1n || transaction_.v === 28n)
                return 1;
            if (transaction_.v >= 35n)
                return transaction_.v % 2n === 0n ? 1 : 0;
        }
        return undefined;
    })();
    if (transaction_.type === 'legacy') {
        delete transaction_.accessList;
        delete transaction_.maxFeePerBlobGas;
        delete transaction_.maxFeePerGas;
        delete transaction_.maxPriorityFeePerGas;
        delete transaction_.yParity;
    }
    if (transaction_.type === 'eip2930') {
        delete transaction_.maxFeePerBlobGas;
        delete transaction_.maxFeePerGas;
        delete transaction_.maxPriorityFeePerGas;
    }
    if (transaction_.type === 'eip1559') {
        delete transaction_.maxFeePerBlobGas;
    }
    return transaction_;
}
const defineTransaction = /*#__PURE__*/ (0,_formatter_js__WEBPACK_IMPORTED_MODULE_1__.defineFormatter)('transaction', formatTransaction);
//////////////////////////////////////////////////////////////////////////////
function formatAuthorizationList(authorizationList) {
    return authorizationList.map((authorization) => ({
        address: authorization.address,
        chainId: Number(authorization.chainId),
        nonce: Number(authorization.nonce),
        r: authorization.r,
        s: authorization.s,
        yParity: Number(authorization.yParity),
    }));
}
//# sourceMappingURL=transaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/transactionReceipt.js":
/*!***********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/transactionReceipt.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defineTransactionReceipt: () => (/* binding */ defineTransactionReceipt),
/* harmony export */   formatTransactionReceipt: () => (/* binding */ formatTransactionReceipt),
/* harmony export */   receiptStatuses: () => (/* binding */ receiptStatuses)
/* harmony export */ });
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatter.js */ "./node_modules/viem/_esm/utils/formatters/formatter.js");
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./log.js */ "./node_modules/viem/_esm/utils/formatters/log.js");
/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transaction.js */ "./node_modules/viem/_esm/utils/formatters/transaction.js");




const receiptStatuses = {
    '0x0': 'reverted',
    '0x1': 'success',
};
function formatTransactionReceipt(transactionReceipt) {
    const receipt = {
        ...transactionReceipt,
        blockNumber: transactionReceipt.blockNumber
            ? BigInt(transactionReceipt.blockNumber)
            : null,
        contractAddress: transactionReceipt.contractAddress
            ? transactionReceipt.contractAddress
            : null,
        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed
            ? BigInt(transactionReceipt.cumulativeGasUsed)
            : null,
        effectiveGasPrice: transactionReceipt.effectiveGasPrice
            ? BigInt(transactionReceipt.effectiveGasPrice)
            : null,
        gasUsed: transactionReceipt.gasUsed
            ? BigInt(transactionReceipt.gasUsed)
            : null,
        logs: transactionReceipt.logs
            ? transactionReceipt.logs.map((log) => (0,_log_js__WEBPACK_IMPORTED_MODULE_2__.formatLog)(log))
            : null,
        to: transactionReceipt.to ? transactionReceipt.to : null,
        transactionIndex: transactionReceipt.transactionIndex
            ? (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(transactionReceipt.transactionIndex)
            : null,
        status: transactionReceipt.status
            ? receiptStatuses[transactionReceipt.status]
            : null,
        type: transactionReceipt.type
            ? _transaction_js__WEBPACK_IMPORTED_MODULE_3__.transactionType[transactionReceipt.type] || transactionReceipt.type
            : null,
    };
    if (transactionReceipt.blobGasPrice)
        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);
    if (transactionReceipt.blobGasUsed)
        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);
    return receipt;
}
const defineTransactionReceipt = /*#__PURE__*/ (0,_formatter_js__WEBPACK_IMPORTED_MODULE_1__.defineFormatter)('transactionReceipt', formatTransactionReceipt);
//# sourceMappingURL=transactionReceipt.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/formatters/transactionRequest.js":
/*!***********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/formatters/transactionRequest.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defineTransactionRequest: () => (/* binding */ defineTransactionRequest),
/* harmony export */   formatTransactionRequest: () => (/* binding */ formatTransactionRequest),
/* harmony export */   rpcTransactionType: () => (/* binding */ rpcTransactionType)
/* harmony export */ });
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatter.js */ "./node_modules/viem/_esm/utils/formatters/formatter.js");


const rpcTransactionType = {
    legacy: '0x0',
    eip2930: '0x1',
    eip1559: '0x2',
    eip4844: '0x3',
    eip7702: '0x4',
};
function formatTransactionRequest(request) {
    const rpcRequest = {};
    if (typeof request.authorizationList !== 'undefined')
        rpcRequest.authorizationList = formatAuthorizationList(request.authorizationList);
    if (typeof request.accessList !== 'undefined')
        rpcRequest.accessList = request.accessList;
    if (typeof request.blobVersionedHashes !== 'undefined')
        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;
    if (typeof request.blobs !== 'undefined') {
        if (typeof request.blobs[0] !== 'string')
            rpcRequest.blobs = request.blobs.map((x) => (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(x));
        else
            rpcRequest.blobs = request.blobs;
    }
    if (typeof request.data !== 'undefined')
        rpcRequest.data = request.data;
    if (typeof request.from !== 'undefined')
        rpcRequest.from = request.from;
    if (typeof request.gas !== 'undefined')
        rpcRequest.gas = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(request.gas);
    if (typeof request.gasPrice !== 'undefined')
        rpcRequest.gasPrice = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(request.gasPrice);
    if (typeof request.maxFeePerBlobGas !== 'undefined')
        rpcRequest.maxFeePerBlobGas = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(request.maxFeePerBlobGas);
    if (typeof request.maxFeePerGas !== 'undefined')
        rpcRequest.maxFeePerGas = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(request.maxFeePerGas);
    if (typeof request.maxPriorityFeePerGas !== 'undefined')
        rpcRequest.maxPriorityFeePerGas = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(request.maxPriorityFeePerGas);
    if (typeof request.nonce !== 'undefined')
        rpcRequest.nonce = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(request.nonce);
    if (typeof request.to !== 'undefined')
        rpcRequest.to = request.to;
    if (typeof request.type !== 'undefined')
        rpcRequest.type = rpcTransactionType[request.type];
    if (typeof request.value !== 'undefined')
        rpcRequest.value = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(request.value);
    return rpcRequest;
}
const defineTransactionRequest = /*#__PURE__*/ (0,_formatter_js__WEBPACK_IMPORTED_MODULE_1__.defineFormatter)('transactionRequest', formatTransactionRequest);
//////////////////////////////////////////////////////////////////////////////
function formatAuthorizationList(authorizationList) {
    return authorizationList.map((authorization) => ({
        address: authorization.address,
        r: authorization.r
            ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(BigInt(authorization.r))
            : authorization.r,
        s: authorization.s
            ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(BigInt(authorization.s))
            : authorization.s,
        chainId: (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(authorization.chainId),
        nonce: (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(authorization.nonce),
        ...(typeof authorization.yParity !== 'undefined'
            ? { yParity: (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(authorization.yParity) }
            : {}),
        ...(typeof authorization.v !== 'undefined' &&
            typeof authorization.yParity === 'undefined'
            ? { v: (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(authorization.v) }
            : {}),
    }));
}
//# sourceMappingURL=transactionRequest.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/getAction.js":
/*!***************************************************!*\
  !*** ./node_modules/viem/_esm/utils/getAction.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAction: () => (/* binding */ getAction)
/* harmony export */ });
/**
 * Retrieves and returns an action from the client (if exists), and falls
 * back to the tree-shakable action.
 *
 * Useful for extracting overridden actions from a client (ie. if a consumer
 * wants to override the `sendTransaction` implementation).
 */
function getAction(client, actionFn, 
// Some minifiers drop `Function.prototype.name`, or replace it with short letters,
// meaning that `actionFn.name` will not always work. For that case, the consumer
// needs to pass the name explicitly.
name) {
    const action_implicit = client[actionFn.name];
    if (typeof action_implicit === 'function')
        return action_implicit;
    const action_explicit = client[name];
    if (typeof action_explicit === 'function')
        return action_explicit;
    return (params) => actionFn(client, params);
}
//# sourceMappingURL=getAction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/hashSignature.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/hashSignature.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hashSignature: () => (/* binding */ hashSignature)
/* harmony export */ });
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");


const hash = (value) => (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(value));
function hashSignature(sig) {
    return hash(sig);
}
//# sourceMappingURL=hashSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/isHash.js":
/*!*****************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/isHash.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isHash: () => (/* binding */ isHash)
/* harmony export */ });
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");


function isHash(hash) {
    return (0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(hash) && (0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(hash) === 32;
}
//# sourceMappingURL=isHash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/normalizeSignature.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/normalizeSignature.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   normalizeSignature: () => (/* binding */ normalizeSignature)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");

function normalizeSignature(signature) {
    let active = true;
    let current = '';
    let level = 0;
    let result = '';
    let valid = false;
    for (let i = 0; i < signature.length; i++) {
        const char = signature[i];
        // If the character is a separator, we want to reactivate.
        if (['(', ')', ','].includes(char))
            active = true;
        // If the character is a "level" token, we want to increment/decrement.
        if (char === '(')
            level++;
        if (char === ')')
            level--;
        // If we aren't active, we don't want to mutate the result.
        if (!active)
            continue;
        // If level === 0, we are at the definition level.
        if (level === 0) {
            if (char === ' ' && ['event', 'function', ''].includes(result))
                result = '';
            else {
                result += char;
                // If we are at the end of the definition, we must be finished.
                if (char === ')') {
                    valid = true;
                    break;
                }
            }
            continue;
        }
        // Ignore spaces
        if (char === ' ') {
            // If the previous character is a separator, and the current section isn't empty, we want to deactivate.
            if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {
                current = '';
                active = false;
            }
            continue;
        }
        result += char;
        current += char;
    }
    if (!valid)
        throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError('Unable to normalize signature.');
    return result;
}
//# sourceMappingURL=normalizeSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/ripemd160.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/ripemd160.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ripemd160: () => (/* binding */ ripemd160)
/* harmony export */ });
/* harmony import */ var _noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/ripemd160 */ "./node_modules/@noble/hashes/esm/ripemd160.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");




function ripemd160(value, to_) {
    const to = to_ || 'hex';
    const bytes = (0,_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__.ripemd160)((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value, { strict: false }) ? (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(value) : value);
    if (to === 'bytes')
        return bytes;
    return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(bytes);
}
//# sourceMappingURL=ripemd160.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/sha256.js":
/*!*****************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/sha256.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sha256: () => (/* binding */ sha256)
/* harmony export */ });
/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha256 */ "./node_modules/@noble/hashes/esm/sha256.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");




function sha256(value, to_) {
    const to = to_ || 'hex';
    const bytes = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value, { strict: false }) ? (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(value) : value);
    if (to === 'bytes')
        return bytes;
    return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(bytes);
}
//# sourceMappingURL=sha256.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/toEventSelector.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/toEventSelector.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toEventSelector: () => (/* binding */ toEventSelector)
/* harmony export */ });
/* harmony import */ var _toSignatureHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toSignatureHash.js */ "./node_modules/viem/_esm/utils/hash/toSignatureHash.js");

/**
 * Returns the event selector for a given event definition.
 *
 * @example
 * const selector = toEventSelector('Transfer(address indexed from, address indexed to, uint256 amount)')
 * // 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
 */
const toEventSelector = _toSignatureHash_js__WEBPACK_IMPORTED_MODULE_0__.toSignatureHash;
//# sourceMappingURL=toEventSelector.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/toFunctionSelector.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/toFunctionSelector.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toFunctionSelector: () => (/* binding */ toFunctionSelector)
/* harmony export */ });
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _toSignatureHash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toSignatureHash.js */ "./node_modules/viem/_esm/utils/hash/toSignatureHash.js");


/**
 * Returns the function selector for a given function definition.
 *
 * @example
 * const selector = toFunctionSelector('function ownerOf(uint256 tokenId)')
 * // 0x6352211e
 */
const toFunctionSelector = (fn) => (0,_data_slice_js__WEBPACK_IMPORTED_MODULE_0__.slice)((0,_toSignatureHash_js__WEBPACK_IMPORTED_MODULE_1__.toSignatureHash)(fn), 0, 4);
//# sourceMappingURL=toFunctionSelector.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/toSignature.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/toSignature.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toSignature: () => (/* binding */ toSignature)
/* harmony export */ });
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/esm/human-readable/formatAbiItem.js");
/* harmony import */ var _normalizeSignature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalizeSignature.js */ "./node_modules/viem/_esm/utils/hash/normalizeSignature.js");


/**
 * Returns the signature for a given function or event definition.
 *
 * @example
 * const signature = toSignature('function ownerOf(uint256 tokenId)')
 * // 'ownerOf(uint256)'
 *
 * @example
 * const signature_3 = toSignature({
 *   name: 'ownerOf',
 *   type: 'function',
 *   inputs: [{ name: 'tokenId', type: 'uint256' }],
 *   outputs: [],
 *   stateMutability: 'view',
 * })
 * // 'ownerOf(uint256)'
 */
const toSignature = (def) => {
    const def_ = (() => {
        if (typeof def === 'string')
            return def;
        return (0,abitype__WEBPACK_IMPORTED_MODULE_0__.formatAbiItem)(def);
    })();
    return (0,_normalizeSignature_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSignature)(def_);
};
//# sourceMappingURL=toSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/hash/toSignatureHash.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/hash/toSignatureHash.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toSignatureHash: () => (/* binding */ toSignatureHash)
/* harmony export */ });
/* harmony import */ var _hashSignature_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hashSignature.js */ "./node_modules/viem/_esm/utils/hash/hashSignature.js");
/* harmony import */ var _toSignature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toSignature.js */ "./node_modules/viem/_esm/utils/hash/toSignature.js");


/**
 * Returns the hash (of the function/event signature) for a given event or function definition.
 */
function toSignatureHash(fn) {
    return (0,_hashSignature_js__WEBPACK_IMPORTED_MODULE_0__.hashSignature)((0,_toSignature_js__WEBPACK_IMPORTED_MODULE_1__.toSignature)(fn));
}
//# sourceMappingURL=toSignatureHash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/kzg/defineKzg.js":
/*!*******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/kzg/defineKzg.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defineKzg: () => (/* binding */ defineKzg)
/* harmony export */ });
/**
 * Defines a KZG interface.
 *
 * @example
 * ```ts
 * import * as cKzg from 'c-kzg'
 * import { defineKzg } from 'viem'
 * import { mainnetTrustedSetupPath } from 'viem/node'
 *
 * cKzg.loadTrustedSetup(mainnetTrustedSetupPath)
 *
 * const kzg = defineKzg(cKzg)
 * ```
 */
function defineKzg({ blobToKzgCommitment, computeBlobKzgProof, }) {
    return {
        blobToKzgCommitment,
        computeBlobKzgProof,
    };
}
//# sourceMappingURL=defineKzg.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/kzg/setupKzg.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/kzg/setupKzg.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setupKzg: () => (/* binding */ setupKzg)
/* harmony export */ });
/* harmony import */ var _defineKzg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defineKzg.js */ "./node_modules/viem/_esm/utils/kzg/defineKzg.js");

/**
 * Sets up and returns a KZG interface.
 *
 * @example
 * ```ts
 * import * as cKzg from 'c-kzg'
 * import { setupKzg } from 'viem'
 * import { mainnetTrustedSetupPath } from 'viem/node'
 *
 * const kzg = setupKzg(cKzg, mainnetTrustedSetupPath)
 * ```
 */
function setupKzg(parameters, path) {
    try {
        parameters.loadTrustedSetup(path);
    }
    catch (e) {
        const error = e;
        if (!error.message.includes('trusted setup is already loaded'))
            throw error;
    }
    return (0,_defineKzg_js__WEBPACK_IMPORTED_MODULE_0__.defineKzg)(parameters);
}
//# sourceMappingURL=setupKzg.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/lru.js":
/*!*********************************************!*\
  !*** ./node_modules/viem/_esm/utils/lru.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LruMap: () => (/* binding */ LruMap)
/* harmony export */ });
/**
 * Map with a LRU (Least recently used) policy.
 *
 * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU
 */
class LruMap extends Map {
    constructor(size) {
        super();
        Object.defineProperty(this, "maxSize", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.maxSize = size;
    }
    get(key) {
        const value = super.get(key);
        if (super.has(key) && value !== undefined) {
            this.delete(key);
            super.set(key, value);
        }
        return value;
    }
    set(key, value) {
        super.set(key, value);
        if (this.maxSize && this.size > this.maxSize) {
            const firstKey = this.keys().next().value;
            if (firstKey)
                this.delete(firstKey);
        }
        return this;
    }
}
//# sourceMappingURL=lru.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/nonceManager.js":
/*!******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/nonceManager.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createNonceManager: () => (/* binding */ createNonceManager),
/* harmony export */   jsonRpc: () => (/* binding */ jsonRpc),
/* harmony export */   nonceManager: () => (/* binding */ nonceManager)
/* harmony export */ });
/* harmony import */ var _actions_public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/public/getTransactionCount.js */ "./node_modules/viem/_esm/actions/public/getTransactionCount.js");
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lru.js */ "./node_modules/viem/_esm/utils/lru.js");


/**
 * Creates a nonce manager for auto-incrementing transaction nonces.
 *
 * - Docs: https://viem.sh/docs/accounts/createNonceManager
 *
 * @example
 * ```ts
 * const nonceManager = createNonceManager({
 *   source: jsonRpc(),
 * })
 * ```
 */
function createNonceManager(parameters) {
    const { source } = parameters;
    const deltaMap = new Map();
    const nonceMap = new _lru_js__WEBPACK_IMPORTED_MODULE_1__.LruMap(8192);
    const promiseMap = new Map();
    const getKey = ({ address, chainId }) => `${address}.${chainId}`;
    return {
        async consume({ address, chainId, client }) {
            const key = getKey({ address, chainId });
            const promise = this.get({ address, chainId, client });
            this.increment({ address, chainId });
            const nonce = await promise;
            await source.set({ address, chainId }, nonce);
            nonceMap.set(key, nonce);
            return nonce;
        },
        async increment({ address, chainId }) {
            const key = getKey({ address, chainId });
            const delta = deltaMap.get(key) ?? 0;
            deltaMap.set(key, delta + 1);
        },
        async get({ address, chainId, client }) {
            const key = getKey({ address, chainId });
            let promise = promiseMap.get(key);
            if (!promise) {
                promise = (async () => {
                    try {
                        const nonce = await source.get({ address, chainId, client });
                        const previousNonce = nonceMap.get(key) ?? 0;
                        if (previousNonce > 0 && nonce <= previousNonce)
                            return previousNonce + 1;
                        nonceMap.delete(key);
                        return nonce;
                    }
                    finally {
                        this.reset({ address, chainId });
                    }
                })();
                promiseMap.set(key, promise);
            }
            const delta = deltaMap.get(key) ?? 0;
            return delta + (await promise);
        },
        reset({ address, chainId }) {
            const key = getKey({ address, chainId });
            deltaMap.delete(key);
            promiseMap.delete(key);
        },
    };
}
/** JSON-RPC source for a nonce manager. */
function jsonRpc() {
    return {
        async get(parameters) {
            const { address, client } = parameters;
            return (0,_actions_public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_0__.getTransactionCount)(client, {
                address,
                blockTag: 'pending',
            });
        },
        set() { },
    };
}
////////////////////////////////////////////////////////////////////////////////////////////
// Default
/** Default Nonce Manager with a JSON-RPC source. */
const nonceManager = /*#__PURE__*/ createNonceManager({
    source: jsonRpc(),
});
//# sourceMappingURL=nonceManager.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/observe.js":
/*!*************************************************!*\
  !*** ./node_modules/viem/_esm/utils/observe.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cleanupCache: () => (/* binding */ cleanupCache),
/* harmony export */   listenersCache: () => (/* binding */ listenersCache),
/* harmony export */   observe: () => (/* binding */ observe)
/* harmony export */ });
/** @internal */
const listenersCache = /*#__PURE__*/ new Map();
/** @internal */
const cleanupCache = /*#__PURE__*/ new Map();
let callbackCount = 0;
/**
 * @description Sets up an observer for a given function. If another function
 * is set up under the same observer id, the function will only be called once
 * for both instances of the observer.
 */
function observe(observerId, callbacks, fn) {
    const callbackId = ++callbackCount;
    const getListeners = () => listenersCache.get(observerId) || [];
    const unsubscribe = () => {
        const listeners = getListeners();
        listenersCache.set(observerId, listeners.filter((cb) => cb.id !== callbackId));
    };
    const unwatch = () => {
        const listeners = getListeners();
        if (!listeners.some((cb) => cb.id === callbackId))
            return;
        const cleanup = cleanupCache.get(observerId);
        if (listeners.length === 1 && cleanup) {
            const p = cleanup();
            if (p instanceof Promise)
                p.catch(() => { });
        }
        unsubscribe();
    };
    const listeners = getListeners();
    listenersCache.set(observerId, [
        ...listeners,
        { id: callbackId, fns: callbacks },
    ]);
    if (listeners && listeners.length > 0)
        return unwatch;
    const emit = {};
    for (const key in callbacks) {
        emit[key] = ((...args) => {
            const listeners = getListeners();
            if (listeners.length === 0)
                return;
            for (const listener of listeners)
                listener.fns[key]?.(...args);
        });
    }
    const cleanup = fn(emit);
    if (typeof cleanup === 'function')
        cleanupCache.set(observerId, cleanup);
    return unwatch;
}
//# sourceMappingURL=observe.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/poll.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/utils/poll.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   poll: () => (/* binding */ poll)
/* harmony export */ });
/* harmony import */ var _wait_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wait.js */ "./node_modules/viem/_esm/utils/wait.js");

/**
 * @description Polls a function at a specified interval.
 */
function poll(fn, { emitOnBegin, initialWaitTime, interval }) {
    let active = true;
    const unwatch = () => (active = false);
    const watch = async () => {
        let data = undefined;
        if (emitOnBegin)
            data = await fn({ unpoll: unwatch });
        const initialWait = (await initialWaitTime?.(data)) ?? interval;
        await (0,_wait_js__WEBPACK_IMPORTED_MODULE_0__.wait)(initialWait);
        const poll = async () => {
            if (!active)
                return;
            await fn({ unpoll: unwatch });
            await (0,_wait_js__WEBPACK_IMPORTED_MODULE_0__.wait)(interval);
            poll();
        };
        poll();
    };
    watch();
    return unwatch;
}
//# sourceMappingURL=poll.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/promise/createBatchScheduler.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/promise/createBatchScheduler.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createBatchScheduler: () => (/* binding */ createBatchScheduler)
/* harmony export */ });
/* harmony import */ var _withResolvers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./withResolvers.js */ "./node_modules/viem/_esm/utils/promise/withResolvers.js");

const schedulerCache = /*#__PURE__*/ new Map();
/** @internal */
function createBatchScheduler({ fn, id, shouldSplitBatch, wait = 0, sort, }) {
    const exec = async () => {
        const scheduler = getScheduler();
        flush();
        const args = scheduler.map(({ args }) => args);
        if (args.length === 0)
            return;
        fn(args)
            .then((data) => {
            if (sort && Array.isArray(data))
                data.sort(sort);
            for (let i = 0; i < scheduler.length; i++) {
                const { resolve } = scheduler[i];
                resolve?.([data[i], data]);
            }
        })
            .catch((err) => {
            for (let i = 0; i < scheduler.length; i++) {
                const { reject } = scheduler[i];
                reject?.(err);
            }
        });
    };
    const flush = () => schedulerCache.delete(id);
    const getBatchedArgs = () => getScheduler().map(({ args }) => args);
    const getScheduler = () => schedulerCache.get(id) || [];
    const setScheduler = (item) => schedulerCache.set(id, [...getScheduler(), item]);
    return {
        flush,
        async schedule(args) {
            const { promise, resolve, reject } = (0,_withResolvers_js__WEBPACK_IMPORTED_MODULE_0__.withResolvers)();
            const split = shouldSplitBatch?.([...getBatchedArgs(), args]);
            if (split)
                exec();
            const hasActiveScheduler = getScheduler().length > 0;
            if (hasActiveScheduler) {
                setScheduler({ args, resolve, reject });
                return promise;
            }
            setScheduler({ args, resolve, reject });
            setTimeout(exec, wait);
            return promise;
        },
    };
}
//# sourceMappingURL=createBatchScheduler.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/promise/withCache.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/promise/withCache.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getCache: () => (/* binding */ getCache),
/* harmony export */   promiseCache: () => (/* binding */ promiseCache),
/* harmony export */   responseCache: () => (/* binding */ responseCache),
/* harmony export */   withCache: () => (/* binding */ withCache)
/* harmony export */ });
/** @internal */
const promiseCache = /*#__PURE__*/ new Map();
/** @internal */
const responseCache = /*#__PURE__*/ new Map();
function getCache(cacheKey) {
    const buildCache = (cacheKey, cache) => ({
        clear: () => cache.delete(cacheKey),
        get: () => cache.get(cacheKey),
        set: (data) => cache.set(cacheKey, data),
    });
    const promise = buildCache(cacheKey, promiseCache);
    const response = buildCache(cacheKey, responseCache);
    return {
        clear: () => {
            promise.clear();
            response.clear();
        },
        promise,
        response,
    };
}
/**
 * @description Returns the result of a given promise, and caches the result for
 * subsequent invocations against a provided cache key.
 */
async function withCache(fn, { cacheKey, cacheTime = Number.POSITIVE_INFINITY }) {
    const cache = getCache(cacheKey);
    // If a response exists in the cache, and it's not expired, return it
    // and do not invoke the promise.
    // If the max age is 0, the cache is disabled.
    const response = cache.response.get();
    if (response && cacheTime > 0) {
        const age = new Date().getTime() - response.created.getTime();
        if (age < cacheTime)
            return response.data;
    }
    let promise = cache.promise.get();
    if (!promise) {
        promise = fn();
        // Store the promise in the cache so that subsequent invocations
        // will wait for the same promise to resolve (deduping).
        cache.promise.set(promise);
    }
    try {
        const data = await promise;
        // Store the response in the cache so that subsequent invocations
        // will return the same response.
        cache.response.set({ created: new Date(), data });
        return data;
    }
    finally {
        // Clear the promise cache so that subsequent invocations will
        // invoke the promise again.
        cache.promise.clear();
    }
}
//# sourceMappingURL=withCache.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/promise/withDedupe.js":
/*!************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/promise/withDedupe.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   promiseCache: () => (/* binding */ promiseCache),
/* harmony export */   withDedupe: () => (/* binding */ withDedupe)
/* harmony export */ });
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lru.js */ "./node_modules/viem/_esm/utils/lru.js");

/** @internal */
const promiseCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_0__.LruMap(8192);
/** Deduplicates in-flight promises. */
function withDedupe(fn, { enabled = true, id }) {
    if (!enabled || !id)
        return fn();
    if (promiseCache.get(id))
        return promiseCache.get(id);
    const promise = fn().finally(() => promiseCache.delete(id));
    promiseCache.set(id, promise);
    return promise;
}
//# sourceMappingURL=withDedupe.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/promise/withResolvers.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/promise/withResolvers.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   withResolvers: () => (/* binding */ withResolvers)
/* harmony export */ });
/** @internal */
function withResolvers() {
    let resolve = () => undefined;
    let reject = () => undefined;
    const promise = new Promise((resolve_, reject_) => {
        resolve = resolve_;
        reject = reject_;
    });
    return { promise, resolve, reject };
}
//# sourceMappingURL=withResolvers.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/promise/withRetry.js":
/*!***********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/promise/withRetry.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   withRetry: () => (/* binding */ withRetry)
/* harmony export */ });
/* harmony import */ var _wait_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wait.js */ "./node_modules/viem/_esm/utils/wait.js");

function withRetry(fn, { delay: delay_ = 100, retryCount = 2, shouldRetry = () => true, } = {}) {
    return new Promise((resolve, reject) => {
        const attemptRetry = async ({ count = 0 } = {}) => {
            const retry = async ({ error }) => {
                const delay = typeof delay_ === 'function' ? delay_({ count, error }) : delay_;
                if (delay)
                    await (0,_wait_js__WEBPACK_IMPORTED_MODULE_0__.wait)(delay);
                attemptRetry({ count: count + 1 });
            };
            try {
                const data = await fn();
                resolve(data);
            }
            catch (err) {
                if (count < retryCount &&
                    (await shouldRetry({ count, error: err })))
                    return retry({ error: err });
                reject(err);
            }
        };
        attemptRetry();
    });
}
//# sourceMappingURL=withRetry.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/promise/withTimeout.js":
/*!*************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/promise/withTimeout.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   withTimeout: () => (/* binding */ withTimeout)
/* harmony export */ });
function withTimeout(fn, { errorInstance = new Error('timed out'), timeout, signal, }) {
    return new Promise((resolve, reject) => {
        ;
        (async () => {
            let timeoutId;
            try {
                const controller = new AbortController();
                if (timeout > 0) {
                    timeoutId = setTimeout(() => {
                        if (signal) {
                            controller.abort();
                        }
                        else {
                            reject(errorInstance);
                        }
                    }, timeout); // need to cast because bun globals.d.ts overrides @types/node
                }
                resolve(await fn({ signal: controller?.signal || null }));
            }
            catch (err) {
                if (err?.name === 'AbortError')
                    reject(errorInstance);
                reject(err);
            }
            finally {
                clearTimeout(timeoutId);
            }
        })();
    });
}
//# sourceMappingURL=withTimeout.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/regex.js":
/*!***********************************************!*\
  !*** ./node_modules/viem/_esm/utils/regex.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arrayRegex: () => (/* binding */ arrayRegex),
/* harmony export */   bytesRegex: () => (/* binding */ bytesRegex),
/* harmony export */   integerRegex: () => (/* binding */ integerRegex)
/* harmony export */ });
const arrayRegex = /^(.*)\[([0-9]*)\]$/;
// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`
// https://regexr.com/6va55
const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;
// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`
// https://regexr.com/6v8hp
const integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
//# sourceMappingURL=regex.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/rpc/compat.js":
/*!****************************************************!*\
  !*** ./node_modules/viem/_esm/utils/rpc/compat.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getSocket: () => (/* binding */ getSocket),
/* harmony export */   rpc: () => (/* binding */ rpc)
/* harmony export */ });
/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http.js */ "./node_modules/viem/_esm/utils/rpc/http.js");
/* harmony import */ var _webSocket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webSocket.js */ "./node_modules/viem/_esm/utils/rpc/webSocket.js");
// TODO(v3): This file is here for backwards compatibility, and to prevent breaking changes.
// These APIs will be removed in v3.


function webSocket(socketClient, { body, onError, onResponse }) {
    socketClient.request({
        body,
        onError,
        onResponse,
    });
    return socketClient;
}
async function webSocketAsync(socketClient, { body, timeout = 10_000 }) {
    return socketClient.requestAsync({
        body,
        timeout,
    });
}
/**
 * @deprecated use `getSocketClient` instead.
 *
 * ```diff
 * -import { getSocket } from 'viem/utils'
 * +import { getSocketClient } from 'viem/utils'
 *
 * -const socket = await getSocket(url)
 * +const socketClient = await getSocketClient(url)
 * +const socket = socketClient.socket
 * ```
 */
async function getSocket(url) {
    const client = await (0,_webSocket_js__WEBPACK_IMPORTED_MODULE_1__.getWebSocketRpcClient)(url);
    return Object.assign(client.socket, {
        requests: client.requests,
        subscriptions: client.subscriptions,
    });
}
const rpc = {
    /**
     * @deprecated use `getHttpRpcClient` instead.
     *
     * ```diff
     * -import { rpc } from 'viem/utils'
     * +import { getHttpRpcClient } from 'viem/utils'
     *
     * -rpc.http(url, params)
     * +const httpClient = getHttpRpcClient(url)
     * +httpClient.request(params)
     * ```
     */
    http(url, params) {
        return (0,_http_js__WEBPACK_IMPORTED_MODULE_0__.getHttpRpcClient)(url).request(params);
    },
    /**
     * @deprecated use `getWebSocketRpcClient` instead.
     *
     * ```diff
     * -import { rpc } from 'viem/utils'
     * +import { getWebSocketRpcClient } from 'viem/utils'
     *
     * -rpc.webSocket(url, params)
     * +const webSocketClient = getWebSocketRpcClient(url)
     * +webSocketClient.request(params)
     * ```
     */
    webSocket,
    /**
     * @deprecated use `getWebSocketRpcClient` instead.
     *
     * ```diff
     * -import { rpc } from 'viem/utils'
     * +import { getWebSocketRpcClient } from 'viem/utils'
     *
     * -const response = await rpc.webSocketAsync(url, params)
     * +const webSocketClient = getWebSocketRpcClient(url)
     * +const response = await webSocketClient.requestAsync(params)
     * ```
     */
    webSocketAsync,
};
/* c8 ignore end */
//# sourceMappingURL=compat.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/rpc/http.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/utils/rpc/http.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getHttpRpcClient: () => (/* binding */ getHttpRpcClient)
/* harmony export */ });
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _promise_withTimeout_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../promise/withTimeout.js */ "./node_modules/viem/_esm/utils/promise/withTimeout.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");
/* harmony import */ var _id_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./id.js */ "./node_modules/viem/_esm/utils/rpc/id.js");




function getHttpRpcClient(url, options = {}) {
    return {
        async request(params) {
            const { body, onRequest = options.onRequest, onResponse = options.onResponse, timeout = options.timeout ?? 10_000, } = params;
            const fetchOptions = {
                ...(options.fetchOptions ?? {}),
                ...(params.fetchOptions ?? {}),
            };
            const { headers, method, signal: signal_ } = fetchOptions;
            try {
                const response = await (0,_promise_withTimeout_js__WEBPACK_IMPORTED_MODULE_1__.withTimeout)(async ({ signal }) => {
                    const init = {
                        ...fetchOptions,
                        body: Array.isArray(body)
                            ? (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body.map((body) => ({
                                jsonrpc: '2.0',
                                id: body.id ?? _id_js__WEBPACK_IMPORTED_MODULE_3__.idCache.take(),
                                ...body,
                            })))
                            : (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({
                                jsonrpc: '2.0',
                                id: body.id ?? _id_js__WEBPACK_IMPORTED_MODULE_3__.idCache.take(),
                                ...body,
                            }),
                        headers: {
                            'Content-Type': 'application/json',
                            ...headers,
                        },
                        method: method || 'POST',
                        signal: signal_ || (timeout > 0 ? signal : null),
                    };
                    const request = new Request(url, init);
                    const args = (await onRequest?.(request, init)) ?? { ...init, url };
                    const response = await fetch(args.url ?? url, args);
                    return response;
                }, {
                    errorInstance: new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.TimeoutError({ body, url }),
                    timeout,
                    signal: true,
                });
                if (onResponse)
                    await onResponse(response);
                let data;
                if (response.headers.get('Content-Type')?.startsWith('application/json'))
                    data = await response.json();
                else {
                    data = await response.text();
                    try {
                        data = JSON.parse(data || '{}');
                    }
                    catch (err) {
                        if (response.ok)
                            throw err;
                        data = { error: data };
                    }
                }
                if (!response.ok) {
                    throw new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.HttpRequestError({
                        body,
                        details: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(data.error) || response.statusText,
                        headers: response.headers,
                        status: response.status,
                        url,
                    });
                }
                return data;
            }
            catch (err) {
                if (err instanceof _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.HttpRequestError)
                    throw err;
                if (err instanceof _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.TimeoutError)
                    throw err;
                throw new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.HttpRequestError({
                    body,
                    cause: err,
                    url,
                });
            }
        },
    };
}
//# sourceMappingURL=http.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/rpc/id.js":
/*!************************************************!*\
  !*** ./node_modules/viem/_esm/utils/rpc/id.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   idCache: () => (/* binding */ idCache)
/* harmony export */ });
function createIdStore() {
    return {
        current: 0,
        take() {
            return this.current++;
        },
        reset() {
            this.current = 0;
        },
    };
}
const idCache = /*#__PURE__*/ createIdStore();
//# sourceMappingURL=id.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/rpc/socket.js":
/*!****************************************************!*\
  !*** ./node_modules/viem/_esm/utils/rpc/socket.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getSocketRpcClient: () => (/* binding */ getSocketRpcClient),
/* harmony export */   socketClientCache: () => (/* binding */ socketClientCache)
/* harmony export */ });
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _promise_createBatchScheduler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../promise/createBatchScheduler.js */ "./node_modules/viem/_esm/utils/promise/createBatchScheduler.js");
/* harmony import */ var _promise_withTimeout_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../promise/withTimeout.js */ "./node_modules/viem/_esm/utils/promise/withTimeout.js");
/* harmony import */ var _id_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./id.js */ "./node_modules/viem/_esm/utils/rpc/id.js");




const socketClientCache = /*#__PURE__*/ new Map();
async function getSocketRpcClient(parameters) {
    const { getSocket, keepAlive = true, key = 'socket', reconnect = true, url, } = parameters;
    const { interval: keepAliveInterval = 30_000 } = typeof keepAlive === 'object' ? keepAlive : {};
    const { attempts = 5, delay = 2_000 } = typeof reconnect === 'object' ? reconnect : {};
    const id = JSON.stringify({ keepAlive, key, url, reconnect });
    let socketClient = socketClientCache.get(id);
    // If the socket already exists, return it.
    if (socketClient)
        return socketClient;
    let reconnectCount = 0;
    const { schedule } = (0,_promise_createBatchScheduler_js__WEBPACK_IMPORTED_MODULE_1__.createBatchScheduler)({
        id,
        fn: async () => {
            // Set up a cache for incoming "synchronous" requests.
            const requests = new Map();
            // Set up a cache for subscriptions (eth_subscribe).
            const subscriptions = new Map();
            let error;
            let socket;
            let keepAliveTimer;
            let reconnectInProgress = false;
            function attemptReconnect() {
                // Attempt to reconnect.
                if (reconnect && reconnectCount < attempts) {
                    if (reconnectInProgress)
                        return;
                    reconnectInProgress = true;
                    reconnectCount++;
                    // Make sure the previous socket is definitely closed.
                    socket?.close();
                    setTimeout(async () => {
                        await setup().catch(console.error);
                        reconnectInProgress = false;
                    }, delay);
                }
                // Otherwise, clear all requests and subscriptions.
                else {
                    requests.clear();
                    subscriptions.clear();
                }
            }
            // Set up socket implementation.
            async function setup() {
                const result = await getSocket({
                    onClose() {
                        // Notify all requests and subscriptions of the closure error.
                        for (const request of requests.values())
                            request.onError?.(new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.SocketClosedError({ url }));
                        for (const subscription of subscriptions.values())
                            subscription.onError?.(new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.SocketClosedError({ url }));
                        attemptReconnect();
                    },
                    onError(error_) {
                        error = error_;
                        // Notify all requests and subscriptions of the error.
                        for (const request of requests.values())
                            request.onError?.(error);
                        for (const subscription of subscriptions.values())
                            subscription.onError?.(error);
                        attemptReconnect();
                    },
                    onOpen() {
                        error = undefined;
                        reconnectCount = 0;
                    },
                    onResponse(data) {
                        const isSubscription = data.method === 'eth_subscription';
                        const id = isSubscription ? data.params.subscription : data.id;
                        const cache = isSubscription ? subscriptions : requests;
                        const callback = cache.get(id);
                        if (callback)
                            callback.onResponse(data);
                        if (!isSubscription)
                            cache.delete(id);
                    },
                });
                socket = result;
                if (keepAlive) {
                    if (keepAliveTimer)
                        clearInterval(keepAliveTimer);
                    keepAliveTimer = setInterval(() => socket.ping?.(), keepAliveInterval);
                }
                if (reconnect && subscriptions.size > 0) {
                    const subscriptionEntries = subscriptions.entries();
                    for (const [key, { onResponse, body, onError },] of subscriptionEntries) {
                        if (!body)
                            continue;
                        subscriptions.delete(key);
                        socketClient?.request({ body, onResponse, onError });
                    }
                }
                return result;
            }
            await setup();
            error = undefined;
            // Create a new socket instance.
            socketClient = {
                close() {
                    keepAliveTimer && clearInterval(keepAliveTimer);
                    socket.close();
                    socketClientCache.delete(id);
                },
                get socket() {
                    return socket;
                },
                request({ body, onError, onResponse }) {
                    if (error && onError)
                        onError(error);
                    const id = body.id ?? _id_js__WEBPACK_IMPORTED_MODULE_3__.idCache.take();
                    const callback = (response) => {
                        if (typeof response.id === 'number' && id !== response.id)
                            return;
                        // If we are subscribing to a topic, we want to set up a listener for incoming
                        // messages.
                        if (body.method === 'eth_subscribe' &&
                            typeof response.result === 'string')
                            subscriptions.set(response.result, {
                                onResponse: callback,
                                onError,
                                body,
                            });
                        // If we are unsubscribing from a topic, we want to remove the listener.
                        if (body.method === 'eth_unsubscribe')
                            subscriptions.delete(body.params?.[0]);
                        onResponse(response);
                    };
                    requests.set(id, { onResponse: callback, onError });
                    try {
                        socket.request({
                            body: {
                                jsonrpc: '2.0',
                                id,
                                ...body,
                            },
                        });
                    }
                    catch (error) {
                        onError?.(error);
                    }
                },
                requestAsync({ body, timeout = 10_000 }) {
                    return (0,_promise_withTimeout_js__WEBPACK_IMPORTED_MODULE_2__.withTimeout)(() => new Promise((onResponse, onError) => this.request({
                        body,
                        onError,
                        onResponse,
                    })), {
                        errorInstance: new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.TimeoutError({ body, url }),
                        timeout,
                    });
                },
                requests,
                subscriptions,
                url,
            };
            socketClientCache.set(id, socketClient);
            return [socketClient];
        },
    });
    const [_, [socketClient_]] = await schedule();
    return socketClient_;
}
//# sourceMappingURL=socket.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/rpc/webSocket.js":
/*!*******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/rpc/webSocket.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getWebSocketRpcClient: () => (/* binding */ getWebSocketRpcClient)
/* harmony export */ });
/* harmony import */ var _errors_request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/request.js */ "./node_modules/viem/_esm/errors/request.js");
/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./socket.js */ "./node_modules/viem/_esm/utils/rpc/socket.js");


async function getWebSocketRpcClient(url, options = {}) {
    const { keepAlive, reconnect } = options;
    return (0,_socket_js__WEBPACK_IMPORTED_MODULE_1__.getSocketRpcClient)({
        async getSocket({ onClose, onError, onOpen, onResponse }) {
            const WebSocket = await __webpack_require__.e(/*! import() */ "node_modules_isows__esm_native_js").then(__webpack_require__.bind(__webpack_require__, /*! isows */ "./node_modules/isows/_esm/native.js")).then((module) => module.WebSocket);
            const socket = new WebSocket(url);
            function onClose_() {
                socket.removeEventListener('close', onClose_);
                socket.removeEventListener('message', onMessage);
                socket.removeEventListener('error', onError);
                socket.removeEventListener('open', onOpen);
                onClose();
            }
            function onMessage({ data }) {
                try {
                    const _data = JSON.parse(data);
                    onResponse(_data);
                }
                catch (error) {
                    onError(error);
                }
            }
            // Setup event listeners for RPC & subscription responses.
            socket.addEventListener('close', onClose_);
            socket.addEventListener('message', onMessage);
            socket.addEventListener('error', onError);
            socket.addEventListener('open', onOpen);
            // Wait for the socket to open.
            if (socket.readyState === WebSocket.CONNECTING) {
                await new Promise((resolve, reject) => {
                    if (!socket)
                        return;
                    socket.onopen = resolve;
                    socket.onerror = reject;
                });
            }
            const { close: close_ } = socket;
            return Object.assign(socket, {
                close() {
                    close_.bind(socket)();
                    onClose_();
                },
                ping() {
                    try {
                        if (socket.readyState === socket.CLOSED ||
                            socket.readyState === socket.CLOSING)
                            throw new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.WebSocketRequestError({
                                url: socket.url,
                                cause: new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.SocketClosedError({ url: socket.url }),
                            });
                        const body = {
                            jsonrpc: '2.0',
                            method: 'net_version',
                            params: [],
                        };
                        socket.send(JSON.stringify(body));
                    }
                    catch (error) {
                        onError(error);
                    }
                },
                request({ body }) {
                    if (socket.readyState === socket.CLOSED ||
                        socket.readyState === socket.CLOSING)
                        throw new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.WebSocketRequestError({
                            body,
                            url: socket.url,
                            cause: new _errors_request_js__WEBPACK_IMPORTED_MODULE_0__.SocketClosedError({ url: socket.url }),
                        });
                    return socket.send(JSON.stringify(body));
                },
            });
        },
        keepAlive,
        reconnect,
        url,
    });
}
//# sourceMappingURL=webSocket.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/compactSignatureToSignature.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/compactSignatureToSignature.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compactSignatureToSignature: () => (/* binding */ compactSignatureToSignature)
/* harmony export */ });
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * @description Converts an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098) into signature format.
 *
 * @param signature The compact signature to convert.
 * @returns The compact signature in signature format.
 *
 * @example
 * compactSignatureToSignature({
 *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',
 *   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',
 * })
 * // {
 * //   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',
 * //   s: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',
 * //   v: 27n
 * // }
 */
function compactSignatureToSignature({ r, yParityAndS, }) {
    const yParityAndS_bytes = (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(yParityAndS);
    const yParity = yParityAndS_bytes[0] & 0x80 ? 1 : 0;
    const s = yParityAndS_bytes;
    if (yParity === 1)
        s[0] &= 0x7f;
    return { r, s: (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(s), yParity };
}
//# sourceMappingURL=compactSignatureToSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/hashTypedData.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/hashTypedData.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeType: () => (/* binding */ encodeType),
/* harmony export */   hashDomain: () => (/* binding */ hashDomain),
/* harmony export */   hashStruct: () => (/* binding */ hashStruct),
/* harmony export */   hashTypedData: () => (/* binding */ hashTypedData)
/* harmony export */ });
/* harmony import */ var _abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../abi/encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _typedData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../typedData.js */ "./node_modules/viem/_esm/utils/typedData.js");
// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts





function hashTypedData(parameters) {
    const { domain = {}, message, primaryType, } = parameters;
    const types = {
        EIP712Domain: (0,_typedData_js__WEBPACK_IMPORTED_MODULE_4__.getTypesForEIP712Domain)({ domain }),
        ...parameters.types,
    };
    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc
    // as we can't statically check this with TypeScript.
    (0,_typedData_js__WEBPACK_IMPORTED_MODULE_4__.validateTypedData)({
        domain,
        message,
        primaryType,
        types,
    });
    const parts = ['0x1901'];
    if (domain)
        parts.push(hashDomain({
            domain,
            types: types,
        }));
    if (primaryType !== 'EIP712Domain')
        parts.push(hashStruct({
            data: message,
            primaryType,
            types: types,
        }));
    return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_data_concat_js__WEBPACK_IMPORTED_MODULE_1__.concat)(parts));
}
function hashDomain({ domain, types, }) {
    return hashStruct({
        data: domain,
        primaryType: 'EIP712Domain',
        types,
    });
}
function hashStruct({ data, primaryType, types, }) {
    const encoded = encodeData({
        data,
        primaryType,
        types,
    });
    return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)(encoded);
}
function encodeData({ data, primaryType, types, }) {
    const encodedTypes = [{ type: 'bytes32' }];
    const encodedValues = [hashType({ primaryType, types })];
    for (const field of types[primaryType]) {
        const [type, value] = encodeField({
            types,
            name: field.name,
            type: field.type,
            value: data[field.name],
        });
        encodedTypes.push(type);
        encodedValues.push(value);
    }
    return (0,_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.encodeAbiParameters)(encodedTypes, encodedValues);
}
function hashType({ primaryType, types, }) {
    const encodedHashType = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(encodeType({ primaryType, types }));
    return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)(encodedHashType);
}
function encodeType({ primaryType, types, }) {
    let result = '';
    const unsortedDeps = findTypeDependencies({ primaryType, types });
    unsortedDeps.delete(primaryType);
    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];
    for (const type of deps) {
        result += `${type}(${types[type]
            .map(({ name, type: t }) => `${t} ${name}`)
            .join(',')})`;
    }
    return result;
}
function findTypeDependencies({ primaryType: primaryType_, types, }, results = new Set()) {
    const match = primaryType_.match(/^\w*/u);
    const primaryType = match?.[0];
    if (results.has(primaryType) || types[primaryType] === undefined) {
        return results;
    }
    results.add(primaryType);
    for (const field of types[primaryType]) {
        findTypeDependencies({ primaryType: field.type, types }, results);
    }
    return results;
}
function encodeField({ types, name, type, value, }) {
    if (types[type] !== undefined) {
        return [
            { type: 'bytes32' },
            (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)(encodeData({ data: value, primaryType: type, types })),
        ];
    }
    if (type === 'bytes') {
        const prepend = value.length % 2 ? '0' : '';
        value = `0x${prepend + value.slice(2)}`;
        return [{ type: 'bytes32' }, (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)(value)];
    }
    if (type === 'string')
        return [{ type: 'bytes32' }, (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(value))];
    if (type.lastIndexOf(']') === type.length - 1) {
        const parsedType = type.slice(0, type.lastIndexOf('['));
        const typeValuePairs = value.map((item) => encodeField({
            name,
            type: parsedType,
            types,
            value: item,
        }));
        return [
            { type: 'bytes32' },
            (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.encodeAbiParameters)(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),
        ];
    }
    return [{ type }, value];
}
//# sourceMappingURL=hashTypedData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/isErc6492Signature.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/isErc6492Signature.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isErc6492Signature: () => (/* binding */ isErc6492Signature)
/* harmony export */ });
/* harmony import */ var _constants_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/bytes.js */ "./node_modules/viem/_esm/constants/bytes.js");
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");


/** Whether or not the signature is an ERC-6492 formatted signature. */
function isErc6492Signature(signature) {
    return (0,_data_slice_js__WEBPACK_IMPORTED_MODULE_1__.sliceHex)(signature, -32) === _constants_bytes_js__WEBPACK_IMPORTED_MODULE_0__.erc6492MagicBytes;
}
//# sourceMappingURL=isErc6492Signature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/parseCompactSignature.js":
/*!*************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/parseCompactSignature.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseCompactSignature: () => (/* binding */ parseCompactSignature)
/* harmony export */ });
/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/secp256k1 */ "./node_modules/viem/node_modules/@noble/curves/esm/secp256k1.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * @description Parses a hex formatted compact signature into a structured compact signature.
 *
 * @param signatureHex Signature in hex format.
 * @returns The structured signature.
 *
 * @example
 * parseCompactSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')
 * // { r: '0x...', yParityAndS: '0x...' }
 */
function parseCompactSignature(signatureHex) {
    const { r, s } = _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__.secp256k1.Signature.fromCompact(signatureHex.slice(2, 130));
    return {
        r: (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(r, { size: 32 }),
        yParityAndS: (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(s, { size: 32 }),
    };
}
//# sourceMappingURL=parseCompactSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/parseErc6492Signature.js":
/*!*************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/parseErc6492Signature.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseErc6492Signature: () => (/* binding */ parseErc6492Signature)
/* harmony export */ });
/* harmony import */ var _abi_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../abi/decodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js");
/* harmony import */ var _isErc6492Signature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isErc6492Signature.js */ "./node_modules/viem/_esm/utils/signature/isErc6492Signature.js");


/**
 * @description Parses a hex-formatted ERC-6492 flavoured signature.
 * If the signature is not in ERC-6492 format, then the underlying (original) signature is returned.
 *
 * @param signature ERC-6492 signature in hex format.
 * @returns The parsed ERC-6492 signature.
 *
 * @example
 * parseSignature('0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492')
 * // { address: '0x...', data: '0x...', signature: '0x...' }
 */
function parseErc6492Signature(signature) {
    if (!(0,_isErc6492Signature_js__WEBPACK_IMPORTED_MODULE_1__.isErc6492Signature)(signature))
        return { signature };
    const [address, data, signature_] = (0,_abi_decodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_0__.decodeAbiParameters)([{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }], signature);
    return { address, data, signature: signature_ };
}
//# sourceMappingURL=parseErc6492Signature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/parseSignature.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/parseSignature.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseSignature: () => (/* binding */ parseSignature)
/* harmony export */ });
/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/secp256k1 */ "./node_modules/viem/node_modules/@noble/curves/esm/secp256k1.js");
/* harmony import */ var _utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * @description Parses a hex formatted signature into a structured signature.
 *
 * @param signatureHex Signature in hex format.
 * @returns The structured signature.
 *
 * @example
 * parseSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')
 * // { r: '0x...', s: '0x...', v: 28n }
 */
function parseSignature(signatureHex) {
    const { r, s } = _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__.secp256k1.Signature.fromCompact(signatureHex.slice(2, 130));
    const yParityOrV = Number(`0x${signatureHex.slice(130)}`);
    const [v, yParity] = (() => {
        if (yParityOrV === 0 || yParityOrV === 1)
            return [undefined, yParityOrV];
        if (yParityOrV === 27)
            return [BigInt(yParityOrV), 0];
        if (yParityOrV === 28)
            return [BigInt(yParityOrV), 1];
        throw new Error('Invalid yParityOrV value');
    })();
    if (typeof v !== 'undefined')
        return {
            r: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(r, { size: 32 }),
            s: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(s, { size: 32 }),
            v,
            yParity,
        };
    return {
        r: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(r, { size: 32 }),
        s: (0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(s, { size: 32 }),
        yParity,
    };
}
//# sourceMappingURL=parseSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/recoverAddress.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/recoverAddress.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverAddress: () => (/* binding */ recoverAddress)
/* harmony export */ });
/* harmony import */ var _accounts_utils_publicKeyToAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/publicKeyToAddress.js */ "./node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js");
/* harmony import */ var _recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recoverPublicKey.js */ "./node_modules/viem/_esm/utils/signature/recoverPublicKey.js");


async function recoverAddress({ hash, signature, }) {
    return (0,_accounts_utils_publicKeyToAddress_js__WEBPACK_IMPORTED_MODULE_0__.publicKeyToAddress)(await (0,_recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.recoverPublicKey)({ hash, signature }));
}
//# sourceMappingURL=recoverAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/recoverMessageAddress.js":
/*!*************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/recoverMessageAddress.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverMessageAddress: () => (/* binding */ recoverMessageAddress)
/* harmony export */ });
/* harmony import */ var _hashMessage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hashMessage.js */ "./node_modules/viem/_esm/utils/signature/hashMessage.js");
/* harmony import */ var _recoverAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recoverAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverAddress.js");


async function recoverMessageAddress({ message, signature, }) {
    return (0,_recoverAddress_js__WEBPACK_IMPORTED_MODULE_1__.recoverAddress)({ hash: (0,_hashMessage_js__WEBPACK_IMPORTED_MODULE_0__.hashMessage)(message), signature });
}
//# sourceMappingURL=recoverMessageAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/recoverTransactionAddress.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/recoverTransactionAddress.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverTransactionAddress: () => (/* binding */ recoverTransactionAddress)
/* harmony export */ });
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _transaction_parseTransaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transaction/parseTransaction.js */ "./node_modules/viem/_esm/utils/transaction/parseTransaction.js");
/* harmony import */ var _transaction_serializeTransaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transaction/serializeTransaction.js */ "./node_modules/viem/_esm/utils/transaction/serializeTransaction.js");
/* harmony import */ var _recoverAddress_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./recoverAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverAddress.js");




async function recoverTransactionAddress(parameters) {
    const { serializedTransaction, signature: signature_ } = parameters;
    const transaction = (0,_transaction_parseTransaction_js__WEBPACK_IMPORTED_MODULE_1__.parseTransaction)(serializedTransaction);
    const signature = signature_ ?? {
        r: transaction.r,
        s: transaction.s,
        v: transaction.v,
        yParity: transaction.yParity,
    };
    const serialized = (0,_transaction_serializeTransaction_js__WEBPACK_IMPORTED_MODULE_2__.serializeTransaction)({
        ...transaction,
        r: undefined,
        s: undefined,
        v: undefined,
        yParity: undefined,
        sidecars: undefined,
    });
    return await (0,_recoverAddress_js__WEBPACK_IMPORTED_MODULE_3__.recoverAddress)({
        hash: (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(serialized),
        signature,
    });
}
//# sourceMappingURL=recoverTransactionAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/recoverTypedDataAddress.js":
/*!***************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/recoverTypedDataAddress.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverTypedDataAddress: () => (/* binding */ recoverTypedDataAddress)
/* harmony export */ });
/* harmony import */ var _hashTypedData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hashTypedData.js */ "./node_modules/viem/_esm/utils/signature/hashTypedData.js");
/* harmony import */ var _recoverAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recoverAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverAddress.js");


async function recoverTypedDataAddress(parameters) {
    const { domain, message, primaryType, signature, types } = parameters;
    return (0,_recoverAddress_js__WEBPACK_IMPORTED_MODULE_1__.recoverAddress)({
        hash: (0,_hashTypedData_js__WEBPACK_IMPORTED_MODULE_0__.hashTypedData)({
            domain,
            message,
            primaryType,
            types,
        }),
        signature,
    });
}
//# sourceMappingURL=recoverTypedDataAddress.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/serializeCompactSignature.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/serializeCompactSignature.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serializeCompactSignature: () => (/* binding */ serializeCompactSignature)
/* harmony export */ });
/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/secp256k1 */ "./node_modules/viem/node_modules/@noble/curves/esm/secp256k1.js");
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");


/**
 * @description Converts an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098) into hex format.
 *
 * @param signature The compact signature to convert.
 * @returns The compact signature in hex format.
 *
 * @example
 * serializeCompactSignature({
 *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',
 *   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',
 * })
 * // "0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c"
 */
function serializeCompactSignature({ r, yParityAndS, }) {
    return `0x${new _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__.secp256k1.Signature((0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_1__.hexToBigInt)(r), (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_1__.hexToBigInt)(yParityAndS)).toCompactHex()}`;
}
//# sourceMappingURL=serializeCompactSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/serializeErc6492Signature.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/serializeErc6492Signature.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serializeErc6492Signature: () => (/* binding */ serializeErc6492Signature)
/* harmony export */ });
/* harmony import */ var _constants_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/bytes.js */ "./node_modules/viem/_esm/constants/bytes.js");
/* harmony import */ var _abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../abi/encodeAbiParameters.js */ "./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js");
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");




/**
 * @description Serializes a ERC-6492 flavoured signature into hex format.
 *
 * @param signature ERC-6492 signature in object format.
 * @returns ERC-6492 signature in hex format.
 *
 * @example
 * serializeSignature({ address: '0x...', data: '0x...', signature: '0x...' })
 * // '0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492'
 */
function serializeErc6492Signature(parameters) {
    const { address, data, signature, to = 'hex' } = parameters;
    const signature_ = (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_2__.concatHex)([
        (0,_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)([{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }], [address, data, signature]),
        _constants_bytes_js__WEBPACK_IMPORTED_MODULE_0__.erc6492MagicBytes,
    ]);
    if (to === 'hex')
        return signature_;
    return (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(signature_);
}
//# sourceMappingURL=serializeErc6492Signature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/serializeSignature.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/serializeSignature.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serializeSignature: () => (/* binding */ serializeSignature)
/* harmony export */ });
/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/secp256k1 */ "./node_modules/viem/node_modules/@noble/curves/esm/secp256k1.js");
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");



/**
 * @description Converts a signature into hex format.
 *
 * @param signature The signature to convert.
 * @returns The signature in hex format.
 *
 * @example
 * serializeSignature({
 *   r: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf',
 *   s: '0x4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8',
 *   yParity: 1
 * })
 * // "0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c"
 */
function serializeSignature({ r, s, to = 'hex', v, yParity, }) {
    const yParity_ = (() => {
        if (yParity === 0 || yParity === 1)
            return yParity;
        if (v && (v === 27n || v === 28n || v >= 35n))
            return v % 2n === 0n ? 1 : 0;
        throw new Error('Invalid `v` or `yParity` value');
    })();
    const signature = `0x${new _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__.secp256k1.Signature((0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_1__.hexToBigInt)(r), (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_1__.hexToBigInt)(s)).toCompactHex()}${yParity_ === 0 ? '1b' : '1c'}`;
    if (to === 'hex')
        return signature;
    return (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(signature);
}
//# sourceMappingURL=serializeSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/signatureToCompactSignature.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/signatureToCompactSignature.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   signatureToCompactSignature: () => (/* binding */ signatureToCompactSignature)
/* harmony export */ });
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");


/**
 * @description Converts a signature into an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098).
 *
 * @param signature The signature to convert.
 * @returns The signature in compact format.
 *
 * @example
 * signatureToCompactSignature({
 *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',
 *   s: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',
 *   yParity: 0
 * })
 * // {
 * //   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',
 * //   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'
 * // }
 */
function signatureToCompactSignature(signature) {
    const { r, s, v, yParity } = signature;
    const yParity_ = Number(yParity ?? v - 27n);
    let yParityAndS = s;
    if (yParity_ === 1) {
        const bytes = (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(s);
        bytes[0] |= 0x80;
        yParityAndS = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(bytes);
    }
    return { r, yParityAndS };
}
//# sourceMappingURL=signatureToCompactSignature.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/verifyHash.js":
/*!**************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/verifyHash.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   verifyHash: () => (/* binding */ verifyHash)
/* harmony export */ });
/* harmony import */ var _address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");
/* harmony import */ var _recoverAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recoverAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverAddress.js");



/**
 * Verify that a message was signed by the provided address.
 *
 * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.
 *        It is highly recommended to use `publicClient.verifyHash` instead to ensure
 *        wallet interoperability.
 *
 * - Docs {@link https://viem.sh/docs/utilities/verifyHash}
 *
 * @param parameters - {@link VerifyHashParameters}
 * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}
 */
async function verifyHash({ address, hash, signature, }) {
    return (0,_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__.isAddressEqual)((0,_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.getAddress)(address), await (0,_recoverAddress_js__WEBPACK_IMPORTED_MODULE_2__.recoverAddress)({ hash, signature }));
}
//# sourceMappingURL=verifyHash.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/verifyMessage.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/verifyMessage.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   verifyMessage: () => (/* binding */ verifyMessage)
/* harmony export */ });
/* harmony import */ var _address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");
/* harmony import */ var _recoverMessageAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recoverMessageAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverMessageAddress.js");



/**
 * Verify that a message was signed by the provided address.
 *
 * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.
 *        It is highly recommended to use `publicClient.verifyMessage` instead to ensure
 *        wallet interoperability.
 *
 * - Docs {@link https://viem.sh/docs/utilities/verifyMessage}
 *
 * @param parameters - {@link VerifyMessageParameters}
 * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}
 */
async function verifyMessage({ address, message, signature, }) {
    return (0,_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__.isAddressEqual)((0,_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.getAddress)(address), await (0,_recoverMessageAddress_js__WEBPACK_IMPORTED_MODULE_2__.recoverMessageAddress)({ message, signature }));
}
//# sourceMappingURL=verifyMessage.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/signature/verifyTypedData.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/verifyTypedData.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   verifyTypedData: () => (/* binding */ verifyTypedData)
/* harmony export */ });
/* harmony import */ var _address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../address/getAddress.js */ "./node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");
/* harmony import */ var _recoverTypedDataAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recoverTypedDataAddress.js */ "./node_modules/viem/_esm/utils/signature/recoverTypedDataAddress.js");



/**
 * Verify that typed data was signed by the provided address.
 *
 * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.
 *        It is highly recommended to use `publicClient.verifyTypedData` instead to ensure
 *        wallet interoperability.
 *
 * - Docs {@link https://viem.sh/docs/utilities/verifyTypedData}
 *
 * @param parameters - {@link VerifyTypedDataParameters}
 * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}
 */
async function verifyTypedData(parameters) {
    const { address, domain, message, primaryType, signature, types } = parameters;
    return (0,_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__.isAddressEqual)((0,_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.getAddress)(address), await (0,_recoverTypedDataAddress_js__WEBPACK_IMPORTED_MODULE_2__.recoverTypedDataAddress)({
        domain,
        message,
        primaryType,
        signature,
        types,
    }));
}
//# sourceMappingURL=verifyTypedData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/siwe/parseSiweMessage.js":
/*!***************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/siwe/parseSiweMessage.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseSiweMessage: () => (/* binding */ parseSiweMessage)
/* harmony export */ });
/**
 * @description Parses EIP-4361 formatted message into message fields object.
 *
 * @see https://eips.ethereum.org/EIPS/eip-4361
 *
 * @returns EIP-4361 fields object
 */
function parseSiweMessage(message) {
    const { scheme, statement, ...prefix } = (message.match(prefixRegex)
        ?.groups ?? {});
    const { chainId, expirationTime, issuedAt, notBefore, requestId, ...suffix } = (message.match(suffixRegex)?.groups ?? {});
    const resources = message.split('Resources:')[1]?.split('\n- ').slice(1);
    return {
        ...prefix,
        ...suffix,
        ...(chainId ? { chainId: Number(chainId) } : {}),
        ...(expirationTime ? { expirationTime: new Date(expirationTime) } : {}),
        ...(issuedAt ? { issuedAt: new Date(issuedAt) } : {}),
        ...(notBefore ? { notBefore: new Date(notBefore) } : {}),
        ...(requestId ? { requestId } : {}),
        ...(resources ? { resources } : {}),
        ...(scheme ? { scheme } : {}),
        ...(statement ? { statement } : {}),
    };
}
// https://regexr.com/80gdj
const prefixRegex = /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\/\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\n)(?<address>0x[a-fA-F0-9]{40})\n\n(?:(?<statement>.*)\n\n)?/;
// https://regexr.com/80gf9
const suffixRegex = /(?:URI: (?<uri>.+))\n(?:Version: (?<version>.+))\n(?:Chain ID: (?<chainId>\d+))\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\n(?:Issued At: (?<issuedAt>.+))(?:\nExpiration Time: (?<expirationTime>.+))?(?:\nNot Before: (?<notBefore>.+))?(?:\nRequest ID: (?<requestId>.+))?/;
//# sourceMappingURL=parseSiweMessage.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/siwe/validateSiweMessage.js":
/*!******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/siwe/validateSiweMessage.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   validateSiweMessage: () => (/* binding */ validateSiweMessage)
/* harmony export */ });
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../address/isAddressEqual.js */ "./node_modules/viem/_esm/utils/address/isAddressEqual.js");


/**
 * @description Validates EIP-4361 message.
 *
 * @see https://eips.ethereum.org/EIPS/eip-4361
 */
function validateSiweMessage(parameters) {
    const { address, domain, message, nonce, scheme, time = new Date(), } = parameters;
    if (domain && message.domain !== domain)
        return false;
    if (nonce && message.nonce !== nonce)
        return false;
    if (scheme && message.scheme !== scheme)
        return false;
    if (message.expirationTime && time >= message.expirationTime)
        return false;
    if (message.notBefore && time < message.notBefore)
        return false;
    try {
        if (!message.address)
            return false;
        if (!(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_0__.isAddress)(message.address, { strict: false }))
            return false;
        if (address && !(0,_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_1__.isAddressEqual)(message.address, address))
            return false;
    }
    catch {
        return false;
    }
    return true;
}
//# sourceMappingURL=validateSiweMessage.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/stateOverride.js":
/*!*******************************************************!*\
  !*** ./node_modules/viem/_esm/utils/stateOverride.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serializeAccountStateOverride: () => (/* binding */ serializeAccountStateOverride),
/* harmony export */   serializeStateMapping: () => (/* binding */ serializeStateMapping),
/* harmony export */   serializeStateOverride: () => (/* binding */ serializeStateOverride)
/* harmony export */ });
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _errors_data_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/data.js */ "./node_modules/viem/_esm/errors/data.js");
/* harmony import */ var _errors_stateOverride_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors/stateOverride.js */ "./node_modules/viem/_esm/errors/stateOverride.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");





/** @internal */
function serializeStateMapping(stateMapping) {
    if (!stateMapping || stateMapping.length === 0)
        return undefined;
    return stateMapping.reduce((acc, { slot, value }) => {
        if (slot.length !== 66)
            throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_1__.InvalidBytesLengthError({
                size: slot.length,
                targetSize: 66,
                type: 'hex',
            });
        if (value.length !== 66)
            throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_1__.InvalidBytesLengthError({
                size: value.length,
                targetSize: 66,
                type: 'hex',
            });
        acc[slot] = value;
        return acc;
    }, {});
}
/** @internal */
function serializeAccountStateOverride(parameters) {
    const { balance, nonce, state, stateDiff, code } = parameters;
    const rpcAccountStateOverride = {};
    if (code !== undefined)
        rpcAccountStateOverride.code = code;
    if (balance !== undefined)
        rpcAccountStateOverride.balance = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(balance);
    if (nonce !== undefined)
        rpcAccountStateOverride.nonce = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(nonce);
    if (state !== undefined)
        rpcAccountStateOverride.state = serializeStateMapping(state);
    if (stateDiff !== undefined) {
        if (rpcAccountStateOverride.state)
            throw new _errors_stateOverride_js__WEBPACK_IMPORTED_MODULE_2__.StateAssignmentConflictError();
        rpcAccountStateOverride.stateDiff = serializeStateMapping(stateDiff);
    }
    return rpcAccountStateOverride;
}
/** @internal */
function serializeStateOverride(parameters) {
    if (!parameters)
        return undefined;
    const rpcStateOverride = {};
    for (const { address, ...accountState } of parameters) {
        if (!(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_3__.isAddress)(address, { strict: false }))
            throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address });
        if (rpcStateOverride[address])
            throw new _errors_stateOverride_js__WEBPACK_IMPORTED_MODULE_2__.AccountStateConflictError({ address: address });
        rpcStateOverride[address] = serializeAccountStateOverride(accountState);
    }
    return rpcStateOverride;
}
//# sourceMappingURL=stateOverride.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/stringify.js":
/*!***************************************************!*\
  !*** ./node_modules/viem/_esm/utils/stringify.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   stringify: () => (/* binding */ stringify)
/* harmony export */ });
const stringify = (value, replacer, space) => JSON.stringify(value, (key, value_) => {
    const value = typeof value_ === 'bigint' ? value_.toString() : value_;
    return typeof replacer === 'function' ? replacer(key, value) : value;
}, space);
//# sourceMappingURL=stringify.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/transaction/assertRequest.js":
/*!*******************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/transaction/assertRequest.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertRequest: () => (/* binding */ assertRequest)
/* harmony export */ });
/* harmony import */ var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/parseAccount.js */ "./node_modules/viem/_esm/accounts/utils/parseAccount.js");
/* harmony import */ var _constants_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/number.js */ "./node_modules/viem/_esm/constants/number.js");
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");






function assertRequest(args) {
    const { account: account_, gasPrice, maxFeePerGas, maxPriorityFeePerGas, to, } = args;
    const account = account_ ? (0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.parseAccount)(account_) : undefined;
    if (account && !(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_5__.isAddress)(account.address))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError({ address: account.address });
    if (to && !(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_5__.isAddress)(to))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError({ address: to });
    if (typeof gasPrice !== 'undefined' &&
        (typeof maxFeePerGas !== 'undefined' ||
            typeof maxPriorityFeePerGas !== 'undefined'))
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_4__.FeeConflictError();
    if (maxFeePerGas && maxFeePerGas > _constants_number_js__WEBPACK_IMPORTED_MODULE_1__.maxUint256)
        throw new _errors_node_js__WEBPACK_IMPORTED_MODULE_3__.FeeCapTooHighError({ maxFeePerGas });
    if (maxPriorityFeePerGas &&
        maxFeePerGas &&
        maxPriorityFeePerGas > maxFeePerGas)
        throw new _errors_node_js__WEBPACK_IMPORTED_MODULE_3__.TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });
}
//# sourceMappingURL=assertRequest.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/transaction/assertTransaction.js":
/*!***********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/transaction/assertTransaction.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertTransactionEIP1559: () => (/* binding */ assertTransactionEIP1559),
/* harmony export */   assertTransactionEIP2930: () => (/* binding */ assertTransactionEIP2930),
/* harmony export */   assertTransactionEIP4844: () => (/* binding */ assertTransactionEIP4844),
/* harmony export */   assertTransactionEIP7702: () => (/* binding */ assertTransactionEIP7702),
/* harmony export */   assertTransactionLegacy: () => (/* binding */ assertTransactionLegacy)
/* harmony export */ });
/* harmony import */ var _constants_kzg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/kzg.js */ "./node_modules/viem/_esm/constants/kzg.js");
/* harmony import */ var _constants_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/number.js */ "./node_modules/viem/_esm/constants/number.js");
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _errors_blob_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../errors/blob.js */ "./node_modules/viem/_esm/errors/blob.js");
/* harmony import */ var _errors_chain_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../errors/chain.js */ "./node_modules/viem/_esm/errors/chain.js");
/* harmony import */ var _errors_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../errors/node.js */ "./node_modules/viem/_esm/errors/node.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");











function assertTransactionEIP7702(transaction) {
    const { authorizationList } = transaction;
    if (authorizationList) {
        for (const authorization of authorizationList) {
            const { chainId } = authorization;
            const address = authorization.address;
            if (!(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_7__.isAddress)(address))
                throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError({ address });
            if (chainId < 0)
                throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_5__.InvalidChainIdError({ chainId });
        }
    }
    assertTransactionEIP1559(transaction);
}
function assertTransactionEIP4844(transaction) {
    const { blobVersionedHashes } = transaction;
    if (blobVersionedHashes) {
        if (blobVersionedHashes.length === 0)
            throw new _errors_blob_js__WEBPACK_IMPORTED_MODULE_4__.EmptyBlobError();
        for (const hash of blobVersionedHashes) {
            const size_ = (0,_data_size_js__WEBPACK_IMPORTED_MODULE_8__.size)(hash);
            const version = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_10__.hexToNumber)((0,_data_slice_js__WEBPACK_IMPORTED_MODULE_9__.slice)(hash, 0, 1));
            if (size_ !== 32)
                throw new _errors_blob_js__WEBPACK_IMPORTED_MODULE_4__.InvalidVersionedHashSizeError({ hash, size: size_ });
            if (version !== _constants_kzg_js__WEBPACK_IMPORTED_MODULE_0__.versionedHashVersionKzg)
                throw new _errors_blob_js__WEBPACK_IMPORTED_MODULE_4__.InvalidVersionedHashVersionError({
                    hash,
                    version,
                });
        }
    }
    assertTransactionEIP1559(transaction);
}
function assertTransactionEIP1559(transaction) {
    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;
    if (chainId <= 0)
        throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_5__.InvalidChainIdError({ chainId });
    if (to && !(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_7__.isAddress)(to))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError({ address: to });
    if (maxFeePerGas && maxFeePerGas > _constants_number_js__WEBPACK_IMPORTED_MODULE_1__.maxUint256)
        throw new _errors_node_js__WEBPACK_IMPORTED_MODULE_6__.FeeCapTooHighError({ maxFeePerGas });
    if (maxPriorityFeePerGas &&
        maxFeePerGas &&
        maxPriorityFeePerGas > maxFeePerGas)
        throw new _errors_node_js__WEBPACK_IMPORTED_MODULE_6__.TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });
}
function assertTransactionEIP2930(transaction) {
    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;
    if (chainId <= 0)
        throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_5__.InvalidChainIdError({ chainId });
    if (to && !(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_7__.isAddress)(to))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError({ address: to });
    if (maxPriorityFeePerGas || maxFeePerGas)
        throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_3__.BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');
    if (gasPrice && gasPrice > _constants_number_js__WEBPACK_IMPORTED_MODULE_1__.maxUint256)
        throw new _errors_node_js__WEBPACK_IMPORTED_MODULE_6__.FeeCapTooHighError({ maxFeePerGas: gasPrice });
}
function assertTransactionLegacy(transaction) {
    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;
    if (to && !(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_7__.isAddress)(to))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError({ address: to });
    if (typeof chainId !== 'undefined' && chainId <= 0)
        throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_5__.InvalidChainIdError({ chainId });
    if (maxPriorityFeePerGas || maxFeePerGas)
        throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_3__.BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');
    if (gasPrice && gasPrice > _constants_number_js__WEBPACK_IMPORTED_MODULE_1__.maxUint256)
        throw new _errors_node_js__WEBPACK_IMPORTED_MODULE_6__.FeeCapTooHighError({ maxFeePerGas: gasPrice });
}
//# sourceMappingURL=assertTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/transaction/getSerializedTransactionType.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/transaction/getSerializedTransactionType.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getSerializedTransactionType: () => (/* binding */ getSerializedTransactionType)
/* harmony export */ });
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _data_slice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/slice.js */ "./node_modules/viem/_esm/utils/data/slice.js");
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");



function getSerializedTransactionType(serializedTransaction) {
    const serializedType = (0,_data_slice_js__WEBPACK_IMPORTED_MODULE_1__.sliceHex)(serializedTransaction, 0, 1);
    if (serializedType === '0x04')
        return 'eip7702';
    if (serializedType === '0x03')
        return 'eip4844';
    if (serializedType === '0x02')
        return 'eip1559';
    if (serializedType === '0x01')
        return 'eip2930';
    if (serializedType !== '0x' && (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(serializedType) >= 0xc0)
        return 'legacy';
    throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__.InvalidSerializedTransactionTypeError({ serializedType });
}
//# sourceMappingURL=getSerializedTransactionType.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/transaction/getTransactionType.js":
/*!************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/transaction/getTransactionType.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTransactionType: () => (/* binding */ getTransactionType)
/* harmony export */ });
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");

function getTransactionType(transaction) {
    if (transaction.type)
        return transaction.type;
    if (typeof transaction.authorizationList !== 'undefined')
        return 'eip7702';
    if (typeof transaction.blobs !== 'undefined' ||
        typeof transaction.blobVersionedHashes !== 'undefined' ||
        typeof transaction.maxFeePerBlobGas !== 'undefined' ||
        typeof transaction.sidecars !== 'undefined')
        return 'eip4844';
    if (typeof transaction.maxFeePerGas !== 'undefined' ||
        typeof transaction.maxPriorityFeePerGas !== 'undefined') {
        return 'eip1559';
    }
    if (typeof transaction.gasPrice !== 'undefined') {
        if (typeof transaction.accessList !== 'undefined')
            return 'eip2930';
        return 'legacy';
    }
    throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__.InvalidSerializableTransactionError({ transaction });
}
//# sourceMappingURL=getTransactionType.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/transaction/parseTransaction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/transaction/parseTransaction.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAccessList: () => (/* binding */ parseAccessList),
/* harmony export */   parseTransaction: () => (/* binding */ parseTransaction),
/* harmony export */   toTransactionArray: () => (/* binding */ toTransactionArray)
/* harmony export */ });
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _blob_toBlobSidecars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blob/toBlobSidecars.js */ "./node_modules/viem/_esm/utils/blob/toBlobSidecars.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _data_trim_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/trim.js */ "./node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _encoding_fromRlp_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../encoding/fromRlp.js */ "./node_modules/viem/_esm/utils/encoding/fromRlp.js");
/* harmony import */ var _hash_isHash_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../hash/isHash.js */ "./node_modules/viem/_esm/utils/hash/isHash.js");
/* harmony import */ var _assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./assertTransaction.js */ "./node_modules/viem/_esm/utils/transaction/assertTransaction.js");
/* harmony import */ var _getSerializedTransactionType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./getSerializedTransactionType.js */ "./node_modules/viem/_esm/utils/transaction/getSerializedTransactionType.js");












function parseTransaction(serializedTransaction) {
    const type = (0,_getSerializedTransactionType_js__WEBPACK_IMPORTED_MODULE_11__.getSerializedTransactionType)(serializedTransaction);
    if (type === 'eip1559')
        return parseTransactionEIP1559(serializedTransaction);
    if (type === 'eip2930')
        return parseTransactionEIP2930(serializedTransaction);
    if (type === 'eip4844')
        return parseTransactionEIP4844(serializedTransaction);
    if (type === 'eip7702')
        return parseTransactionEIP7702(serializedTransaction);
    return parseTransactionLegacy(serializedTransaction);
}
function parseTransactionEIP7702(serializedTransaction) {
    const transactionArray = toTransactionArray(serializedTransaction);
    const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gas, to, value, data, accessList, authorizationList, v, r, s,] = transactionArray;
    if (transactionArray.length !== 10 && transactionArray.length !== 13)
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.InvalidSerializedTransactionError({
            attributes: {
                chainId,
                nonce,
                maxPriorityFeePerGas,
                maxFeePerGas,
                gas,
                to,
                value,
                data,
                accessList,
                authorizationList,
                ...(transactionArray.length > 9
                    ? {
                        v,
                        r,
                        s,
                    }
                    : {}),
            },
            serializedTransaction,
            type: 'eip7702',
        });
    const transaction = {
        chainId: (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(chainId),
        type: 'eip7702',
    };
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(to) && to !== '0x')
        transaction.to = to;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(gas) && gas !== '0x')
        transaction.gas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(gas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(data) && data !== '0x')
        transaction.data = data;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(nonce))
        transaction.nonce = nonce === '0x' ? 0 : (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(nonce);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(value) && value !== '0x')
        transaction.value = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(value);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(maxFeePerGas) && maxFeePerGas !== '0x')
        transaction.maxFeePerGas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(maxFeePerGas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(maxPriorityFeePerGas) && maxPriorityFeePerGas !== '0x')
        transaction.maxPriorityFeePerGas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(maxPriorityFeePerGas);
    if (accessList.length !== 0 && accessList !== '0x')
        transaction.accessList = parseAccessList(accessList);
    if (authorizationList.length !== 0 && authorizationList !== '0x')
        transaction.authorizationList = parseAuthorizationList(authorizationList);
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionEIP7702)(transaction);
    const signature = transactionArray.length === 13
        ? parseEIP155Signature(transactionArray)
        : undefined;
    return { ...signature, ...transaction };
}
function parseTransactionEIP4844(serializedTransaction) {
    const transactionOrWrapperArray = toTransactionArray(serializedTransaction);
    const hasNetworkWrapper = transactionOrWrapperArray.length === 4;
    const transactionArray = hasNetworkWrapper
        ? transactionOrWrapperArray[0]
        : transactionOrWrapperArray;
    const wrapperArray = hasNetworkWrapper
        ? transactionOrWrapperArray.slice(1)
        : [];
    const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gas, to, value, data, accessList, maxFeePerBlobGas, blobVersionedHashes, v, r, s,] = transactionArray;
    const [blobs, commitments, proofs] = wrapperArray;
    if (!(transactionArray.length === 11 || transactionArray.length === 14))
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.InvalidSerializedTransactionError({
            attributes: {
                chainId,
                nonce,
                maxPriorityFeePerGas,
                maxFeePerGas,
                gas,
                to,
                value,
                data,
                accessList,
                ...(transactionArray.length > 9
                    ? {
                        v,
                        r,
                        s,
                    }
                    : {}),
            },
            serializedTransaction,
            type: 'eip4844',
        });
    const transaction = {
        blobVersionedHashes: blobVersionedHashes,
        chainId: (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(chainId),
        type: 'eip4844',
    };
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(to) && to !== '0x')
        transaction.to = to;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(gas) && gas !== '0x')
        transaction.gas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(gas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(data) && data !== '0x')
        transaction.data = data;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(nonce))
        transaction.nonce = nonce === '0x' ? 0 : (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(nonce);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(value) && value !== '0x')
        transaction.value = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(value);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(maxFeePerBlobGas) && maxFeePerBlobGas !== '0x')
        transaction.maxFeePerBlobGas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(maxFeePerBlobGas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(maxFeePerGas) && maxFeePerGas !== '0x')
        transaction.maxFeePerGas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(maxFeePerGas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(maxPriorityFeePerGas) && maxPriorityFeePerGas !== '0x')
        transaction.maxPriorityFeePerGas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(maxPriorityFeePerGas);
    if (accessList.length !== 0 && accessList !== '0x')
        transaction.accessList = parseAccessList(accessList);
    if (blobs && commitments && proofs)
        transaction.sidecars = (0,_blob_toBlobSidecars_js__WEBPACK_IMPORTED_MODULE_3__.toBlobSidecars)({
            blobs: blobs,
            commitments: commitments,
            proofs: proofs,
        });
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionEIP4844)(transaction);
    const signature = transactionArray.length === 14
        ? parseEIP155Signature(transactionArray)
        : undefined;
    return { ...signature, ...transaction };
}
function parseTransactionEIP1559(serializedTransaction) {
    const transactionArray = toTransactionArray(serializedTransaction);
    const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gas, to, value, data, accessList, v, r, s,] = transactionArray;
    if (!(transactionArray.length === 9 || transactionArray.length === 12))
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.InvalidSerializedTransactionError({
            attributes: {
                chainId,
                nonce,
                maxPriorityFeePerGas,
                maxFeePerGas,
                gas,
                to,
                value,
                data,
                accessList,
                ...(transactionArray.length > 9
                    ? {
                        v,
                        r,
                        s,
                    }
                    : {}),
            },
            serializedTransaction,
            type: 'eip1559',
        });
    const transaction = {
        chainId: (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(chainId),
        type: 'eip1559',
    };
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(to) && to !== '0x')
        transaction.to = to;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(gas) && gas !== '0x')
        transaction.gas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(gas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(data) && data !== '0x')
        transaction.data = data;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(nonce))
        transaction.nonce = nonce === '0x' ? 0 : (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(nonce);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(value) && value !== '0x')
        transaction.value = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(value);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(maxFeePerGas) && maxFeePerGas !== '0x')
        transaction.maxFeePerGas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(maxFeePerGas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(maxPriorityFeePerGas) && maxPriorityFeePerGas !== '0x')
        transaction.maxPriorityFeePerGas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(maxPriorityFeePerGas);
    if (accessList.length !== 0 && accessList !== '0x')
        transaction.accessList = parseAccessList(accessList);
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionEIP1559)(transaction);
    const signature = transactionArray.length === 12
        ? parseEIP155Signature(transactionArray)
        : undefined;
    return { ...signature, ...transaction };
}
function parseTransactionEIP2930(serializedTransaction) {
    const transactionArray = toTransactionArray(serializedTransaction);
    const [chainId, nonce, gasPrice, gas, to, value, data, accessList, v, r, s] = transactionArray;
    if (!(transactionArray.length === 8 || transactionArray.length === 11))
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.InvalidSerializedTransactionError({
            attributes: {
                chainId,
                nonce,
                gasPrice,
                gas,
                to,
                value,
                data,
                accessList,
                ...(transactionArray.length > 8
                    ? {
                        v,
                        r,
                        s,
                    }
                    : {}),
            },
            serializedTransaction,
            type: 'eip2930',
        });
    const transaction = {
        chainId: (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(chainId),
        type: 'eip2930',
    };
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(to) && to !== '0x')
        transaction.to = to;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(gas) && gas !== '0x')
        transaction.gas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(gas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(data) && data !== '0x')
        transaction.data = data;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(nonce))
        transaction.nonce = nonce === '0x' ? 0 : (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(nonce);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(value) && value !== '0x')
        transaction.value = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(value);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(gasPrice) && gasPrice !== '0x')
        transaction.gasPrice = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(gasPrice);
    if (accessList.length !== 0 && accessList !== '0x')
        transaction.accessList = parseAccessList(accessList);
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionEIP2930)(transaction);
    const signature = transactionArray.length === 11
        ? parseEIP155Signature(transactionArray)
        : undefined;
    return { ...signature, ...transaction };
}
function parseTransactionLegacy(serializedTransaction) {
    const transactionArray = (0,_encoding_fromRlp_js__WEBPACK_IMPORTED_MODULE_8__.fromRlp)(serializedTransaction, 'hex');
    const [nonce, gasPrice, gas, to, value, data, chainIdOrV_, r, s] = transactionArray;
    if (!(transactionArray.length === 6 || transactionArray.length === 9))
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.InvalidSerializedTransactionError({
            attributes: {
                nonce,
                gasPrice,
                gas,
                to,
                value,
                data,
                ...(transactionArray.length > 6
                    ? {
                        v: chainIdOrV_,
                        r,
                        s,
                    }
                    : {}),
            },
            serializedTransaction,
            type: 'legacy',
        });
    const transaction = {
        type: 'legacy',
    };
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(to) && to !== '0x')
        transaction.to = to;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(gas) && gas !== '0x')
        transaction.gas = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(gas);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(data) && data !== '0x')
        transaction.data = data;
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(nonce))
        transaction.nonce = nonce === '0x' ? 0 : (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(nonce);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(value) && value !== '0x')
        transaction.value = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(value);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(gasPrice) && gasPrice !== '0x')
        transaction.gasPrice = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(gasPrice);
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionLegacy)(transaction);
    if (transactionArray.length === 6)
        return transaction;
    const chainIdOrV = (0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_4__.isHex)(chainIdOrV_) && chainIdOrV_ !== '0x'
        ? (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(chainIdOrV_)
        : 0n;
    if (s === '0x' && r === '0x') {
        if (chainIdOrV > 0)
            transaction.chainId = Number(chainIdOrV);
        return transaction;
    }
    const v = chainIdOrV;
    const chainId = Number((v - 35n) / 2n);
    if (chainId > 0)
        transaction.chainId = chainId;
    else if (v !== 27n && v !== 28n)
        throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.InvalidLegacyVError({ v });
    transaction.v = v;
    transaction.s = s;
    transaction.r = r;
    transaction.yParity = v % 2n === 0n ? 1 : 0;
    return transaction;
}
function toTransactionArray(serializedTransaction) {
    return (0,_encoding_fromRlp_js__WEBPACK_IMPORTED_MODULE_8__.fromRlp)(`0x${serializedTransaction.slice(4)}`, 'hex');
}
function parseAccessList(accessList_) {
    const accessList = [];
    for (let i = 0; i < accessList_.length; i++) {
        const [address, storageKeys] = accessList_[i];
        if (!(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address, { strict: false }))
            throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address });
        accessList.push({
            address: address,
            storageKeys: storageKeys.map((key) => ((0,_hash_isHash_js__WEBPACK_IMPORTED_MODULE_9__.isHash)(key) ? key : (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_6__.trim)(key))),
        });
    }
    return accessList;
}
function parseAuthorizationList(serializedAuthorizationList) {
    const authorizationList = [];
    for (let i = 0; i < serializedAuthorizationList.length; i++) {
        const [chainId, address, nonce, yParity, r, s] = serializedAuthorizationList[i];
        authorizationList.push({
            address,
            chainId: chainId === '0x' ? 0 : (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(chainId),
            nonce: nonce === '0x' ? 0 : (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToNumber)(nonce),
            ...parseEIP155Signature([yParity, r, s]),
        });
    }
    return authorizationList;
}
function parseEIP155Signature(transactionArray) {
    const signature = transactionArray.slice(-3);
    const v = signature[0] === '0x' || (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_7__.hexToBigInt)(signature[0]) === 0n ? 27n : 28n;
    return {
        r: (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_5__.padHex)(signature[1], { size: 32 }),
        s: (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_5__.padHex)(signature[2], { size: 32 }),
        v,
        yParity: v === 27n ? 0 : 1,
    };
}
//# sourceMappingURL=parseTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/transaction/serializeAccessList.js":
/*!*************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/transaction/serializeAccessList.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serializeAccessList: () => (/* binding */ serializeAccessList)
/* harmony export */ });
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");



/*
 * Serialize an  EIP-2930 access list
 * @remarks
 * Use to create a transaction serializer with support for EIP-2930 access lists
 *
 * @param accessList - Array of objects of address and arrays of Storage Keys
 * @throws InvalidAddressError, InvalidStorageKeySizeError
 * @returns Array of hex strings
 */
function serializeAccessList(accessList) {
    if (!accessList || accessList.length === 0)
        return [];
    const serializedAccessList = [];
    for (let i = 0; i < accessList.length; i++) {
        const { address, storageKeys } = accessList[i];
        for (let j = 0; j < storageKeys.length; j++) {
            if (storageKeys[j].length - 2 !== 64) {
                throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.InvalidStorageKeySizeError({ storageKey: storageKeys[j] });
            }
        }
        if (!(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address, { strict: false })) {
            throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address });
        }
        serializedAccessList.push([address, storageKeys]);
    }
    return serializedAccessList;
}
//# sourceMappingURL=serializeAccessList.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/transaction/serializeTransaction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/transaction/serializeTransaction.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serializeTransaction: () => (/* binding */ serializeTransaction),
/* harmony export */   toYParitySignatureArray: () => (/* binding */ toYParitySignatureArray)
/* harmony export */ });
/* harmony import */ var _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/transaction.js */ "./node_modules/viem/_esm/errors/transaction.js");
/* harmony import */ var _authorization_serializeAuthorizationList_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../authorization/serializeAuthorizationList.js */ "./node_modules/viem/_esm/utils/authorization/serializeAuthorizationList.js");
/* harmony import */ var _blob_blobsToCommitments_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../blob/blobsToCommitments.js */ "./node_modules/viem/_esm/utils/blob/blobsToCommitments.js");
/* harmony import */ var _blob_blobsToProofs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blob/blobsToProofs.js */ "./node_modules/viem/_esm/utils/blob/blobsToProofs.js");
/* harmony import */ var _blob_commitmentsToVersionedHashes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../blob/commitmentsToVersionedHashes.js */ "./node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js");
/* harmony import */ var _blob_toBlobSidecars_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../blob/toBlobSidecars.js */ "./node_modules/viem/_esm/utils/blob/toBlobSidecars.js");
/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/concat.js */ "./node_modules/viem/_esm/utils/data/concat.js");
/* harmony import */ var _data_trim_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../data/trim.js */ "./node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../encoding/toRlp.js */ "./node_modules/viem/_esm/utils/encoding/toRlp.js");
/* harmony import */ var _assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./assertTransaction.js */ "./node_modules/viem/_esm/utils/transaction/assertTransaction.js");
/* harmony import */ var _getTransactionType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./getTransactionType.js */ "./node_modules/viem/_esm/utils/transaction/getTransactionType.js");
/* harmony import */ var _serializeAccessList_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./serializeAccessList.js */ "./node_modules/viem/_esm/utils/transaction/serializeAccessList.js");













function serializeTransaction(transaction, signature) {
    const type = (0,_getTransactionType_js__WEBPACK_IMPORTED_MODULE_11__.getTransactionType)(transaction);
    if (type === 'eip1559')
        return serializeTransactionEIP1559(transaction, signature);
    if (type === 'eip2930')
        return serializeTransactionEIP2930(transaction, signature);
    if (type === 'eip4844')
        return serializeTransactionEIP4844(transaction, signature);
    if (type === 'eip7702')
        return serializeTransactionEIP7702(transaction, signature);
    return serializeTransactionLegacy(transaction, signature);
}
function serializeTransactionEIP7702(transaction, signature) {
    const { authorizationList, chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionEIP7702)(transaction);
    const serializedAccessList = (0,_serializeAccessList_js__WEBPACK_IMPORTED_MODULE_12__.serializeAccessList)(accessList);
    const serializedAuthorizationList = (0,_authorization_serializeAuthorizationList_js__WEBPACK_IMPORTED_MODULE_1__.serializeAuthorizationList)(authorizationList);
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_6__.concatHex)([
        '0x04',
        (0,_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_9__.toRlp)([
            (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(chainId),
            nonce ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(nonce) : '0x',
            maxPriorityFeePerGas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(maxPriorityFeePerGas) : '0x',
            maxFeePerGas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(maxFeePerGas) : '0x',
            gas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(gas) : '0x',
            to ?? '0x',
            value ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(value) : '0x',
            data ?? '0x',
            serializedAccessList,
            serializedAuthorizationList,
            ...toYParitySignatureArray(transaction, signature),
        ]),
    ]);
}
function serializeTransactionEIP4844(transaction, signature) {
    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionEIP4844)(transaction);
    let blobVersionedHashes = transaction.blobVersionedHashes;
    let sidecars = transaction.sidecars;
    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.
    if (transaction.blobs &&
        (typeof blobVersionedHashes === 'undefined' ||
            typeof sidecars === 'undefined')) {
        const blobs = (typeof transaction.blobs[0] === 'string'
            ? transaction.blobs
            : transaction.blobs.map((x) => (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.bytesToHex)(x)));
        const kzg = transaction.kzg;
        const commitments = (0,_blob_blobsToCommitments_js__WEBPACK_IMPORTED_MODULE_2__.blobsToCommitments)({
            blobs,
            kzg,
        });
        if (typeof blobVersionedHashes === 'undefined')
            blobVersionedHashes = (0,_blob_commitmentsToVersionedHashes_js__WEBPACK_IMPORTED_MODULE_4__.commitmentsToVersionedHashes)({
                commitments,
            });
        if (typeof sidecars === 'undefined') {
            const proofs = (0,_blob_blobsToProofs_js__WEBPACK_IMPORTED_MODULE_3__.blobsToProofs)({ blobs, commitments, kzg });
            sidecars = (0,_blob_toBlobSidecars_js__WEBPACK_IMPORTED_MODULE_5__.toBlobSidecars)({ blobs, commitments, proofs });
        }
    }
    const serializedAccessList = (0,_serializeAccessList_js__WEBPACK_IMPORTED_MODULE_12__.serializeAccessList)(accessList);
    const serializedTransaction = [
        (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(chainId),
        nonce ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(nonce) : '0x',
        maxPriorityFeePerGas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(maxPriorityFeePerGas) : '0x',
        maxFeePerGas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(maxFeePerGas) : '0x',
        gas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(gas) : '0x',
        to ?? '0x',
        value ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(value) : '0x',
        data ?? '0x',
        serializedAccessList,
        maxFeePerBlobGas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(maxFeePerBlobGas) : '0x',
        blobVersionedHashes ?? [],
        ...toYParitySignatureArray(transaction, signature),
    ];
    const blobs = [];
    const commitments = [];
    const proofs = [];
    if (sidecars)
        for (let i = 0; i < sidecars.length; i++) {
            const { blob, commitment, proof } = sidecars[i];
            blobs.push(blob);
            commitments.push(commitment);
            proofs.push(proof);
        }
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_6__.concatHex)([
        '0x03',
        sidecars
            ? // If sidecars are enabled, envelope turns into a "wrapper":
                (0,_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_9__.toRlp)([serializedTransaction, blobs, commitments, proofs])
            : // If sidecars are disabled, standard envelope is used:
                (0,_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_9__.toRlp)(serializedTransaction),
    ]);
}
function serializeTransactionEIP1559(transaction, signature) {
    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionEIP1559)(transaction);
    const serializedAccessList = (0,_serializeAccessList_js__WEBPACK_IMPORTED_MODULE_12__.serializeAccessList)(accessList);
    const serializedTransaction = [
        (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(chainId),
        nonce ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(nonce) : '0x',
        maxPriorityFeePerGas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(maxPriorityFeePerGas) : '0x',
        maxFeePerGas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(maxFeePerGas) : '0x',
        gas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(gas) : '0x',
        to ?? '0x',
        value ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(value) : '0x',
        data ?? '0x',
        serializedAccessList,
        ...toYParitySignatureArray(transaction, signature),
    ];
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_6__.concatHex)([
        '0x02',
        (0,_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_9__.toRlp)(serializedTransaction),
    ]);
}
function serializeTransactionEIP2930(transaction, signature) {
    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionEIP2930)(transaction);
    const serializedAccessList = (0,_serializeAccessList_js__WEBPACK_IMPORTED_MODULE_12__.serializeAccessList)(accessList);
    const serializedTransaction = [
        (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(chainId),
        nonce ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(nonce) : '0x',
        gasPrice ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(gasPrice) : '0x',
        gas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(gas) : '0x',
        to ?? '0x',
        value ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(value) : '0x',
        data ?? '0x',
        serializedAccessList,
        ...toYParitySignatureArray(transaction, signature),
    ];
    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_6__.concatHex)([
        '0x01',
        (0,_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_9__.toRlp)(serializedTransaction),
    ]);
}
function serializeTransactionLegacy(transaction, signature) {
    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;
    (0,_assertTransaction_js__WEBPACK_IMPORTED_MODULE_10__.assertTransactionLegacy)(transaction);
    let serializedTransaction = [
        nonce ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(nonce) : '0x',
        gasPrice ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(gasPrice) : '0x',
        gas ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(gas) : '0x',
        to ?? '0x',
        value ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(value) : '0x',
        data ?? '0x',
    ];
    if (signature) {
        const v = (() => {
            // EIP-155 (inferred chainId)
            if (signature.v >= 35n) {
                const inferredChainId = (signature.v - 35n) / 2n;
                if (inferredChainId > 0)
                    return signature.v;
                return 27n + (signature.v === 35n ? 0n : 1n);
            }
            // EIP-155 (explicit chainId)
            if (chainId > 0)
                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);
            // Pre-EIP-155 (no chainId)
            const v = 27n + (signature.v === 27n ? 0n : 1n);
            if (signature.v !== v)
                throw new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_0__.InvalidLegacyVError({ v: signature.v });
            return v;
        })();
        const r = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_7__.trim)(signature.r);
        const s = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_7__.trim)(signature.s);
        serializedTransaction = [
            ...serializedTransaction,
            (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(v),
            r === '0x00' ? '0x' : r,
            s === '0x00' ? '0x' : s,
        ];
    }
    else if (chainId > 0) {
        serializedTransaction = [
            ...serializedTransaction,
            (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(chainId),
            '0x',
            '0x',
        ];
    }
    return (0,_encoding_toRlp_js__WEBPACK_IMPORTED_MODULE_9__.toRlp)(serializedTransaction);
}
function toYParitySignatureArray(transaction, signature_) {
    const signature = signature_ ?? transaction;
    const { v, yParity } = signature;
    if (typeof signature.r === 'undefined')
        return [];
    if (typeof signature.s === 'undefined')
        return [];
    if (typeof v === 'undefined' && typeof yParity === 'undefined')
        return [];
    const r = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_7__.trim)(signature.r);
    const s = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_7__.trim)(signature.s);
    const yParity_ = (() => {
        if (typeof yParity === 'number')
            return yParity ? (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(1) : '0x';
        if (v === 0n)
            return '0x';
        if (v === 1n)
            return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(1);
        return v === 27n ? '0x' : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_8__.numberToHex)(1);
    })();
    return [yParity_, r === '0x00' ? '0x' : r, s === '0x00' ? '0x' : s];
}
//# sourceMappingURL=serializeTransaction.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/typedData.js":
/*!***************************************************!*\
  !*** ./node_modules/viem/_esm/utils/typedData.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   domainSeparator: () => (/* binding */ domainSeparator),
/* harmony export */   getTypesForEIP712Domain: () => (/* binding */ getTypesForEIP712Domain),
/* harmony export */   serializeTypedData: () => (/* binding */ serializeTypedData),
/* harmony export */   validateTypedData: () => (/* binding */ validateTypedData)
/* harmony export */ });
/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/abi.js */ "./node_modules/viem/_esm/errors/abi.js");
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/address.js */ "./node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _errors_typedData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors/typedData.js */ "./node_modules/viem/_esm/errors/typedData.js");
/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./address/isAddress.js */ "./node_modules/viem/_esm/utils/address/isAddress.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data/size.js */ "./node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./encoding/toHex.js */ "./node_modules/viem/_esm/utils/encoding/toHex.js");
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./regex.js */ "./node_modules/viem/_esm/utils/regex.js");
/* harmony import */ var _signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./signature/hashTypedData.js */ "./node_modules/viem/_esm/utils/signature/hashTypedData.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/viem/_esm/utils/stringify.js");









function serializeTypedData(parameters) {
    const { domain: domain_, message: message_, primaryType, types, } = parameters;
    const normalizeData = (struct, data_) => {
        const data = { ...data_ };
        for (const param of struct) {
            const { name, type } = param;
            if (type === 'address')
                data[name] = data[name].toLowerCase();
        }
        return data;
    };
    const domain = (() => {
        if (!types.EIP712Domain)
            return {};
        if (!domain_)
            return {};
        return normalizeData(types.EIP712Domain, domain_);
    })();
    const message = (() => {
        if (primaryType === 'EIP712Domain')
            return undefined;
        return normalizeData(types[primaryType], message_);
    })();
    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_8__.stringify)({ domain, message, primaryType, types });
}
function validateTypedData(parameters) {
    const { domain, message, primaryType, types } = parameters;
    const validateData = (struct, data) => {
        for (const param of struct) {
            const { name, type } = param;
            const value = data[name];
            const integerMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_6__.integerRegex);
            if (integerMatch &&
                (typeof value === 'number' || typeof value === 'bigint')) {
                const [_type, base, size_] = integerMatch;
                // If number cannot be cast to a sized hex value, it is out of range
                // and will throw.
                (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.numberToHex)(value, {
                    signed: base === 'int',
                    size: Number.parseInt(size_) / 8,
                });
            }
            if (type === 'address' && typeof value === 'string' && !(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_3__.isAddress)(value))
                throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_1__.InvalidAddressError({ address: value });
            const bytesMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_6__.bytesRegex);
            if (bytesMatch) {
                const [_type, size_] = bytesMatch;
                if (size_ && (0,_data_size_js__WEBPACK_IMPORTED_MODULE_4__.size)(value) !== Number.parseInt(size_))
                    throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.BytesSizeMismatchError({
                        expectedSize: Number.parseInt(size_),
                        givenSize: (0,_data_size_js__WEBPACK_IMPORTED_MODULE_4__.size)(value),
                    });
            }
            const struct = types[type];
            if (struct) {
                validateReference(type);
                validateData(struct, value);
            }
        }
    };
    // Validate domain types.
    if (types.EIP712Domain && domain) {
        if (typeof domain !== 'object')
            throw new _errors_typedData_js__WEBPACK_IMPORTED_MODULE_2__.InvalidDomainError({ domain });
        validateData(types.EIP712Domain, domain);
    }
    // Validate message types.
    if (primaryType !== 'EIP712Domain') {
        if (types[primaryType])
            validateData(types[primaryType], message);
        else
            throw new _errors_typedData_js__WEBPACK_IMPORTED_MODULE_2__.InvalidPrimaryTypeError({ primaryType, types });
    }
}
function getTypesForEIP712Domain({ domain, }) {
    return [
        typeof domain?.name === 'string' && { name: 'name', type: 'string' },
        domain?.version && { name: 'version', type: 'string' },
        (typeof domain?.chainId === 'number' ||
            typeof domain?.chainId === 'bigint') && {
            name: 'chainId',
            type: 'uint256',
        },
        domain?.verifyingContract && {
            name: 'verifyingContract',
            type: 'address',
        },
        domain?.salt && { name: 'salt', type: 'bytes32' },
    ].filter(Boolean);
}
function domainSeparator({ domain }) {
    return (0,_signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_7__.hashDomain)({
        domain,
        types: {
            EIP712Domain: getTypesForEIP712Domain({ domain }),
        },
    });
}
/** @internal */
function validateReference(type) {
    // Struct type must not be a Solidity type.
    if (type === 'address' ||
        type === 'bool' ||
        type === 'string' ||
        type.startsWith('bytes') ||
        type.startsWith('uint') ||
        type.startsWith('int'))
        throw new _errors_typedData_js__WEBPACK_IMPORTED_MODULE_2__.InvalidStructTypeError({ type });
}
//# sourceMappingURL=typedData.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/uid.js":
/*!*********************************************!*\
  !*** ./node_modules/viem/_esm/utils/uid.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   uid: () => (/* binding */ uid)
/* harmony export */ });
const size = 256;
let index = size;
let buffer;
function uid(length = 11) {
    if (!buffer || index + length > size * 2) {
        buffer = '';
        index = 0;
        for (let i = 0; i < size; i++) {
            buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1);
        }
    }
    return buffer.substring(index, index++ + length);
}
//# sourceMappingURL=uid.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/unit/formatEther.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/unit/formatEther.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatEther: () => (/* binding */ formatEther)
/* harmony export */ });
/* harmony import */ var _constants_unit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/unit.js */ "./node_modules/viem/_esm/constants/unit.js");
/* harmony import */ var _formatUnits_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatUnits.js */ "./node_modules/viem/_esm/utils/unit/formatUnits.js");


/**
 * Converts numerical wei to a string representation of ether.
 *
 * - Docs: https://viem.sh/docs/utilities/formatEther
 *
 * @example
 * import { formatEther } from 'viem'
 *
 * formatEther(1000000000000000000n)
 * // '1'
 */
function formatEther(wei, unit = 'wei') {
    return (0,_formatUnits_js__WEBPACK_IMPORTED_MODULE_1__.formatUnits)(wei, _constants_unit_js__WEBPACK_IMPORTED_MODULE_0__.etherUnits[unit]);
}
//# sourceMappingURL=formatEther.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/unit/formatGwei.js":
/*!*********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/unit/formatGwei.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatGwei: () => (/* binding */ formatGwei)
/* harmony export */ });
/* harmony import */ var _constants_unit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/unit.js */ "./node_modules/viem/_esm/constants/unit.js");
/* harmony import */ var _formatUnits_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatUnits.js */ "./node_modules/viem/_esm/utils/unit/formatUnits.js");


/**
 * Converts numerical wei to a string representation of gwei.
 *
 * - Docs: https://viem.sh/docs/utilities/formatGwei
 *
 * @example
 * import { formatGwei } from 'viem'
 *
 * formatGwei(1000000000n)
 * // '1'
 */
function formatGwei(wei, unit = 'wei') {
    return (0,_formatUnits_js__WEBPACK_IMPORTED_MODULE_1__.formatUnits)(wei, _constants_unit_js__WEBPACK_IMPORTED_MODULE_0__.gweiUnits[unit]);
}
//# sourceMappingURL=formatGwei.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/unit/formatUnits.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/unit/formatUnits.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatUnits: () => (/* binding */ formatUnits)
/* harmony export */ });
/**
 *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..
 *
 * - Docs: https://viem.sh/docs/utilities/formatUnits
 *
 * @example
 * import { formatUnits } from 'viem'
 *
 * formatUnits(420000000000n, 9)
 * // '420'
 */
function formatUnits(value, decimals) {
    let display = value.toString();
    const negative = display.startsWith('-');
    if (negative)
        display = display.slice(1);
    display = display.padStart(decimals, '0');
    let [integer, fraction] = [
        display.slice(0, display.length - decimals),
        display.slice(display.length - decimals),
    ];
    fraction = fraction.replace(/(0+)$/, '');
    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;
}
//# sourceMappingURL=formatUnits.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/unit/parseEther.js":
/*!*********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/unit/parseEther.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseEther: () => (/* binding */ parseEther)
/* harmony export */ });
/* harmony import */ var _constants_unit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/unit.js */ "./node_modules/viem/_esm/constants/unit.js");
/* harmony import */ var _parseUnits_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parseUnits.js */ "./node_modules/viem/_esm/utils/unit/parseUnits.js");


/**
 * Converts a string representation of ether to numerical wei.
 *
 * - Docs: https://viem.sh/docs/utilities/parseEther
 *
 * @example
 * import { parseEther } from 'viem'
 *
 * parseEther('420')
 * // 420000000000000000000n
 */
function parseEther(ether, unit = 'wei') {
    return (0,_parseUnits_js__WEBPACK_IMPORTED_MODULE_1__.parseUnits)(ether, _constants_unit_js__WEBPACK_IMPORTED_MODULE_0__.etherUnits[unit]);
}
//# sourceMappingURL=parseEther.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/unit/parseGwei.js":
/*!********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/unit/parseGwei.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseGwei: () => (/* binding */ parseGwei)
/* harmony export */ });
/* harmony import */ var _constants_unit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/unit.js */ "./node_modules/viem/_esm/constants/unit.js");
/* harmony import */ var _parseUnits_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parseUnits.js */ "./node_modules/viem/_esm/utils/unit/parseUnits.js");


/**
 * Converts a string representation of gwei to numerical wei.
 *
 * - Docs: https://viem.sh/docs/utilities/parseGwei
 *
 * @example
 * import { parseGwei } from 'viem'
 *
 * parseGwei('420')
 * // 420000000000n
 */
function parseGwei(ether, unit = 'wei') {
    return (0,_parseUnits_js__WEBPACK_IMPORTED_MODULE_1__.parseUnits)(ether, _constants_unit_js__WEBPACK_IMPORTED_MODULE_0__.gweiUnits[unit]);
}
//# sourceMappingURL=parseGwei.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/unit/parseUnits.js":
/*!*********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/unit/parseUnits.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseUnits: () => (/* binding */ parseUnits)
/* harmony export */ });
/* harmony import */ var _errors_unit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/unit.js */ "./node_modules/viem/_esm/errors/unit.js");

/**
 * Multiplies a string representation of a number by a given exponent of base 10 (10exponent).
 *
 * - Docs: https://viem.sh/docs/utilities/parseUnits
 *
 * @example
 * import { parseUnits } from 'viem'
 *
 * parseUnits('420', 9)
 * // 420000000000n
 */
function parseUnits(value, decimals) {
    if (!/^(-?)([0-9]*)\.?([0-9]*)$/.test(value))
        throw new _errors_unit_js__WEBPACK_IMPORTED_MODULE_0__.InvalidDecimalNumberError({ value });
    let [integer, fraction = '0'] = value.split('.');
    const negative = integer.startsWith('-');
    if (negative)
        integer = integer.slice(1);
    // trim trailing zeros.
    fraction = fraction.replace(/(0+)$/, '');
    // round off if the fraction is larger than the number of decimals.
    if (decimals === 0) {
        if (Math.round(Number(`.${fraction}`)) === 1)
            integer = `${BigInt(integer) + 1n}`;
        fraction = '';
    }
    else if (fraction.length > decimals) {
        const [left, unit, right] = [
            fraction.slice(0, decimals - 1),
            fraction.slice(decimals - 1, decimals),
            fraction.slice(decimals),
        ];
        const rounded = Math.round(Number(`${unit}.${right}`));
        if (rounded > 9)
            fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, '0');
        else
            fraction = `${left}${rounded}`;
        if (fraction.length > decimals) {
            fraction = fraction.slice(1);
            integer = `${BigInt(integer) + 1n}`;
        }
        fraction = fraction.slice(0, decimals);
    }
    else {
        fraction = fraction.padEnd(decimals, '0');
    }
    return BigInt(`${negative ? '-' : ''}${integer}${fraction}`);
}
//# sourceMappingURL=parseUnits.js.map

/***/ }),

/***/ "./node_modules/viem/_esm/utils/wait.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/utils/wait.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   wait: () => (/* binding */ wait)
/* harmony export */ });
async function wait(time) {
    return new Promise((res) => setTimeout(res, time));
}
//# sourceMappingURL=wait.js.map

/***/ })

}]);